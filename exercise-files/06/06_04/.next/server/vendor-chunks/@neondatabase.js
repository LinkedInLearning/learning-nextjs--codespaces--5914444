"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@neondatabase";
exports.ids = ["vendor-chunks/@neondatabase"];
exports.modules = {

/***/ "(rsc)/./node_modules/@neondatabase/serverless/index.mjs":
/*!*********************************************************!*\
  !*** ./node_modules/@neondatabase/serverless/index.mjs ***!
  \*********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Client: () => (/* binding */ xn),\n/* harmony export */   ClientBase: () => (/* binding */ export_ClientBase),\n/* harmony export */   Connection: () => (/* binding */ export_Connection),\n/* harmony export */   DatabaseError: () => (/* binding */ export_DatabaseError),\n/* harmony export */   NeonDbError: () => (/* binding */ Ae),\n/* harmony export */   Pool: () => (/* binding */ Zs),\n/* harmony export */   Query: () => (/* binding */ export_Query),\n/* harmony export */   defaults: () => (/* binding */ export_defaults),\n/* harmony export */   neon: () => (/* binding */ Ys),\n/* harmony export */   neonConfig: () => (/* binding */ _e),\n/* harmony export */   types: () => (/* binding */ export_types)\n/* harmony export */ });\nvar Xs=Object.create;var Ie=Object.defineProperty;var eo=Object.getOwnPropertyDescriptor;var to=Object.getOwnPropertyNames;var ro=Object.getPrototypeOf,no=Object.prototype.hasOwnProperty;var io=(r,e,t)=>e in r?Ie(r,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):\nr[e]=t;var a=(r,e)=>Ie(r,\"name\",{value:e,configurable:!0});var K=(r,e)=>()=>(r&&(e=r(r=0)),e);var I=(r,e)=>()=>(e||r((e={exports:{}}).exports,e),e.exports),X=(r,e)=>{for(var t in e)\nIe(r,t,{get:e[t],enumerable:!0})},_n=(r,e,t,n)=>{if(e&&typeof e==\"object\"||typeof e==\n\"function\")for(let i of to(e))!no.call(r,i)&&i!==t&&Ie(r,i,{get:()=>e[i],enumerable:!(n=\neo(e,i))||n.enumerable});return r};var We=(r,e,t)=>(t=r!=null?Xs(ro(r)):{},_n(e||!r||!r.__esModule?Ie(t,\"default\",{\nvalue:r,enumerable:!0}):t,r)),k=r=>_n(Ie({},\"__esModule\",{value:!0}),r);var T=(r,e,t)=>(io(r,typeof e!=\"symbol\"?e+\"\":e,t),t);var In=I(it=>{\"use strict\";p();it.byteLength=oo;it.toByteArray=uo;it.fromByteArray=\nlo;var oe=[],ee=[],so=typeof Uint8Array<\"u\"?Uint8Array:Array,It=\"ABCDEFGHIJKLMNO\\\nPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";for(Ee=0,An=It.length;Ee<An;++Ee)\noe[Ee]=It[Ee],ee[It.charCodeAt(Ee)]=Ee;var Ee,An;ee[45]=62;ee[95]=63;function Cn(r){\nvar e=r.length;if(e%4>0)throw new Error(\"Invalid string. Length must be a multip\\\nle of 4\");var t=r.indexOf(\"=\");t===-1&&(t=e);var n=t===e?0:4-t%4;return[t,n]}a(Cn,\n\"getLens\");function oo(r){var e=Cn(r),t=e[0],n=e[1];return(t+n)*3/4-n}a(oo,\"byte\\\nLength\");function ao(r,e,t){return(e+t)*3/4-t}a(ao,\"_byteLength\");function uo(r){\nvar e,t=Cn(r),n=t[0],i=t[1],s=new so(ao(r,n,i)),o=0,u=i>0?n-4:n,c;for(c=0;c<u;c+=\n4)e=ee[r.charCodeAt(c)]<<18|ee[r.charCodeAt(c+1)]<<12|ee[r.charCodeAt(c+2)]<<6|ee[r.\ncharCodeAt(c+3)],s[o++]=e>>16&255,s[o++]=e>>8&255,s[o++]=e&255;return i===2&&(e=\nee[r.charCodeAt(c)]<<2|ee[r.charCodeAt(c+1)]>>4,s[o++]=e&255),i===1&&(e=ee[r.charCodeAt(\nc)]<<10|ee[r.charCodeAt(c+1)]<<4|ee[r.charCodeAt(c+2)]>>2,s[o++]=e>>8&255,s[o++]=\ne&255),s}a(uo,\"toByteArray\");function co(r){return oe[r>>18&63]+oe[r>>12&63]+oe[r>>\n6&63]+oe[r&63]}a(co,\"tripletToBase64\");function ho(r,e,t){for(var n,i=[],s=e;s<t;s+=\n3)n=(r[s]<<16&16711680)+(r[s+1]<<8&65280)+(r[s+2]&255),i.push(co(n));return i.join(\n\"\")}a(ho,\"encodeChunk\");function lo(r){for(var e,t=r.length,n=t%3,i=[],s=16383,o=0,\nu=t-n;o<u;o+=s)i.push(ho(r,o,o+s>u?u:o+s));return n===1?(e=r[t-1],i.push(oe[e>>2]+\noe[e<<4&63]+\"==\")):n===2&&(e=(r[t-2]<<8)+r[t-1],i.push(oe[e>>10]+oe[e>>4&63]+oe[e<<\n2&63]+\"=\")),i.join(\"\")}a(lo,\"fromByteArray\")});var Tn=I(Tt=>{p();Tt.read=function(r,e,t,n,i){var s,o,u=i*8-n-1,c=(1<<u)-1,h=c>>\n1,l=-7,y=t?i-1:0,E=t?-1:1,_=r[e+y];for(y+=E,s=_&(1<<-l)-1,_>>=-l,l+=u;l>0;s=s*256+\nr[e+y],y+=E,l-=8);for(o=s&(1<<-l)-1,s>>=-l,l+=n;l>0;o=o*256+r[e+y],y+=E,l-=8);if(s===\n0)s=1-h;else{if(s===c)return o?NaN:(_?-1:1)*(1/0);o=o+Math.pow(2,n),s=s-h}return(_?\n-1:1)*o*Math.pow(2,s-n)};Tt.write=function(r,e,t,n,i,s){var o,u,c,h=s*8-i-1,l=(1<<\nh)-1,y=l>>1,E=i===23?Math.pow(2,-24)-Math.pow(2,-77):0,_=n?0:s-1,P=n?1:-1,N=e<0||\ne===0&&1/e<0?1:0;for(e=Math.abs(e),isNaN(e)||e===1/0?(u=isNaN(e)?1:0,o=l):(o=Math.\nfloor(Math.log(e)/Math.LN2),e*(c=Math.pow(2,-o))<1&&(o--,c*=2),o+y>=1?e+=E/c:e+=\nE*Math.pow(2,1-y),e*c>=2&&(o++,c/=2),o+y>=l?(u=0,o=l):o+y>=1?(u=(e*c-1)*Math.pow(\n2,i),o=o+y):(u=e*Math.pow(2,y-1)*Math.pow(2,i),o=0));i>=8;r[t+_]=u&255,_+=P,u/=256,\ni-=8);for(o=o<<i|u,h+=i;h>0;r[t+_]=o&255,_+=P,o/=256,h-=8);r[t+_-P]|=N*128}});var Gn=I(Le=>{\"use strict\";p();var Pt=In(),Pe=Tn(),Pn=typeof Symbol==\"function\"&&\ntypeof Symbol.for==\"function\"?Symbol.for(\"nodejs.util.inspect.custom\"):null;Le.Buffer=\nf;Le.SlowBuffer=wo;Le.INSPECT_MAX_BYTES=50;var st=2147483647;Le.kMaxLength=st;f.\nTYPED_ARRAY_SUPPORT=fo();!f.TYPED_ARRAY_SUPPORT&&typeof console<\"u\"&&typeof console.\nerror==\"function\"&&console.error(\"This browser lacks typed array (Uint8Array) su\\\npport which is required by `buffer` v5.x. Use `buffer` v4.x if you require old b\\\nrowser support.\");function fo(){try{let r=new Uint8Array(1),e={foo:function(){return 42}};\nreturn Object.setPrototypeOf(e,Uint8Array.prototype),Object.setPrototypeOf(r,e),\nr.foo()===42}catch{return!1}}a(fo,\"typedArraySupport\");Object.defineProperty(f.prototype,\n\"parent\",{enumerable:!0,get:function(){if(f.isBuffer(this))return this.buffer}});\nObject.defineProperty(f.prototype,\"offset\",{enumerable:!0,get:function(){if(f.isBuffer(\nthis))return this.byteOffset}});function le(r){if(r>st)throw new RangeError('The\\\n value \"'+r+'\" is invalid for option \"size\"');let e=new Uint8Array(r);return Object.\nsetPrototypeOf(e,f.prototype),e}a(le,\"createBuffer\");function f(r,e,t){if(typeof r==\n\"number\"){if(typeof e==\"string\")throw new TypeError('The \"string\" argument must \\\nbe of type string. Received type number');return Ft(r)}return Fn(r,e,t)}a(f,\"Buf\\\nfer\");f.poolSize=8192;function Fn(r,e,t){if(typeof r==\"string\")return yo(r,e);if(ArrayBuffer.\nisView(r))return mo(r);if(r==null)throw new TypeError(\"The first argument must b\\\ne one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received\\\n type \"+typeof r);if(ae(r,ArrayBuffer)||r&&ae(r.buffer,ArrayBuffer)||typeof SharedArrayBuffer<\n\"u\"&&(ae(r,SharedArrayBuffer)||r&&ae(r.buffer,SharedArrayBuffer)))return Lt(r,e,\nt);if(typeof r==\"number\")throw new TypeError('The \"value\" argument must not be o\\\nf type number. Received type number');let n=r.valueOf&&r.valueOf();if(n!=null&&n!==\nr)return f.from(n,e,t);let i=go(r);if(i)return i;if(typeof Symbol<\"u\"&&Symbol.toPrimitive!=\nnull&&typeof r[Symbol.toPrimitive]==\"function\")return f.from(r[Symbol.toPrimitive](\n\"string\"),e,t);throw new TypeError(\"The first argument must be one of type strin\\\ng, Buffer, ArrayBuffer, Array, or Array-like Object. Received type \"+typeof r)}a(\nFn,\"from\");f.from=function(r,e,t){return Fn(r,e,t)};Object.setPrototypeOf(f.prototype,\nUint8Array.prototype);Object.setPrototypeOf(f,Uint8Array);function Mn(r){if(typeof r!=\n\"number\")throw new TypeError('\"size\" argument must be of type number');if(r<0)throw new RangeError(\n'The value \"'+r+'\" is invalid for option \"size\"')}a(Mn,\"assertSize\");function po(r,e,t){\nreturn Mn(r),r<=0?le(r):e!==void 0?typeof t==\"string\"?le(r).fill(e,t):le(r).fill(\ne):le(r)}a(po,\"alloc\");f.alloc=function(r,e,t){return po(r,e,t)};function Ft(r){\nreturn Mn(r),le(r<0?0:Mt(r)|0)}a(Ft,\"allocUnsafe\");f.allocUnsafe=function(r){return Ft(\nr)};f.allocUnsafeSlow=function(r){return Ft(r)};function yo(r,e){if((typeof e!=\"\\\nstring\"||e===\"\")&&(e=\"utf8\"),!f.isEncoding(e))throw new TypeError(\"Unknown encod\\\ning: \"+e);let t=Dn(r,e)|0,n=le(t),i=n.write(r,e);return i!==t&&(n=n.slice(0,i)),\nn}a(yo,\"fromString\");function Bt(r){let e=r.length<0?0:Mt(r.length)|0,t=le(e);for(let n=0;n<\ne;n+=1)t[n]=r[n]&255;return t}a(Bt,\"fromArrayLike\");function mo(r){if(ae(r,Uint8Array)){\nlet e=new Uint8Array(r);return Lt(e.buffer,e.byteOffset,e.byteLength)}return Bt(\nr)}a(mo,\"fromArrayView\");function Lt(r,e,t){if(e<0||r.byteLength<e)throw new RangeError(\n'\"offset\" is outside of buffer bounds');if(r.byteLength<e+(t||0))throw new RangeError(\n'\"length\" is outside of buffer bounds');let n;return e===void 0&&t===void 0?n=new Uint8Array(\nr):t===void 0?n=new Uint8Array(r,e):n=new Uint8Array(r,e,t),Object.setPrototypeOf(\nn,f.prototype),n}a(Lt,\"fromArrayBuffer\");function go(r){if(f.isBuffer(r)){let e=Mt(\nr.length)|0,t=le(e);return t.length===0||r.copy(t,0,0,e),t}if(r.length!==void 0)\nreturn typeof r.length!=\"number\"||Ot(r.length)?le(0):Bt(r);if(r.type===\"Buffer\"&&\nArray.isArray(r.data))return Bt(r.data)}a(go,\"fromObject\");function Mt(r){if(r>=\nst)throw new RangeError(\"Attempt to allocate Buffer larger than maximum size: 0x\"+\nst.toString(16)+\" bytes\");return r|0}a(Mt,\"checked\");function wo(r){return+r!=r&&\n(r=0),f.alloc(+r)}a(wo,\"SlowBuffer\");f.isBuffer=a(function(e){return e!=null&&e.\n_isBuffer===!0&&e!==f.prototype},\"isBuffer\");f.compare=a(function(e,t){if(ae(e,Uint8Array)&&\n(e=f.from(e,e.offset,e.byteLength)),ae(t,Uint8Array)&&(t=f.from(t,t.offset,t.byteLength)),\n!f.isBuffer(e)||!f.isBuffer(t))throw new TypeError('The \"buf1\", \"buf2\" arguments\\\n must be one of type Buffer or Uint8Array');if(e===t)return 0;let n=e.length,i=t.\nlength;for(let s=0,o=Math.min(n,i);s<o;++s)if(e[s]!==t[s]){n=e[s],i=t[s];break}return n<\ni?-1:i<n?1:0},\"compare\");f.isEncoding=a(function(e){switch(String(e).toLowerCase()){case\"\\\nhex\":case\"utf8\":case\"utf-8\":case\"ascii\":case\"latin1\":case\"binary\":case\"base64\":case\"\\\nucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return!0;default:return!1}},\"isEn\\\ncoding\");f.concat=a(function(e,t){if(!Array.isArray(e))throw new TypeError('\"lis\\\nt\" argument must be an Array of Buffers');if(e.length===0)return f.alloc(0);let n;\nif(t===void 0)for(t=0,n=0;n<e.length;++n)t+=e[n].length;let i=f.allocUnsafe(t),s=0;\nfor(n=0;n<e.length;++n){let o=e[n];if(ae(o,Uint8Array))s+o.length>i.length?(f.isBuffer(\no)||(o=f.from(o)),o.copy(i,s)):Uint8Array.prototype.set.call(i,o,s);else if(f.isBuffer(\no))o.copy(i,s);else throw new TypeError('\"list\" argument must be an Array of Buf\\\nfers');s+=o.length}return i},\"concat\");function Dn(r,e){if(f.isBuffer(r))return r.\nlength;if(ArrayBuffer.isView(r)||ae(r,ArrayBuffer))return r.byteLength;if(typeof r!=\n\"string\")throw new TypeError('The \"string\" argument must be one of type string, \\\nBuffer, or ArrayBuffer. Received type '+typeof r);let t=r.length,n=arguments.length>\n2&&arguments[2]===!0;if(!n&&t===0)return 0;let i=!1;for(;;)switch(e){case\"ascii\":case\"\\\nlatin1\":case\"binary\":return t;case\"utf8\":case\"utf-8\":return Rt(r).length;case\"uc\\\ns2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return t*2;case\"hex\":return t>>>1;case\"\\\nbase64\":return Hn(r).length;default:if(i)return n?-1:Rt(r).length;e=(\"\"+e).toLowerCase(),\ni=!0}}a(Dn,\"byteLength\");f.byteLength=Dn;function bo(r,e,t){let n=!1;if((e===void 0||\ne<0)&&(e=0),e>this.length||((t===void 0||t>this.length)&&(t=this.length),t<=0)||\n(t>>>=0,e>>>=0,t<=e))return\"\";for(r||(r=\"utf8\");;)switch(r){case\"hex\":return Po(\nthis,e,t);case\"utf8\":case\"utf-8\":return kn(this,e,t);case\"ascii\":return Io(this,\ne,t);case\"latin1\":case\"binary\":return To(this,e,t);case\"base64\":return Ao(this,e,\nt);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return Bo(this,e,t);default:\nif(n)throw new TypeError(\"Unknown encoding: \"+r);r=(r+\"\").toLowerCase(),n=!0}}a(\nbo,\"slowToString\");f.prototype._isBuffer=!0;function ve(r,e,t){let n=r[e];r[e]=r[t],\nr[t]=n}a(ve,\"swap\");f.prototype.swap16=a(function(){let e=this.length;if(e%2!==0)\nthrow new RangeError(\"Buffer size must be a multiple of 16-bits\");for(let t=0;t<\ne;t+=2)ve(this,t,t+1);return this},\"swap16\");f.prototype.swap32=a(function(){let e=this.\nlength;if(e%4!==0)throw new RangeError(\"Buffer size must be a multiple of 32-bit\\\ns\");for(let t=0;t<e;t+=4)ve(this,t,t+3),ve(this,t+1,t+2);return this},\"swap32\");\nf.prototype.swap64=a(function(){let e=this.length;if(e%8!==0)throw new RangeError(\n\"Buffer size must be a multiple of 64-bits\");for(let t=0;t<e;t+=8)ve(this,t,t+7),\nve(this,t+1,t+6),ve(this,t+2,t+5),ve(this,t+3,t+4);return this},\"swap64\");f.prototype.\ntoString=a(function(){let e=this.length;return e===0?\"\":arguments.length===0?kn(\nthis,0,e):bo.apply(this,arguments)},\"toString\");f.prototype.toLocaleString=f.prototype.\ntoString;f.prototype.equals=a(function(e){if(!f.isBuffer(e))throw new TypeError(\n\"Argument must be a Buffer\");return this===e?!0:f.compare(this,e)===0},\"equals\");\nf.prototype.inspect=a(function(){let e=\"\",t=Le.INSPECT_MAX_BYTES;return e=this.toString(\n\"hex\",0,t).replace(/(.{2})/g,\"$1 \").trim(),this.length>t&&(e+=\" ... \"),\"<Buffer \"+\ne+\">\"},\"inspect\");Pn&&(f.prototype[Pn]=f.prototype.inspect);f.prototype.compare=\na(function(e,t,n,i,s){if(ae(e,Uint8Array)&&(e=f.from(e,e.offset,e.byteLength)),!f.\nisBuffer(e))throw new TypeError('The \"target\" argument must be one of type Buffe\\\nr or Uint8Array. Received type '+typeof e);if(t===void 0&&(t=0),n===void 0&&(n=e?\ne.length:0),i===void 0&&(i=0),s===void 0&&(s=this.length),t<0||n>e.length||i<0||\ns>this.length)throw new RangeError(\"out of range index\");if(i>=s&&t>=n)return 0;\nif(i>=s)return-1;if(t>=n)return 1;if(t>>>=0,n>>>=0,i>>>=0,s>>>=0,this===e)return 0;\nlet o=s-i,u=n-t,c=Math.min(o,u),h=this.slice(i,s),l=e.slice(t,n);for(let y=0;y<c;++y)\nif(h[y]!==l[y]){o=h[y],u=l[y];break}return o<u?-1:u<o?1:0},\"compare\");function On(r,e,t,n,i){\nif(r.length===0)return-1;if(typeof t==\"string\"?(n=t,t=0):t>2147483647?t=2147483647:\nt<-2147483648&&(t=-2147483648),t=+t,Ot(t)&&(t=i?0:r.length-1),t<0&&(t=r.length+t),\nt>=r.length){if(i)return-1;t=r.length-1}else if(t<0)if(i)t=0;else return-1;if(typeof e==\n\"string\"&&(e=f.from(e,n)),f.isBuffer(e))return e.length===0?-1:Bn(r,e,t,n,i);if(typeof e==\n\"number\")return e=e&255,typeof Uint8Array.prototype.indexOf==\"function\"?i?Uint8Array.\nprototype.indexOf.call(r,e,t):Uint8Array.prototype.lastIndexOf.call(r,e,t):Bn(r,\n[e],t,n,i);throw new TypeError(\"val must be string, number or Buffer\")}a(On,\"bid\\\nirectionalIndexOf\");function Bn(r,e,t,n,i){let s=1,o=r.length,u=e.length;if(n!==\nvoid 0&&(n=String(n).toLowerCase(),n===\"ucs2\"||n===\"ucs-2\"||n===\"utf16le\"||n===\"\\\nutf-16le\")){if(r.length<2||e.length<2)return-1;s=2,o/=2,u/=2,t/=2}function c(l,y){\nreturn s===1?l[y]:l.readUInt16BE(y*s)}a(c,\"read\");let h;if(i){let l=-1;for(h=t;h<\no;h++)if(c(r,h)===c(e,l===-1?0:h-l)){if(l===-1&&(l=h),h-l+1===u)return l*s}else l!==\n-1&&(h-=h-l),l=-1}else for(t+u>o&&(t=o-u),h=t;h>=0;h--){let l=!0;for(let y=0;y<u;y++)\nif(c(r,h+y)!==c(e,y)){l=!1;break}if(l)return h}return-1}a(Bn,\"arrayIndexOf\");f.prototype.\nincludes=a(function(e,t,n){return this.indexOf(e,t,n)!==-1},\"includes\");f.prototype.\nindexOf=a(function(e,t,n){return On(this,e,t,n,!0)},\"indexOf\");f.prototype.lastIndexOf=\na(function(e,t,n){return On(this,e,t,n,!1)},\"lastIndexOf\");function So(r,e,t,n){\nt=Number(t)||0;let i=r.length-t;n?(n=Number(n),n>i&&(n=i)):n=i;let s=e.length;n>\ns/2&&(n=s/2);let o;for(o=0;o<n;++o){let u=parseInt(e.substr(o*2,2),16);if(Ot(u))\nreturn o;r[t+o]=u}return o}a(So,\"hexWrite\");function xo(r,e,t,n){return ot(Rt(e,\nr.length-t),r,t,n)}a(xo,\"utf8Write\");function Eo(r,e,t,n){return ot(Mo(e),r,t,n)}\na(Eo,\"asciiWrite\");function vo(r,e,t,n){return ot(Hn(e),r,t,n)}a(vo,\"base64Write\");\nfunction _o(r,e,t,n){return ot(Do(e,r.length-t),r,t,n)}a(_o,\"ucs2Write\");f.prototype.\nwrite=a(function(e,t,n,i){if(t===void 0)i=\"utf8\",n=this.length,t=0;else if(n===void 0&&\ntypeof t==\"string\")i=t,n=this.length,t=0;else if(isFinite(t))t=t>>>0,isFinite(n)?\n(n=n>>>0,i===void 0&&(i=\"utf8\")):(i=n,n=void 0);else throw new Error(\"Buffer.wri\\\nte(string, encoding, offset[, length]) is no longer supported\");let s=this.length-\nt;if((n===void 0||n>s)&&(n=s),e.length>0&&(n<0||t<0)||t>this.length)throw new RangeError(\n\"Attempt to write outside buffer bounds\");i||(i=\"utf8\");let o=!1;for(;;)switch(i){case\"\\\nhex\":return So(this,e,t,n);case\"utf8\":case\"utf-8\":return xo(this,e,t,n);case\"asc\\\nii\":case\"latin1\":case\"binary\":return Eo(this,e,t,n);case\"base64\":return vo(this,\ne,t,n);case\"ucs2\":case\"ucs-2\":case\"utf16le\":case\"utf-16le\":return _o(this,e,t,n);default:\nif(o)throw new TypeError(\"Unknown encoding: \"+i);i=(\"\"+i).toLowerCase(),o=!0}},\"\\\nwrite\");f.prototype.toJSON=a(function(){return{type:\"Buffer\",data:Array.prototype.\nslice.call(this._arr||this,0)}},\"toJSON\");function Ao(r,e,t){return e===0&&t===r.\nlength?Pt.fromByteArray(r):Pt.fromByteArray(r.slice(e,t))}a(Ao,\"base64Slice\");function kn(r,e,t){\nt=Math.min(r.length,t);let n=[],i=e;for(;i<t;){let s=r[i],o=null,u=s>239?4:s>223?\n3:s>191?2:1;if(i+u<=t){let c,h,l,y;switch(u){case 1:s<128&&(o=s);break;case 2:c=\nr[i+1],(c&192)===128&&(y=(s&31)<<6|c&63,y>127&&(o=y));break;case 3:c=r[i+1],h=r[i+\n2],(c&192)===128&&(h&192)===128&&(y=(s&15)<<12|(c&63)<<6|h&63,y>2047&&(y<55296||\ny>57343)&&(o=y));break;case 4:c=r[i+1],h=r[i+2],l=r[i+3],(c&192)===128&&(h&192)===\n128&&(l&192)===128&&(y=(s&15)<<18|(c&63)<<12|(h&63)<<6|l&63,y>65535&&y<1114112&&\n(o=y))}}o===null?(o=65533,u=1):o>65535&&(o-=65536,n.push(o>>>10&1023|55296),o=56320|\no&1023),n.push(o),i+=u}return Co(n)}a(kn,\"utf8Slice\");var Ln=4096;function Co(r){\nlet e=r.length;if(e<=Ln)return String.fromCharCode.apply(String,r);let t=\"\",n=0;\nfor(;n<e;)t+=String.fromCharCode.apply(String,r.slice(n,n+=Ln));return t}a(Co,\"d\\\necodeCodePointsArray\");function Io(r,e,t){let n=\"\";t=Math.min(r.length,t);for(let i=e;i<\nt;++i)n+=String.fromCharCode(r[i]&127);return n}a(Io,\"asciiSlice\");function To(r,e,t){\nlet n=\"\";t=Math.min(r.length,t);for(let i=e;i<t;++i)n+=String.fromCharCode(r[i]);\nreturn n}a(To,\"latin1Slice\");function Po(r,e,t){let n=r.length;(!e||e<0)&&(e=0),\n(!t||t<0||t>n)&&(t=n);let i=\"\";for(let s=e;s<t;++s)i+=Oo[r[s]];return i}a(Po,\"he\\\nxSlice\");function Bo(r,e,t){let n=r.slice(e,t),i=\"\";for(let s=0;s<n.length-1;s+=\n2)i+=String.fromCharCode(n[s]+n[s+1]*256);return i}a(Bo,\"utf16leSlice\");f.prototype.\nslice=a(function(e,t){let n=this.length;e=~~e,t=t===void 0?n:~~t,e<0?(e+=n,e<0&&\n(e=0)):e>n&&(e=n),t<0?(t+=n,t<0&&(t=0)):t>n&&(t=n),t<e&&(t=e);let i=this.subarray(\ne,t);return Object.setPrototypeOf(i,f.prototype),i},\"slice\");function U(r,e,t){if(r%\n1!==0||r<0)throw new RangeError(\"offset is not uint\");if(r+e>t)throw new RangeError(\n\"Trying to access beyond buffer length\")}a(U,\"checkOffset\");f.prototype.readUintLE=\nf.prototype.readUIntLE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||U(e,t,this.length);let i=this[e],\ns=1,o=0;for(;++o<t&&(s*=256);)i+=this[e+o]*s;return i},\"readUIntLE\");f.prototype.\nreadUintBE=f.prototype.readUIntBE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||U(e,t,this.\nlength);let i=this[e+--t],s=1;for(;t>0&&(s*=256);)i+=this[e+--t]*s;return i},\"re\\\nadUIntBE\");f.prototype.readUint8=f.prototype.readUInt8=a(function(e,t){return e=\ne>>>0,t||U(e,1,this.length),this[e]},\"readUInt8\");f.prototype.readUint16LE=f.prototype.\nreadUInt16LE=a(function(e,t){return e=e>>>0,t||U(e,2,this.length),this[e]|this[e+\n1]<<8},\"readUInt16LE\");f.prototype.readUint16BE=f.prototype.readUInt16BE=a(function(e,t){\nreturn e=e>>>0,t||U(e,2,this.length),this[e]<<8|this[e+1]},\"readUInt16BE\");f.prototype.\nreadUint32LE=f.prototype.readUInt32LE=a(function(e,t){return e=e>>>0,t||U(e,4,this.\nlength),(this[e]|this[e+1]<<8|this[e+2]<<16)+this[e+3]*16777216},\"readUInt32LE\");\nf.prototype.readUint32BE=f.prototype.readUInt32BE=a(function(e,t){return e=e>>>0,\nt||U(e,4,this.length),this[e]*16777216+(this[e+1]<<16|this[e+2]<<8|this[e+3])},\"\\\nreadUInt32BE\");f.prototype.readBigUInt64LE=me(a(function(e){e=e>>>0,Be(e,\"offset\");\nlet t=this[e],n=this[e+7];(t===void 0||n===void 0)&&je(e,this.length-8);let i=t+\nthis[++e]*2**8+this[++e]*2**16+this[++e]*2**24,s=this[++e]+this[++e]*2**8+this[++e]*\n2**16+n*2**24;return BigInt(i)+(BigInt(s)<<BigInt(32))},\"readBigUInt64LE\"));f.prototype.\nreadBigUInt64BE=me(a(function(e){e=e>>>0,Be(e,\"offset\");let t=this[e],n=this[e+7];\n(t===void 0||n===void 0)&&je(e,this.length-8);let i=t*2**24+this[++e]*2**16+this[++e]*\n2**8+this[++e],s=this[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n;return(BigInt(\ni)<<BigInt(32))+BigInt(s)},\"readBigUInt64BE\"));f.prototype.readIntLE=a(function(e,t,n){\ne=e>>>0,t=t>>>0,n||U(e,t,this.length);let i=this[e],s=1,o=0;for(;++o<t&&(s*=256);)\ni+=this[e+o]*s;return s*=128,i>=s&&(i-=Math.pow(2,8*t)),i},\"readIntLE\");f.prototype.\nreadIntBE=a(function(e,t,n){e=e>>>0,t=t>>>0,n||U(e,t,this.length);let i=t,s=1,o=this[e+\n--i];for(;i>0&&(s*=256);)o+=this[e+--i]*s;return s*=128,o>=s&&(o-=Math.pow(2,8*t)),\no},\"readIntBE\");f.prototype.readInt8=a(function(e,t){return e=e>>>0,t||U(e,1,this.\nlength),this[e]&128?(255-this[e]+1)*-1:this[e]},\"readInt8\");f.prototype.readInt16LE=\na(function(e,t){e=e>>>0,t||U(e,2,this.length);let n=this[e]|this[e+1]<<8;return n&\n32768?n|4294901760:n},\"readInt16LE\");f.prototype.readInt16BE=a(function(e,t){e=e>>>\n0,t||U(e,2,this.length);let n=this[e+1]|this[e]<<8;return n&32768?n|4294901760:n},\n\"readInt16BE\");f.prototype.readInt32LE=a(function(e,t){return e=e>>>0,t||U(e,4,this.\nlength),this[e]|this[e+1]<<8|this[e+2]<<16|this[e+3]<<24},\"readInt32LE\");f.prototype.\nreadInt32BE=a(function(e,t){return e=e>>>0,t||U(e,4,this.length),this[e]<<24|this[e+\n1]<<16|this[e+2]<<8|this[e+3]},\"readInt32BE\");f.prototype.readBigInt64LE=me(a(function(e){\ne=e>>>0,Be(e,\"offset\");let t=this[e],n=this[e+7];(t===void 0||n===void 0)&&je(e,\nthis.length-8);let i=this[e+4]+this[e+5]*2**8+this[e+6]*2**16+(n<<24);return(BigInt(\ni)<<BigInt(32))+BigInt(t+this[++e]*2**8+this[++e]*2**16+this[++e]*2**24)},\"readB\\\nigInt64LE\"));f.prototype.readBigInt64BE=me(a(function(e){e=e>>>0,Be(e,\"offset\");\nlet t=this[e],n=this[e+7];(t===void 0||n===void 0)&&je(e,this.length-8);let i=(t<<\n24)+this[++e]*2**16+this[++e]*2**8+this[++e];return(BigInt(i)<<BigInt(32))+BigInt(\nthis[++e]*2**24+this[++e]*2**16+this[++e]*2**8+n)},\"readBigInt64BE\"));f.prototype.\nreadFloatLE=a(function(e,t){return e=e>>>0,t||U(e,4,this.length),Pe.read(this,e,\n!0,23,4)},\"readFloatLE\");f.prototype.readFloatBE=a(function(e,t){return e=e>>>0,\nt||U(e,4,this.length),Pe.read(this,e,!1,23,4)},\"readFloatBE\");f.prototype.readDoubleLE=\na(function(e,t){return e=e>>>0,t||U(e,8,this.length),Pe.read(this,e,!0,52,8)},\"r\\\neadDoubleLE\");f.prototype.readDoubleBE=a(function(e,t){return e=e>>>0,t||U(e,8,this.\nlength),Pe.read(this,e,!1,52,8)},\"readDoubleBE\");function z(r,e,t,n,i,s){if(!f.isBuffer(\nr))throw new TypeError('\"buffer\" argument must be a Buffer instance');if(e>i||e<\ns)throw new RangeError('\"value\" argument is out of bounds');if(t+n>r.length)throw new RangeError(\n\"Index out of range\")}a(z,\"checkInt\");f.prototype.writeUintLE=f.prototype.writeUIntLE=\na(function(e,t,n,i){if(e=+e,t=t>>>0,n=n>>>0,!i){let u=Math.pow(2,8*n)-1;z(this,e,\nt,n,u,0)}let s=1,o=0;for(this[t]=e&255;++o<n&&(s*=256);)this[t+o]=e/s&255;return t+\nn},\"writeUIntLE\");f.prototype.writeUintBE=f.prototype.writeUIntBE=a(function(e,t,n,i){\nif(e=+e,t=t>>>0,n=n>>>0,!i){let u=Math.pow(2,8*n)-1;z(this,e,t,n,u,0)}let s=n-1,\no=1;for(this[t+s]=e&255;--s>=0&&(o*=256);)this[t+s]=e/o&255;return t+n},\"writeUI\\\nntBE\");f.prototype.writeUint8=f.prototype.writeUInt8=a(function(e,t,n){return e=\n+e,t=t>>>0,n||z(this,e,t,1,255,0),this[t]=e&255,t+1},\"writeUInt8\");f.prototype.writeUint16LE=\nf.prototype.writeUInt16LE=a(function(e,t,n){return e=+e,t=t>>>0,n||z(this,e,t,2,\n65535,0),this[t]=e&255,this[t+1]=e>>>8,t+2},\"writeUInt16LE\");f.prototype.writeUint16BE=\nf.prototype.writeUInt16BE=a(function(e,t,n){return e=+e,t=t>>>0,n||z(this,e,t,2,\n65535,0),this[t]=e>>>8,this[t+1]=e&255,t+2},\"writeUInt16BE\");f.prototype.writeUint32LE=\nf.prototype.writeUInt32LE=a(function(e,t,n){return e=+e,t=t>>>0,n||z(this,e,t,4,\n4294967295,0),this[t+3]=e>>>24,this[t+2]=e>>>16,this[t+1]=e>>>8,this[t]=e&255,t+\n4},\"writeUInt32LE\");f.prototype.writeUint32BE=f.prototype.writeUInt32BE=a(function(e,t,n){\nreturn e=+e,t=t>>>0,n||z(this,e,t,4,4294967295,0),this[t]=e>>>24,this[t+1]=e>>>16,\nthis[t+2]=e>>>8,this[t+3]=e&255,t+4},\"writeUInt32BE\");function Un(r,e,t,n,i){jn(\ne,n,i,r,t,7);let s=Number(e&BigInt(4294967295));r[t++]=s,s=s>>8,r[t++]=s,s=s>>8,\nr[t++]=s,s=s>>8,r[t++]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return r[t++]=\no,o=o>>8,r[t++]=o,o=o>>8,r[t++]=o,o=o>>8,r[t++]=o,t}a(Un,\"wrtBigUInt64LE\");function qn(r,e,t,n,i){\njn(e,n,i,r,t,7);let s=Number(e&BigInt(4294967295));r[t+7]=s,s=s>>8,r[t+6]=s,s=s>>\n8,r[t+5]=s,s=s>>8,r[t+4]=s;let o=Number(e>>BigInt(32)&BigInt(4294967295));return r[t+\n3]=o,o=o>>8,r[t+2]=o,o=o>>8,r[t+1]=o,o=o>>8,r[t]=o,t+8}a(qn,\"wrtBigUInt64BE\");f.\nprototype.writeBigUInt64LE=me(a(function(e,t=0){return Un(this,e,t,BigInt(0),BigInt(\n\"0xffffffffffffffff\"))},\"writeBigUInt64LE\"));f.prototype.writeBigUInt64BE=me(a(function(e,t=0){\nreturn qn(this,e,t,BigInt(0),BigInt(\"0xffffffffffffffff\"))},\"writeBigUInt64BE\"));\nf.prototype.writeIntLE=a(function(e,t,n,i){if(e=+e,t=t>>>0,!i){let c=Math.pow(2,\n8*n-1);z(this,e,t,n,c-1,-c)}let s=0,o=1,u=0;for(this[t]=e&255;++s<n&&(o*=256);)e<\n0&&u===0&&this[t+s-1]!==0&&(u=1),this[t+s]=(e/o>>0)-u&255;return t+n},\"writeIntL\\\nE\");f.prototype.writeIntBE=a(function(e,t,n,i){if(e=+e,t=t>>>0,!i){let c=Math.pow(\n2,8*n-1);z(this,e,t,n,c-1,-c)}let s=n-1,o=1,u=0;for(this[t+s]=e&255;--s>=0&&(o*=\n256);)e<0&&u===0&&this[t+s+1]!==0&&(u=1),this[t+s]=(e/o>>0)-u&255;return t+n},\"w\\\nriteIntBE\");f.prototype.writeInt8=a(function(e,t,n){return e=+e,t=t>>>0,n||z(this,\ne,t,1,127,-128),e<0&&(e=255+e+1),this[t]=e&255,t+1},\"writeInt8\");f.prototype.writeInt16LE=\na(function(e,t,n){return e=+e,t=t>>>0,n||z(this,e,t,2,32767,-32768),this[t]=e&255,\nthis[t+1]=e>>>8,t+2},\"writeInt16LE\");f.prototype.writeInt16BE=a(function(e,t,n){\nreturn e=+e,t=t>>>0,n||z(this,e,t,2,32767,-32768),this[t]=e>>>8,this[t+1]=e&255,\nt+2},\"writeInt16BE\");f.prototype.writeInt32LE=a(function(e,t,n){return e=+e,t=t>>>\n0,n||z(this,e,t,4,2147483647,-2147483648),this[t]=e&255,this[t+1]=e>>>8,this[t+2]=\ne>>>16,this[t+3]=e>>>24,t+4},\"writeInt32LE\");f.prototype.writeInt32BE=a(function(e,t,n){\nreturn e=+e,t=t>>>0,n||z(this,e,t,4,2147483647,-2147483648),e<0&&(e=4294967295+e+\n1),this[t]=e>>>24,this[t+1]=e>>>16,this[t+2]=e>>>8,this[t+3]=e&255,t+4},\"writeIn\\\nt32BE\");f.prototype.writeBigInt64LE=me(a(function(e,t=0){return Un(this,e,t,-BigInt(\n\"0x8000000000000000\"),BigInt(\"0x7fffffffffffffff\"))},\"writeBigInt64LE\"));f.prototype.\nwriteBigInt64BE=me(a(function(e,t=0){return qn(this,e,t,-BigInt(\"0x8000000000000\\\n000\"),BigInt(\"0x7fffffffffffffff\"))},\"writeBigInt64BE\"));function Nn(r,e,t,n,i,s){\nif(t+n>r.length)throw new RangeError(\"Index out of range\");if(t<0)throw new RangeError(\n\"Index out of range\")}a(Nn,\"checkIEEE754\");function Qn(r,e,t,n,i){return e=+e,t=\nt>>>0,i||Nn(r,e,t,4,34028234663852886e22,-34028234663852886e22),Pe.write(r,e,t,n,\n23,4),t+4}a(Qn,\"writeFloat\");f.prototype.writeFloatLE=a(function(e,t,n){return Qn(\nthis,e,t,!0,n)},\"writeFloatLE\");f.prototype.writeFloatBE=a(function(e,t,n){return Qn(\nthis,e,t,!1,n)},\"writeFloatBE\");function Wn(r,e,t,n,i){return e=+e,t=t>>>0,i||Nn(\nr,e,t,8,17976931348623157e292,-17976931348623157e292),Pe.write(r,e,t,n,52,8),t+8}\na(Wn,\"writeDouble\");f.prototype.writeDoubleLE=a(function(e,t,n){return Wn(this,e,\nt,!0,n)},\"writeDoubleLE\");f.prototype.writeDoubleBE=a(function(e,t,n){return Wn(\nthis,e,t,!1,n)},\"writeDoubleBE\");f.prototype.copy=a(function(e,t,n,i){if(!f.isBuffer(\ne))throw new TypeError(\"argument should be a Buffer\");if(n||(n=0),!i&&i!==0&&(i=\nthis.length),t>=e.length&&(t=e.length),t||(t=0),i>0&&i<n&&(i=n),i===n||e.length===\n0||this.length===0)return 0;if(t<0)throw new RangeError(\"targetStart out of boun\\\nds\");if(n<0||n>=this.length)throw new RangeError(\"Index out of range\");if(i<0)throw new RangeError(\n\"sourceEnd out of bounds\");i>this.length&&(i=this.length),e.length-t<i-n&&(i=e.length-\nt+n);let s=i-n;return this===e&&typeof Uint8Array.prototype.copyWithin==\"functio\\\nn\"?this.copyWithin(t,n,i):Uint8Array.prototype.set.call(e,this.subarray(n,i),t),\ns},\"copy\");f.prototype.fill=a(function(e,t,n,i){if(typeof e==\"string\"){if(typeof t==\n\"string\"?(i=t,t=0,n=this.length):typeof n==\"string\"&&(i=n,n=this.length),i!==void 0&&\ntypeof i!=\"string\")throw new TypeError(\"encoding must be a string\");if(typeof i==\n\"string\"&&!f.isEncoding(i))throw new TypeError(\"Unknown encoding: \"+i);if(e.length===\n1){let o=e.charCodeAt(0);(i===\"utf8\"&&o<128||i===\"latin1\")&&(e=o)}}else typeof e==\n\"number\"?e=e&255:typeof e==\"boolean\"&&(e=Number(e));if(t<0||this.length<t||this.\nlength<n)throw new RangeError(\"Out of range index\");if(n<=t)return this;t=t>>>0,\nn=n===void 0?this.length:n>>>0,e||(e=0);let s;if(typeof e==\"number\")for(s=t;s<n;++s)\nthis[s]=e;else{let o=f.isBuffer(e)?e:f.from(e,i),u=o.length;if(u===0)throw new TypeError(\n'The value \"'+e+'\" is invalid for argument \"value\"');for(s=0;s<n-t;++s)this[s+t]=\no[s%u]}return this},\"fill\");var Te={};function Dt(r,e,t){var n;Te[r]=(n=class extends t{constructor(){\nsuper(),Object.defineProperty(this,\"message\",{value:e.apply(this,arguments),writable:!0,\nconfigurable:!0}),this.name=`${this.name} [${r}]`,this.stack,delete this.name}get code(){\nreturn r}set code(s){Object.defineProperty(this,\"code\",{configurable:!0,enumerable:!0,\nvalue:s,writable:!0})}toString(){return`${this.name} [${r}]: ${this.message}`}},\na(n,\"NodeError\"),n)}a(Dt,\"E\");Dt(\"ERR_BUFFER_OUT_OF_BOUNDS\",function(r){return r?\n`${r} is outside of buffer bounds`:\"Attempt to access memory outside buffer boun\\\nds\"},RangeError);Dt(\"ERR_INVALID_ARG_TYPE\",function(r,e){return`The \"${r}\" argum\\\nent must be of type number. Received type ${typeof e}`},TypeError);Dt(\"ERR_OUT_O\\\nF_RANGE\",function(r,e,t){let n=`The value of \"${r}\" is out of range.`,i=t;return Number.\nisInteger(t)&&Math.abs(t)>2**32?i=Rn(String(t)):typeof t==\"bigint\"&&(i=String(t),\n(t>BigInt(2)**BigInt(32)||t<-(BigInt(2)**BigInt(32)))&&(i=Rn(i)),i+=\"n\"),n+=` It\\\n must be ${e}. Received ${i}`,n},RangeError);function Rn(r){let e=\"\",t=r.length,\nn=r[0]===\"-\"?1:0;for(;t>=n+4;t-=3)e=`_${r.slice(t-3,t)}${e}`;return`${r.slice(0,\nt)}${e}`}a(Rn,\"addNumericalSeparator\");function Lo(r,e,t){Be(e,\"offset\"),(r[e]===\nvoid 0||r[e+t]===void 0)&&je(e,r.length-(t+1))}a(Lo,\"checkBounds\");function jn(r,e,t,n,i,s){\nif(r>t||r<e){let o=typeof e==\"bigint\"?\"n\":\"\",u;throw s>3?e===0||e===BigInt(0)?u=\n`>= 0${o} and < 2${o} ** ${(s+1)*8}${o}`:u=`>= -(2${o} ** ${(s+1)*8-1}${o}) and \\\n< 2 ** ${(s+1)*8-1}${o}`:u=`>= ${e}${o} and <= ${t}${o}`,new Te.ERR_OUT_OF_RANGE(\n\"value\",u,r)}Lo(n,i,s)}a(jn,\"checkIntBI\");function Be(r,e){if(typeof r!=\"number\")\nthrow new Te.ERR_INVALID_ARG_TYPE(e,\"number\",r)}a(Be,\"validateNumber\");function je(r,e,t){\nthrow Math.floor(r)!==r?(Be(r,t),new Te.ERR_OUT_OF_RANGE(t||\"offset\",\"an integer\",\nr)):e<0?new Te.ERR_BUFFER_OUT_OF_BOUNDS:new Te.ERR_OUT_OF_RANGE(t||\"offset\",`>= ${t?\n1:0} and <= ${e}`,r)}a(je,\"boundsError\");var Ro=/[^+/0-9A-Za-z-_]/g;function Fo(r){\nif(r=r.split(\"=\")[0],r=r.trim().replace(Ro,\"\"),r.length<2)return\"\";for(;r.length%\n4!==0;)r=r+\"=\";return r}a(Fo,\"base64clean\");function Rt(r,e){e=e||1/0;let t,n=r.\nlength,i=null,s=[];for(let o=0;o<n;++o){if(t=r.charCodeAt(o),t>55295&&t<57344){if(!i){\nif(t>56319){(e-=3)>-1&&s.push(239,191,189);continue}else if(o+1===n){(e-=3)>-1&&\ns.push(239,191,189);continue}i=t;continue}if(t<56320){(e-=3)>-1&&s.push(239,191,\n189),i=t;continue}t=(i-55296<<10|t-56320)+65536}else i&&(e-=3)>-1&&s.push(239,191,\n189);if(i=null,t<128){if((e-=1)<0)break;s.push(t)}else if(t<2048){if((e-=2)<0)break;\ns.push(t>>6|192,t&63|128)}else if(t<65536){if((e-=3)<0)break;s.push(t>>12|224,t>>\n6&63|128,t&63|128)}else if(t<1114112){if((e-=4)<0)break;s.push(t>>18|240,t>>12&63|\n128,t>>6&63|128,t&63|128)}else throw new Error(\"Invalid code point\")}return s}a(\nRt,\"utf8ToBytes\");function Mo(r){let e=[];for(let t=0;t<r.length;++t)e.push(r.charCodeAt(\nt)&255);return e}a(Mo,\"asciiToBytes\");function Do(r,e){let t,n,i,s=[];for(let o=0;o<\nr.length&&!((e-=2)<0);++o)t=r.charCodeAt(o),n=t>>8,i=t%256,s.push(i),s.push(n);return s}\na(Do,\"utf16leToBytes\");function Hn(r){return Pt.toByteArray(Fo(r))}a(Hn,\"base64T\\\noBytes\");function ot(r,e,t,n){let i;for(i=0;i<n&&!(i+t>=e.length||i>=r.length);++i)\ne[i+t]=r[i];return i}a(ot,\"blitBuffer\");function ae(r,e){return r instanceof e||\nr!=null&&r.constructor!=null&&r.constructor.name!=null&&r.constructor.name===e.name}\na(ae,\"isInstance\");function Ot(r){return r!==r}a(Ot,\"numberIsNaN\");var Oo=function(){\nlet r=\"0123456789abcdef\",e=new Array(256);for(let t=0;t<16;++t){let n=t*16;for(let i=0;i<\n16;++i)e[n+i]=r[t]+r[i]}return e}();function me(r){return typeof BigInt>\"u\"?ko:r}\na(me,\"defineBigIntMethod\");function ko(){throw new Error(\"BigInt not supported\")}\na(ko,\"BufferBigIntNotDefined\")});var b,S,v,w,d,m,p=K(()=>{\"use strict\";b=globalThis,S=globalThis.setImmediate??(r=>setTimeout(\nr,0)),v=globalThis.clearImmediate??(r=>clearTimeout(r)),w=globalThis.crypto??{};\nw.subtle??(w.subtle={});d=typeof globalThis.Buffer==\"function\"&&typeof globalThis.\nBuffer.allocUnsafe==\"function\"?globalThis.Buffer:Gn().Buffer,m=globalThis.process??\n{};m.env??(m.env={});try{m.nextTick(()=>{})}catch{let e=Promise.resolve();m.nextTick=\ne.then.bind(e)}});var ge=I((Jc,kt)=>{\"use strict\";p();var Re=typeof Reflect==\"object\"?Reflect:null,\n$n=Re&&typeof Re.apply==\"function\"?Re.apply:a(function(e,t,n){return Function.prototype.\napply.call(e,t,n)},\"ReflectApply\"),at;Re&&typeof Re.ownKeys==\"function\"?at=Re.ownKeys:\nObject.getOwnPropertySymbols?at=a(function(e){return Object.getOwnPropertyNames(\ne).concat(Object.getOwnPropertySymbols(e))},\"ReflectOwnKeys\"):at=a(function(e){return Object.\ngetOwnPropertyNames(e)},\"ReflectOwnKeys\");function Uo(r){console&&console.warn&&\nconsole.warn(r)}a(Uo,\"ProcessEmitWarning\");var Vn=Number.isNaN||a(function(e){return e!==\ne},\"NumberIsNaN\");function B(){B.init.call(this)}a(B,\"EventEmitter\");kt.exports=\nB;kt.exports.once=Wo;B.EventEmitter=B;B.prototype._events=void 0;B.prototype._eventsCount=\n0;B.prototype._maxListeners=void 0;var Kn=10;function ut(r){if(typeof r!=\"functi\\\non\")throw new TypeError('The \"listener\" argument must be of type Function. Recei\\\nved type '+typeof r)}a(ut,\"checkListener\");Object.defineProperty(B,\"defaultMaxLi\\\nsteners\",{enumerable:!0,get:function(){return Kn},set:function(r){if(typeof r!=\"\\\nnumber\"||r<0||Vn(r))throw new RangeError('The value of \"defaultMaxListeners\" is \\\nout of range. It must be a non-negative number. Received '+r+\".\");Kn=r}});B.init=\nfunction(){(this._events===void 0||this._events===Object.getPrototypeOf(this)._events)&&\n(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||\nvoid 0};B.prototype.setMaxListeners=a(function(e){if(typeof e!=\"number\"||e<0||Vn(\ne))throw new RangeError('The value of \"n\" is out of range. It must be a non-nega\\\ntive number. Received '+e+\".\");return this._maxListeners=e,this},\"setMaxListener\\\ns\");function zn(r){return r._maxListeners===void 0?B.defaultMaxListeners:r._maxListeners}\na(zn,\"_getMaxListeners\");B.prototype.getMaxListeners=a(function(){return zn(this)},\n\"getMaxListeners\");B.prototype.emit=a(function(e){for(var t=[],n=1;n<arguments.length;n++)\nt.push(arguments[n]);var i=e===\"error\",s=this._events;if(s!==void 0)i=i&&s.error===\nvoid 0;else if(!i)return!1;if(i){var o;if(t.length>0&&(o=t[0]),o instanceof Error)\nthrow o;var u=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw u.context=\no,u}var c=s[e];if(c===void 0)return!1;if(typeof c==\"function\")$n(c,this,t);else for(var h=c.\nlength,l=ei(c,h),n=0;n<h;++n)$n(l[n],this,t);return!0},\"emit\");function Yn(r,e,t,n){\nvar i,s,o;if(ut(t),s=r._events,s===void 0?(s=r._events=Object.create(null),r._eventsCount=\n0):(s.newListener!==void 0&&(r.emit(\"newListener\",e,t.listener?t.listener:t),s=r.\n_events),o=s[e]),o===void 0)o=s[e]=t,++r._eventsCount;else if(typeof o==\"functio\\\nn\"?o=s[e]=n?[t,o]:[o,t]:n?o.unshift(t):o.push(t),i=zn(r),i>0&&o.length>i&&!o.warned){\no.warned=!0;var u=new Error(\"Possible EventEmitter memory leak detected. \"+o.length+\n\" \"+String(e)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");\nu.name=\"MaxListenersExceededWarning\",u.emitter=r,u.type=e,u.count=o.length,Uo(u)}\nreturn r}a(Yn,\"_addListener\");B.prototype.addListener=a(function(e,t){return Yn(\nthis,e,t,!1)},\"addListener\");B.prototype.on=B.prototype.addListener;B.prototype.\nprependListener=a(function(e,t){return Yn(this,e,t,!0)},\"prependListener\");function qo(){\nif(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=\n!0,arguments.length===0?this.listener.call(this.target):this.listener.apply(this.\ntarget,arguments)}a(qo,\"onceWrapper\");function Zn(r,e,t){var n={fired:!1,wrapFn:void 0,\ntarget:r,type:e,listener:t},i=qo.bind(n);return i.listener=t,n.wrapFn=i,i}a(Zn,\"\\\n_onceWrap\");B.prototype.once=a(function(e,t){return ut(t),this.on(e,Zn(this,e,t)),\nthis},\"once\");B.prototype.prependOnceListener=a(function(e,t){return ut(t),this.\nprependListener(e,Zn(this,e,t)),this},\"prependOnceListener\");B.prototype.removeListener=\na(function(e,t){var n,i,s,o,u;if(ut(t),i=this._events,i===void 0)return this;if(n=\ni[e],n===void 0)return this;if(n===t||n.listener===t)--this._eventsCount===0?this.\n_events=Object.create(null):(delete i[e],i.removeListener&&this.emit(\"removeList\\\nener\",e,n.listener||t));else if(typeof n!=\"function\"){for(s=-1,o=n.length-1;o>=0;o--)\nif(n[o]===t||n[o].listener===t){u=n[o].listener,s=o;break}if(s<0)return this;s===\n0?n.shift():No(n,s),n.length===1&&(i[e]=n[0]),i.removeListener!==void 0&&this.emit(\n\"removeListener\",e,u||t)}return this},\"removeListener\");B.prototype.off=B.prototype.\nremoveListener;B.prototype.removeAllListeners=a(function(e){var t,n,i;if(n=this.\n_events,n===void 0)return this;if(n.removeListener===void 0)return arguments.length===\n0?(this._events=Object.create(null),this._eventsCount=0):n[e]!==void 0&&(--this.\n_eventsCount===0?this._events=Object.create(null):delete n[e]),this;if(arguments.\nlength===0){var s=Object.keys(n),o;for(i=0;i<s.length;++i)o=s[i],o!==\"removeList\\\nener\"&&this.removeAllListeners(o);return this.removeAllListeners(\"removeListener\"),\nthis._events=Object.create(null),this._eventsCount=0,this}if(t=n[e],typeof t==\"f\\\nunction\")this.removeListener(e,t);else if(t!==void 0)for(i=t.length-1;i>=0;i--)this.\nremoveListener(e,t[i]);return this},\"removeAllListeners\");function Jn(r,e,t){var n=r.\n_events;if(n===void 0)return[];var i=n[e];return i===void 0?[]:typeof i==\"functi\\\non\"?t?[i.listener||i]:[i]:t?Qo(i):ei(i,i.length)}a(Jn,\"_listeners\");B.prototype.\nlisteners=a(function(e){return Jn(this,e,!0)},\"listeners\");B.prototype.rawListeners=\na(function(e){return Jn(this,e,!1)},\"rawListeners\");B.listenerCount=function(r,e){\nreturn typeof r.listenerCount==\"function\"?r.listenerCount(e):Xn.call(r,e)};B.prototype.\nlistenerCount=Xn;function Xn(r){var e=this._events;if(e!==void 0){var t=e[r];if(typeof t==\n\"function\")return 1;if(t!==void 0)return t.length}return 0}a(Xn,\"listenerCount\");\nB.prototype.eventNames=a(function(){return this._eventsCount>0?at(this._events):\n[]},\"eventNames\");function ei(r,e){for(var t=new Array(e),n=0;n<e;++n)t[n]=r[n];\nreturn t}a(ei,\"arrayClone\");function No(r,e){for(;e+1<r.length;e++)r[e]=r[e+1];r.\npop()}a(No,\"spliceOne\");function Qo(r){for(var e=new Array(r.length),t=0;t<e.length;++t)\ne[t]=r[t].listener||r[t];return e}a(Qo,\"unwrapListeners\");function Wo(r,e){return new Promise(\nfunction(t,n){function i(o){r.removeListener(e,s),n(o)}a(i,\"errorListener\");function s(){\ntypeof r.removeListener==\"function\"&&r.removeListener(\"error\",i),t([].slice.call(\narguments))}a(s,\"resolver\"),ti(r,e,s,{once:!0}),e!==\"error\"&&jo(r,i,{once:!0})})}\na(Wo,\"once\");function jo(r,e,t){typeof r.on==\"function\"&&ti(r,\"error\",e,t)}a(jo,\n\"addErrorHandlerIfEventEmitter\");function ti(r,e,t,n){if(typeof r.on==\"function\")\nn.once?r.once(e,t):r.on(e,t);else if(typeof r.addEventListener==\"function\")r.addEventListener(\ne,a(function i(s){n.once&&r.removeEventListener(e,i),t(s)},\"wrapListener\"));else\nthrow new TypeError('The \"emitter\" argument must be of type EventEmitter. Receiv\\\ned type '+typeof r)}a(ti,\"eventTargetAgnosticAddListener\")});var He={};X(He,{default:()=>Ho});var Ho,Ge=K(()=>{\"use strict\";p();Ho={}});function $e(r){let e=1779033703,t=3144134277,n=1013904242,i=2773480762,s=1359893119,\no=2600822924,u=528734635,c=1541459225,h=0,l=0,y=[1116352408,1899447441,3049323471,\n3921009573,961987163,1508970993,2453635748,2870763221,3624381080,310598401,607225278,\n1426881987,1925078388,2162078206,2614888103,3248222580,3835390401,4022224774,264347078,\n604807628,770255983,1249150122,1555081692,1996064986,2554220882,2821834349,2952996808,\n3210313671,3336571891,3584528711,113926993,338241895,666307205,773529912,1294757372,\n1396182291,1695183700,1986661051,2177026350,2456956037,2730485921,2820302411,3259730800,\n3345764771,3516065817,3600352804,4094571909,275423344,430227734,506948616,659060556,\n883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,2227730452,\n2361852424,2428436474,2756734187,3204031479,3329325298],E=a((A,g)=>A>>>g|A<<32-g,\n\"rrot\"),_=new Uint32Array(64),P=new Uint8Array(64),N=a(()=>{for(let L=0,G=0;L<16;L++,\nG+=4)_[L]=P[G]<<24|P[G+1]<<16|P[G+2]<<8|P[G+3];for(let L=16;L<64;L++){let G=E(_[L-\n15],7)^E(_[L-15],18)^_[L-15]>>>3,ce=E(_[L-2],17)^E(_[L-2],19)^_[L-2]>>>10;_[L]=_[L-\n16]+G+_[L-7]+ce|0}let A=e,g=t,D=n,H=i,Q=s,W=o,ue=u,de=c;for(let L=0;L<64;L++){let G=E(\nQ,6)^E(Q,11)^E(Q,25),ce=Q&W^~Q&ue,ye=de+G+ce+y[L]+_[L]|0,xe=E(A,2)^E(A,13)^E(A,22),\nhe=A&g^A&D^g&D,ie=xe+he|0;de=ue,ue=W,W=Q,Q=H+ye|0,H=D,D=g,g=A,A=ye+ie|0}e=e+A|0,\nt=t+g|0,n=n+D|0,i=i+H|0,s=s+Q|0,o=o+W|0,u=u+ue|0,c=c+de|0,l=0},\"process\"),J=a(A=>{\ntypeof A==\"string\"&&(A=new TextEncoder().encode(A));for(let g=0;g<A.length;g++)P[l++]=\nA[g],l===64&&N();h+=A.length},\"add\"),pe=a(()=>{if(P[l++]=128,l==64&&N(),l+8>64){\nfor(;l<64;)P[l++]=0;N()}for(;l<58;)P[l++]=0;let A=h*8;P[l++]=A/1099511627776&255,\nP[l++]=A/4294967296&255,P[l++]=A>>>24,P[l++]=A>>>16&255,P[l++]=A>>>8&255,P[l++]=\nA&255,N();let g=new Uint8Array(32);return g[0]=e>>>24,g[1]=e>>>16&255,g[2]=e>>>8&\n255,g[3]=e&255,g[4]=t>>>24,g[5]=t>>>16&255,g[6]=t>>>8&255,g[7]=t&255,g[8]=n>>>24,\ng[9]=n>>>16&255,g[10]=n>>>8&255,g[11]=n&255,g[12]=i>>>24,g[13]=i>>>16&255,g[14]=\ni>>>8&255,g[15]=i&255,g[16]=s>>>24,g[17]=s>>>16&255,g[18]=s>>>8&255,g[19]=s&255,\ng[20]=o>>>24,g[21]=o>>>16&255,g[22]=o>>>8&255,g[23]=o&255,g[24]=u>>>24,g[25]=u>>>\n16&255,g[26]=u>>>8&255,g[27]=u&255,g[28]=c>>>24,g[29]=c>>>16&255,g[30]=c>>>8&255,\ng[31]=c&255,g},\"digest\");return r===void 0?{add:J,digest:pe}:(J(r),pe())}var ri=K(\n()=>{\"use strict\";p();a($e,\"sha256\")});var O,Ke,ni=K(()=>{\"use strict\";p();O=class O{constructor(){T(this,\"_dataLength\",\n0);T(this,\"_bufferLength\",0);T(this,\"_state\",new Int32Array(4));T(this,\"_buffer\",\nnew ArrayBuffer(68));T(this,\"_buffer8\");T(this,\"_buffer32\");this._buffer8=new Uint8Array(\nthis._buffer,0,68),this._buffer32=new Uint32Array(this._buffer,0,17),this.start()}static hashByteArray(e,t=!1){\nreturn this.onePassHasher.start().appendByteArray(e).end(t)}static hashStr(e,t=!1){\nreturn this.onePassHasher.start().appendStr(e).end(t)}static hashAsciiStr(e,t=!1){\nreturn this.onePassHasher.start().appendAsciiStr(e).end(t)}static _hex(e){let t=O.\nhexChars,n=O.hexOut,i,s,o,u;for(u=0;u<4;u+=1)for(s=u*8,i=e[u],o=0;o<8;o+=2)n[s+1+\no]=t.charAt(i&15),i>>>=4,n[s+0+o]=t.charAt(i&15),i>>>=4;return n.join(\"\")}static _md5cycle(e,t){\nlet n=e[0],i=e[1],s=e[2],o=e[3];n+=(i&s|~i&o)+t[0]-680876936|0,n=(n<<7|n>>>25)+i|\n0,o+=(n&i|~n&s)+t[1]-389564586|0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&i)+t[2]+606105819|\n0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[3]-1044525330|0,i=(i<<22|i>>>10)+s|0,n+=(i&\ns|~i&o)+t[4]-176418897|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[5]+1200080426|0,o=(o<<\n12|o>>>20)+n|0,s+=(o&n|~o&i)+t[6]-1473231341|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+\nt[7]-45705983|0,i=(i<<22|i>>>10)+s|0,n+=(i&s|~i&o)+t[8]+1770035416|0,n=(n<<7|n>>>\n25)+i|0,o+=(n&i|~n&s)+t[9]-1958414417|0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&i)+t[10]-\n42063|0,s=(s<<17|s>>>15)+o|0,i+=(s&o|~s&n)+t[11]-1990404162|0,i=(i<<22|i>>>10)+s|\n0,n+=(i&s|~i&o)+t[12]+1804603682|0,n=(n<<7|n>>>25)+i|0,o+=(n&i|~n&s)+t[13]-40341101|\n0,o=(o<<12|o>>>20)+n|0,s+=(o&n|~o&i)+t[14]-1502002290|0,s=(s<<17|s>>>15)+o|0,i+=\n(s&o|~s&n)+t[15]+1236535329|0,i=(i<<22|i>>>10)+s|0,n+=(i&o|s&~o)+t[1]-165796510|\n0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[6]-1069501632|0,o=(o<<9|o>>>23)+n|0,s+=(o&\ni|n&~i)+t[11]+643717713|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[0]-373897302|0,i=\n(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[5]-701558691|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&\n~s)+t[10]+38016083|0,o=(o<<9|o>>>23)+n|0,s+=(o&i|n&~i)+t[15]-660478335|0,s=(s<<14|\ns>>>18)+o|0,i+=(s&n|o&~n)+t[4]-405537848|0,i=(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[9]+\n568446438|0,n=(n<<5|n>>>27)+i|0,o+=(n&s|i&~s)+t[14]-1019803690|0,o=(o<<9|o>>>23)+\nn|0,s+=(o&i|n&~i)+t[3]-187363961|0,s=(s<<14|s>>>18)+o|0,i+=(s&n|o&~n)+t[8]+1163531501|\n0,i=(i<<20|i>>>12)+s|0,n+=(i&o|s&~o)+t[13]-1444681467|0,n=(n<<5|n>>>27)+i|0,o+=(n&\ns|i&~s)+t[2]-51403784|0,o=(o<<9|o>>>23)+n|0,s+=(o&i|n&~i)+t[7]+1735328473|0,s=(s<<\n14|s>>>18)+o|0,i+=(s&n|o&~n)+t[12]-1926607734|0,i=(i<<20|i>>>12)+s|0,n+=(i^s^o)+\nt[5]-378558|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[8]-2022574463|0,o=(o<<11|o>>>21)+\nn|0,s+=(o^n^i)+t[11]+1839030562|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[14]-35309556|\n0,i=(i<<23|i>>>9)+s|0,n+=(i^s^o)+t[1]-1530992060|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+\nt[4]+1272893353|0,o=(o<<11|o>>>21)+n|0,s+=(o^n^i)+t[7]-155497632|0,s=(s<<16|s>>>\n16)+o|0,i+=(s^o^n)+t[10]-1094730640|0,i=(i<<23|i>>>9)+s|0,n+=(i^s^o)+t[13]+681279174|\n0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[0]-358537222|0,o=(o<<11|o>>>21)+n|0,s+=(o^n^i)+\nt[3]-722521979|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+t[6]+76029189|0,i=(i<<23|i>>>9)+\ns|0,n+=(i^s^o)+t[9]-640364487|0,n=(n<<4|n>>>28)+i|0,o+=(n^i^s)+t[12]-421815835|0,\no=(o<<11|o>>>21)+n|0,s+=(o^n^i)+t[15]+530742520|0,s=(s<<16|s>>>16)+o|0,i+=(s^o^n)+\nt[2]-995338651|0,i=(i<<23|i>>>9)+s|0,n+=(s^(i|~o))+t[0]-198630844|0,n=(n<<6|n>>>\n26)+i|0,o+=(i^(n|~s))+t[7]+1126891415|0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[14]-\n1416354905|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[5]-57434055|0,i=(i<<21|i>>>11)+\ns|0,n+=(s^(i|~o))+t[12]+1700485571|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[3]-1894986606|\n0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[10]-1051523|0,s=(s<<15|s>>>17)+o|0,i+=(o^\n(s|~n))+t[1]-2054922799|0,i=(i<<21|i>>>11)+s|0,n+=(s^(i|~o))+t[8]+1873313359|0,n=\n(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[15]-30611744|0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+\nt[6]-1560198380|0,s=(s<<15|s>>>17)+o|0,i+=(o^(s|~n))+t[13]+1309151649|0,i=(i<<21|\ni>>>11)+s|0,n+=(s^(i|~o))+t[4]-145523070|0,n=(n<<6|n>>>26)+i|0,o+=(i^(n|~s))+t[11]-\n1120210379|0,o=(o<<10|o>>>22)+n|0,s+=(n^(o|~i))+t[2]+718787259|0,s=(s<<15|s>>>17)+\no|0,i+=(o^(s|~n))+t[9]-343485551|0,i=(i<<21|i>>>11)+s|0,e[0]=n+e[0]|0,e[1]=i+e[1]|\n0,e[2]=s+e[2]|0,e[3]=o+e[3]|0}start(){return this._dataLength=0,this._bufferLength=\n0,this._state.set(O.stateIdentity),this}appendStr(e){let t=this._buffer8,n=this.\n_buffer32,i=this._bufferLength,s,o;for(o=0;o<e.length;o+=1){if(s=e.charCodeAt(o),\ns<128)t[i++]=s;else if(s<2048)t[i++]=(s>>>6)+192,t[i++]=s&63|128;else if(s<55296||\ns>56319)t[i++]=(s>>>12)+224,t[i++]=s>>>6&63|128,t[i++]=s&63|128;else{if(s=(s-55296)*\n1024+(e.charCodeAt(++o)-56320)+65536,s>1114111)throw new Error(\"Unicode standard\\\n supports code points up to U+10FFFF\");t[i++]=(s>>>18)+240,t[i++]=s>>>12&63|128,\nt[i++]=s>>>6&63|128,t[i++]=s&63|128}i>=64&&(this._dataLength+=64,O._md5cycle(this.\n_state,n),i-=64,n[0]=n[16])}return this._bufferLength=i,this}appendAsciiStr(e){let t=this.\n_buffer8,n=this._buffer32,i=this._bufferLength,s,o=0;for(;;){for(s=Math.min(e.length-\no,64-i);s--;)t[i++]=e.charCodeAt(o++);if(i<64)break;this._dataLength+=64,O._md5cycle(\nthis._state,n),i=0}return this._bufferLength=i,this}appendByteArray(e){let t=this.\n_buffer8,n=this._buffer32,i=this._bufferLength,s,o=0;for(;;){for(s=Math.min(e.length-\no,64-i);s--;)t[i++]=e[o++];if(i<64)break;this._dataLength+=64,O._md5cycle(this._state,\nn),i=0}return this._bufferLength=i,this}getState(){let e=this._state;return{buffer:String.\nfromCharCode.apply(null,Array.from(this._buffer8)),buflen:this._bufferLength,length:this.\n_dataLength,state:[e[0],e[1],e[2],e[3]]}}setState(e){let t=e.buffer,n=e.state,i=this.\n_state,s;for(this._dataLength=e.length,this._bufferLength=e.buflen,i[0]=n[0],i[1]=\nn[1],i[2]=n[2],i[3]=n[3],s=0;s<t.length;s+=1)this._buffer8[s]=t.charCodeAt(s)}end(e=!1){\nlet t=this._bufferLength,n=this._buffer8,i=this._buffer32,s=(t>>2)+1;this._dataLength+=\nt;let o=this._dataLength*8;if(n[t]=128,n[t+1]=n[t+2]=n[t+3]=0,i.set(O.buffer32Identity.\nsubarray(s),s),t>55&&(O._md5cycle(this._state,i),i.set(O.buffer32Identity)),o<=4294967295)\ni[14]=o;else{let u=o.toString(16).match(/(.*?)(.{0,8})$/);if(u===null)return;let c=parseInt(\nu[2],16),h=parseInt(u[1],16)||0;i[14]=c,i[15]=h}return O._md5cycle(this._state,i),\ne?this._state:O._hex(this._state)}};a(O,\"Md5\"),T(O,\"stateIdentity\",new Int32Array(\n[1732584193,-271733879,-1732584194,271733878])),T(O,\"buffer32Identity\",new Int32Array(\n[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])),T(O,\"hexChars\",\"0123456789abcdef\"),T(O,\"hexO\\\nut\",[]),T(O,\"onePassHasher\",new O);Ke=O});var Ut={};X(Ut,{createHash:()=>$o,createHmac:()=>Ko,randomBytes:()=>Go});function Go(r){\nreturn w.getRandomValues(d.alloc(r))}function $o(r){if(r===\"sha256\")return{update:function(e){\nreturn{digest:function(){return d.from($e(e))}}}};if(r===\"md5\")return{update:function(e){\nreturn{digest:function(){return typeof e==\"string\"?Ke.hashStr(e):Ke.hashByteArray(\ne)}}}};throw new Error(`Hash type '${r}' not supported`)}function Ko(r,e){if(r!==\n\"sha256\")throw new Error(`Only sha256 is supported (requested: '${r}')`);return{\nupdate:function(t){return{digest:function(){typeof e==\"string\"&&(e=new TextEncoder().\nencode(e)),typeof t==\"string\"&&(t=new TextEncoder().encode(t));let n=e.length;if(n>\n64)e=$e(e);else if(n<64){let c=new Uint8Array(64);c.set(e),e=c}let i=new Uint8Array(\n64),s=new Uint8Array(64);for(let c=0;c<64;c++)i[c]=54^e[c],s[c]=92^e[c];let o=new Uint8Array(\nt.length+64);o.set(i,0),o.set(t,64);let u=new Uint8Array(96);return u.set(s,0),u.\nset($e(o),64),d.from($e(u))}}}}}var qt=K(()=>{\"use strict\";p();ri();ni();a(Go,\"r\\\nandomBytes\");a($o,\"createHash\");a(Ko,\"createHmac\")});var Qt=I(ii=>{\"use strict\";p();ii.parse=function(r,e){return new Nt(r,e).parse()};\nvar ct=class ct{constructor(e,t){this.source=e,this.transform=t||Vo,this.position=\n0,this.entries=[],this.recorded=[],this.dimension=0}isEof(){return this.position>=\nthis.source.length}nextCharacter(){var e=this.source[this.position++];return e===\n\"\\\\\"?{value:this.source[this.position++],escaped:!0}:{value:e,escaped:!1}}record(e){\nthis.recorded.push(e)}newEntry(e){var t;(this.recorded.length>0||e)&&(t=this.recorded.\njoin(\"\"),t===\"NULL\"&&!e&&(t=null),t!==null&&(t=this.transform(t)),this.entries.push(\nt),this.recorded=[])}consumeDimensions(){if(this.source[0]===\"[\")for(;!this.isEof();){\nvar e=this.nextCharacter();if(e.value===\"=\")break}}parse(e){var t,n,i;for(this.consumeDimensions();!this.\nisEof();)if(t=this.nextCharacter(),t.value===\"{\"&&!i)this.dimension++,this.dimension>\n1&&(n=new ct(this.source.substr(this.position-1),this.transform),this.entries.push(\nn.parse(!0)),this.position+=n.position-2);else if(t.value===\"}\"&&!i){if(this.dimension--,\n!this.dimension&&(this.newEntry(),e))return this.entries}else t.value==='\"'&&!t.\nescaped?(i&&this.newEntry(!0),i=!i):t.value===\",\"&&!i?this.newEntry():this.record(\nt.value);if(this.dimension!==0)throw new Error(\"array dimension not balanced\");return this.\nentries}};a(ct,\"ArrayParser\");var Nt=ct;function Vo(r){return r}a(Vo,\"identity\")});var Wt=I((yh,si)=>{p();var zo=Qt();si.exports={create:function(r,e){return{parse:function(){\nreturn zo.parse(r,e)}}}}});var ui=I((gh,ai)=>{\"use strict\";p();var Yo=/(\\d{1,})-(\\d{2})-(\\d{2}) (\\d{2}):(\\d{2}):(\\d{2})(\\.\\d{1,})?.*?( BC)?$/,\nZo=/^(\\d{1,})-(\\d{2})-(\\d{2})( BC)?$/,Jo=/([Z+-])(\\d{2})?:?(\\d{2})?:?(\\d{2})?/,Xo=/^-?infinity$/;\nai.exports=a(function(e){if(Xo.test(e))return Number(e.replace(\"i\",\"I\"));var t=Yo.\nexec(e);if(!t)return ea(e)||null;var n=!!t[8],i=parseInt(t[1],10);n&&(i=oi(i));var s=parseInt(\nt[2],10)-1,o=t[3],u=parseInt(t[4],10),c=parseInt(t[5],10),h=parseInt(t[6],10),l=t[7];\nl=l?1e3*parseFloat(l):0;var y,E=ta(e);return E!=null?(y=new Date(Date.UTC(i,s,o,\nu,c,h,l)),jt(i)&&y.setUTCFullYear(i),E!==0&&y.setTime(y.getTime()-E)):(y=new Date(\ni,s,o,u,c,h,l),jt(i)&&y.setFullYear(i)),y},\"parseDate\");function ea(r){var e=Zo.\nexec(r);if(e){var t=parseInt(e[1],10),n=!!e[4];n&&(t=oi(t));var i=parseInt(e[2],\n10)-1,s=e[3],o=new Date(t,i,s);return jt(t)&&o.setFullYear(t),o}}a(ea,\"getDate\");\nfunction ta(r){if(r.endsWith(\"+00\"))return 0;var e=Jo.exec(r.split(\" \")[1]);if(e){\nvar t=e[1];if(t===\"Z\")return 0;var n=t===\"-\"?-1:1,i=parseInt(e[2],10)*3600+parseInt(\ne[3]||0,10)*60+parseInt(e[4]||0,10);return i*n*1e3}}a(ta,\"timeZoneOffset\");function oi(r){\nreturn-(r-1)}a(oi,\"bcYearToNegativeYear\");function jt(r){return r>=0&&r<100}a(jt,\n\"is0To99\")});var hi=I((Sh,ci)=>{p();ci.exports=na;var ra=Object.prototype.hasOwnProperty;function na(r){\nfor(var e=1;e<arguments.length;e++){var t=arguments[e];for(var n in t)ra.call(t,\nn)&&(r[n]=t[n])}return r}a(na,\"extend\")});var pi=I((vh,fi)=>{\"use strict\";p();var ia=hi();fi.exports=Fe;function Fe(r){if(!(this instanceof\nFe))return new Fe(r);ia(this,ma(r))}a(Fe,\"PostgresInterval\");var sa=[\"seconds\",\"\\\nminutes\",\"hours\",\"days\",\"months\",\"years\"];Fe.prototype.toPostgres=function(){var r=sa.\nfilter(this.hasOwnProperty,this);return this.milliseconds&&r.indexOf(\"seconds\")<\n0&&r.push(\"seconds\"),r.length===0?\"0\":r.map(function(e){var t=this[e]||0;return e===\n\"seconds\"&&this.milliseconds&&(t=(t+this.milliseconds/1e3).toFixed(6).replace(/\\.?0+$/,\n\"\")),t+\" \"+e},this).join(\" \")};var oa={years:\"Y\",months:\"M\",days:\"D\",hours:\"H\",minutes:\"\\\nM\",seconds:\"S\"},aa=[\"years\",\"months\",\"days\"],ua=[\"hours\",\"minutes\",\"seconds\"];Fe.\nprototype.toISOString=Fe.prototype.toISO=function(){var r=aa.map(t,this).join(\"\"),\ne=ua.map(t,this).join(\"\");return\"P\"+r+\"T\"+e;function t(n){var i=this[n]||0;return n===\n\"seconds\"&&this.milliseconds&&(i=(i+this.milliseconds/1e3).toFixed(6).replace(/0+$/,\n\"\")),i+oa[n]}};var Ht=\"([+-]?\\\\d+)\",ca=Ht+\"\\\\s+years?\",ha=Ht+\"\\\\s+mons?\",la=Ht+\"\\\n\\\\s+days?\",fa=\"([+-])?([\\\\d]*):(\\\\d\\\\d):(\\\\d\\\\d)\\\\.?(\\\\d{1,6})?\",pa=new RegExp([\nca,ha,la,fa].map(function(r){return\"(\"+r+\")?\"}).join(\"\\\\s*\")),li={years:2,months:4,\ndays:6,hours:9,minutes:10,seconds:11,milliseconds:12},da=[\"hours\",\"minutes\",\"sec\\\nonds\",\"milliseconds\"];function ya(r){var e=r+\"000000\".slice(r.length);return parseInt(\ne,10)/1e3}a(ya,\"parseMilliseconds\");function ma(r){if(!r)return{};var e=pa.exec(\nr),t=e[8]===\"-\";return Object.keys(li).reduce(function(n,i){var s=li[i],o=e[s];return!o||\n(o=i===\"milliseconds\"?ya(o):parseInt(o,10),!o)||(t&&~da.indexOf(i)&&(o*=-1),n[i]=\no),n},{})}a(ma,\"parse\")});var yi=I((Ch,di)=>{\"use strict\";p();di.exports=a(function(e){if(/^\\\\x/.test(e))return new d(\ne.substr(2),\"hex\");for(var t=\"\",n=0;n<e.length;)if(e[n]!==\"\\\\\")t+=e[n],++n;else if(/[0-7]{3}/.\ntest(e.substr(n+1,3)))t+=String.fromCharCode(parseInt(e.substr(n+1,3),8)),n+=4;else{\nfor(var i=1;n+i<e.length&&e[n+i]===\"\\\\\";)i++;for(var s=0;s<Math.floor(i/2);++s)t+=\n\"\\\\\";n+=Math.floor(i/2)*2}return new d(t,\"binary\")},\"parseBytea\")});var Ei=I((Ph,xi)=>{p();var Ve=Qt(),ze=Wt(),ht=ui(),gi=pi(),wi=yi();function lt(r){\nreturn a(function(t){return t===null?t:r(t)},\"nullAllowed\")}a(lt,\"allowNull\");function bi(r){\nreturn r===null?r:r===\"TRUE\"||r===\"t\"||r===\"true\"||r===\"y\"||r===\"yes\"||r===\"on\"||\nr===\"1\"}a(bi,\"parseBool\");function ga(r){return r?Ve.parse(r,bi):null}a(ga,\"pars\\\neBoolArray\");function wa(r){return parseInt(r,10)}a(wa,\"parseBaseTenInt\");function Gt(r){\nreturn r?Ve.parse(r,lt(wa)):null}a(Gt,\"parseIntegerArray\");function ba(r){return r?\nVe.parse(r,lt(function(e){return Si(e).trim()})):null}a(ba,\"parseBigIntegerArray\");\nvar Sa=a(function(r){if(!r)return null;var e=ze.create(r,function(t){return t!==\nnull&&(t=zt(t)),t});return e.parse()},\"parsePointArray\"),$t=a(function(r){if(!r)\nreturn null;var e=ze.create(r,function(t){return t!==null&&(t=parseFloat(t)),t});\nreturn e.parse()},\"parseFloatArray\"),te=a(function(r){if(!r)return null;var e=ze.\ncreate(r);return e.parse()},\"parseStringArray\"),Kt=a(function(r){if(!r)return null;\nvar e=ze.create(r,function(t){return t!==null&&(t=ht(t)),t});return e.parse()},\"\\\nparseDateArray\"),xa=a(function(r){if(!r)return null;var e=ze.create(r,function(t){\nreturn t!==null&&(t=gi(t)),t});return e.parse()},\"parseIntervalArray\"),Ea=a(function(r){\nreturn r?Ve.parse(r,lt(wi)):null},\"parseByteAArray\"),Vt=a(function(r){return parseInt(\nr,10)},\"parseInteger\"),Si=a(function(r){var e=String(r);return/^\\d+$/.test(e)?e:\nr},\"parseBigInteger\"),mi=a(function(r){return r?Ve.parse(r,lt(JSON.parse)):null},\n\"parseJsonArray\"),zt=a(function(r){return r[0]!==\"(\"?null:(r=r.substring(1,r.length-\n1).split(\",\"),{x:parseFloat(r[0]),y:parseFloat(r[1])})},\"parsePoint\"),va=a(function(r){\nif(r[0]!==\"<\"&&r[1]!==\"(\")return null;for(var e=\"(\",t=\"\",n=!1,i=2;i<r.length-1;i++){\nif(n||(e+=r[i]),r[i]===\")\"){n=!0;continue}else if(!n)continue;r[i]!==\",\"&&(t+=r[i])}\nvar s=zt(e);return s.radius=parseFloat(t),s},\"parseCircle\"),_a=a(function(r){r(20,\nSi),r(21,Vt),r(23,Vt),r(26,Vt),r(700,parseFloat),r(701,parseFloat),r(16,bi),r(1082,\nht),r(1114,ht),r(1184,ht),r(600,zt),r(651,te),r(718,va),r(1e3,ga),r(1001,Ea),r(1005,\nGt),r(1007,Gt),r(1028,Gt),r(1016,ba),r(1017,Sa),r(1021,$t),r(1022,$t),r(1231,$t),\nr(1014,te),r(1015,te),r(1008,te),r(1009,te),r(1040,te),r(1041,te),r(1115,Kt),r(1182,\nKt),r(1185,Kt),r(1186,gi),r(1187,xa),r(17,wi),r(114,JSON.parse.bind(JSON)),r(3802,\nJSON.parse.bind(JSON)),r(199,mi),r(3807,mi),r(3907,te),r(2951,te),r(791,te),r(1183,\nte),r(1270,te)},\"init\");xi.exports={init:_a}});var _i=I((Rh,vi)=>{\"use strict\";p();var Y=1e6;function Aa(r){var e=r.readInt32BE(\n0),t=r.readUInt32BE(4),n=\"\";e<0&&(e=~e+(t===0),t=~t+1>>>0,n=\"-\");var i=\"\",s,o,u,\nc,h,l;{if(s=e%Y,e=e/Y>>>0,o=4294967296*s+t,t=o/Y>>>0,u=\"\"+(o-Y*t),t===0&&e===0)return n+\nu+i;for(c=\"\",h=6-u.length,l=0;l<h;l++)c+=\"0\";i=c+u+i}{if(s=e%Y,e=e/Y>>>0,o=4294967296*\ns+t,t=o/Y>>>0,u=\"\"+(o-Y*t),t===0&&e===0)return n+u+i;for(c=\"\",h=6-u.length,l=0;l<\nh;l++)c+=\"0\";i=c+u+i}{if(s=e%Y,e=e/Y>>>0,o=4294967296*s+t,t=o/Y>>>0,u=\"\"+(o-Y*t),\nt===0&&e===0)return n+u+i;for(c=\"\",h=6-u.length,l=0;l<h;l++)c+=\"0\";i=c+u+i}return s=\ne%Y,o=4294967296*s+t,u=\"\"+o%Y,n+u+i}a(Aa,\"readInt8\");vi.exports=Aa});var Pi=I((Dh,Ti)=>{p();var Ca=_i(),R=a(function(r,e,t,n,i){t=t||0,n=n||!1,i=i||function(_,P,N){\nreturn _*Math.pow(2,N)+P};var s=t>>3,o=a(function(_){return n?~_&255:_},\"inv\"),u=255,\nc=8-t%8;e<c&&(u=255<<8-e&255,c=e),t&&(u=u>>t%8);var h=0;t%8+e>=8&&(h=i(0,o(r[s])&\nu,c));for(var l=e+t>>3,y=s+1;y<l;y++)h=i(h,o(r[y]),8);var E=(e+t)%8;return E>0&&\n(h=i(h,o(r[l])>>8-E,E)),h},\"parseBits\"),Ii=a(function(r,e,t){var n=Math.pow(2,t-\n1)-1,i=R(r,1),s=R(r,t,1);if(s===0)return 0;var o=1,u=a(function(h,l,y){h===0&&(h=\n1);for(var E=1;E<=y;E++)o/=2,(l&1<<y-E)>0&&(h+=o);return h},\"parsePrecisionBits\"),\nc=R(r,e,t+1,!1,u);return s==Math.pow(2,t+1)-1?c===0?i===0?1/0:-1/0:NaN:(i===0?1:\n-1)*Math.pow(2,s-n)*c},\"parseFloatFromBits\"),Ia=a(function(r){return R(r,1)==1?-1*\n(R(r,15,1,!0)+1):R(r,15,1)},\"parseInt16\"),Ai=a(function(r){return R(r,1)==1?-1*(R(\nr,31,1,!0)+1):R(r,31,1)},\"parseInt32\"),Ta=a(function(r){return Ii(r,23,8)},\"pars\\\neFloat32\"),Pa=a(function(r){return Ii(r,52,11)},\"parseFloat64\"),Ba=a(function(r){\nvar e=R(r,16,32);if(e==49152)return NaN;for(var t=Math.pow(1e4,R(r,16,16)),n=0,i=[],\ns=R(r,16),o=0;o<s;o++)n+=R(r,16,64+16*o)*t,t/=1e4;var u=Math.pow(10,R(r,16,48));\nreturn(e===0?1:-1)*Math.round(n*u)/u},\"parseNumeric\"),Ci=a(function(r,e){var t=R(\ne,1),n=R(e,63,1),i=new Date((t===0?1:-1)*n/1e3+9466848e5);return r||i.setTime(i.\ngetTime()+i.getTimezoneOffset()*6e4),i.usec=n%1e3,i.getMicroSeconds=function(){return this.\nusec},i.setMicroSeconds=function(s){this.usec=s},i.getUTCMicroSeconds=function(){\nreturn this.usec},i},\"parseDate\"),Ye=a(function(r){for(var e=R(r,32),t=R(r,32,32),\nn=R(r,32,64),i=96,s=[],o=0;o<e;o++)s[o]=R(r,32,i),i+=32,i+=32;var u=a(function(h){\nvar l=R(r,32,i);if(i+=32,l==4294967295)return null;var y;if(h==23||h==20)return y=\nR(r,l*8,i),i+=l*8,y;if(h==25)return y=r.toString(this.encoding,i>>3,(i+=l<<3)>>3),\ny;console.log(\"ERROR: ElementType not implemented: \"+h)},\"parseElement\"),c=a(function(h,l){\nvar y=[],E;if(h.length>1){var _=h.shift();for(E=0;E<_;E++)y[E]=c(h,l);h.unshift(\n_)}else for(E=0;E<h[0];E++)y[E]=u(l);return y},\"parse\");return c(s,n)},\"parseArr\\\nay\"),La=a(function(r){return r.toString(\"utf8\")},\"parseText\"),Ra=a(function(r){return r===\nnull?null:R(r,8)>0},\"parseBool\"),Fa=a(function(r){r(20,Ca),r(21,Ia),r(23,Ai),r(26,\nAi),r(1700,Ba),r(700,Ta),r(701,Pa),r(16,Ra),r(1114,Ci.bind(null,!1)),r(1184,Ci.bind(\nnull,!0)),r(1e3,Ye),r(1007,Ye),r(1016,Ye),r(1008,Ye),r(1009,Ye),r(25,La)},\"init\");\nTi.exports={init:Fa}});var Li=I((Uh,Bi)=>{p();Bi.exports={BOOL:16,BYTEA:17,CHAR:18,INT8:20,INT2:21,INT4:23,\nREGPROC:24,TEXT:25,OID:26,TID:27,XID:28,CID:29,JSON:114,XML:142,PG_NODE_TREE:194,\nSMGR:210,PATH:602,POLYGON:604,CIDR:650,FLOAT4:700,FLOAT8:701,ABSTIME:702,RELTIME:703,\nTINTERVAL:704,CIRCLE:718,MACADDR8:774,MONEY:790,MACADDR:829,INET:869,ACLITEM:1033,\nBPCHAR:1042,VARCHAR:1043,DATE:1082,TIME:1083,TIMESTAMP:1114,TIMESTAMPTZ:1184,INTERVAL:1186,\nTIMETZ:1266,BIT:1560,VARBIT:1562,NUMERIC:1700,REFCURSOR:1790,REGPROCEDURE:2202,REGOPER:2203,\nREGOPERATOR:2204,REGCLASS:2205,REGTYPE:2206,UUID:2950,TXID_SNAPSHOT:2970,PG_LSN:3220,\nPG_NDISTINCT:3361,PG_DEPENDENCIES:3402,TSVECTOR:3614,TSQUERY:3615,GTSVECTOR:3642,\nREGCONFIG:3734,REGDICTIONARY:3769,JSONB:3802,REGNAMESPACE:4089,REGROLE:4096}});var Xe=I(Je=>{p();var Ma=Ei(),Da=Pi(),Oa=Wt(),ka=Li();Je.getTypeParser=Ua;Je.setTypeParser=\nqa;Je.arrayParser=Oa;Je.builtins=ka;var Ze={text:{},binary:{}};function Ri(r){return String(\nr)}a(Ri,\"noParse\");function Ua(r,e){return e=e||\"text\",Ze[e]&&Ze[e][r]||Ri}a(Ua,\n\"getTypeParser\");function qa(r,e,t){typeof e==\"function\"&&(t=e,e=\"text\"),Ze[e][r]=\nt}a(qa,\"setTypeParser\");Ma.init(function(r,e){Ze.text[r]=e});Da.init(function(r,e){\nZe.binary[r]=e})});var et=I((jh,Yt)=>{\"use strict\";p();Yt.exports={host:\"localhost\",user:m.platform===\n\"win32\"?m.env.USERNAME:m.env.USER,database:void 0,password:null,connectionString:void 0,\nport:5432,rows:0,binary:!1,max:10,idleTimeoutMillis:3e4,client_encoding:\"\",ssl:!1,\napplication_name:void 0,fallback_application_name:void 0,options:void 0,parseInputDatesAsUTC:!1,\nstatement_timeout:!1,lock_timeout:!1,idle_in_transaction_session_timeout:!1,query_timeout:!1,\nconnect_timeout:0,keepalives:1,keepalives_idle:0};var Me=Xe(),Na=Me.getTypeParser(\n20,\"text\"),Qa=Me.getTypeParser(1016,\"text\");Yt.exports.__defineSetter__(\"parseIn\\\nt8\",function(r){Me.setTypeParser(20,\"text\",r?Me.getTypeParser(23,\"text\"):Na),Me.\nsetTypeParser(1016,\"text\",r?Me.getTypeParser(1007,\"text\"):Qa)})});var tt=I((Gh,Mi)=>{\"use strict\";p();var Wa=(qt(),k(Ut)),ja=et();function Ha(r){var e=r.\nreplace(/\\\\/g,\"\\\\\\\\\").replace(/\"/g,'\\\\\"');return'\"'+e+'\"'}a(Ha,\"escapeElement\");\nfunction Fi(r){for(var e=\"{\",t=0;t<r.length;t++)t>0&&(e=e+\",\"),r[t]===null||typeof r[t]>\n\"u\"?e=e+\"NULL\":Array.isArray(r[t])?e=e+Fi(r[t]):r[t]instanceof d?e+=\"\\\\\\\\x\"+r[t].\ntoString(\"hex\"):e+=Ha(ft(r[t]));return e=e+\"}\",e}a(Fi,\"arrayString\");var ft=a(function(r,e){\nif(r==null)return null;if(r instanceof d)return r;if(ArrayBuffer.isView(r)){var t=d.\nfrom(r.buffer,r.byteOffset,r.byteLength);return t.length===r.byteLength?t:t.slice(\nr.byteOffset,r.byteOffset+r.byteLength)}return r instanceof Date?ja.parseInputDatesAsUTC?\nKa(r):$a(r):Array.isArray(r)?Fi(r):typeof r==\"object\"?Ga(r,e):r.toString()},\"pre\\\npareValue\");function Ga(r,e){if(r&&typeof r.toPostgres==\"function\"){if(e=e||[],e.\nindexOf(r)!==-1)throw new Error('circular reference detected while preparing \"'+\nr+'\" for query');return e.push(r),ft(r.toPostgres(ft),e)}return JSON.stringify(r)}\na(Ga,\"prepareObject\");function j(r,e){for(r=\"\"+r;r.length<e;)r=\"0\"+r;return r}a(\nj,\"pad\");function $a(r){var e=-r.getTimezoneOffset(),t=r.getFullYear(),n=t<1;n&&\n(t=Math.abs(t)+1);var i=j(t,4)+\"-\"+j(r.getMonth()+1,2)+\"-\"+j(r.getDate(),2)+\"T\"+\nj(r.getHours(),2)+\":\"+j(r.getMinutes(),2)+\":\"+j(r.getSeconds(),2)+\".\"+j(r.getMilliseconds(),\n3);return e<0?(i+=\"-\",e*=-1):i+=\"+\",i+=j(Math.floor(e/60),2)+\":\"+j(e%60,2),n&&(i+=\n\" BC\"),i}a($a,\"dateToString\");function Ka(r){var e=r.getUTCFullYear(),t=e<1;t&&(e=\nMath.abs(e)+1);var n=j(e,4)+\"-\"+j(r.getUTCMonth()+1,2)+\"-\"+j(r.getUTCDate(),2)+\"\\\nT\"+j(r.getUTCHours(),2)+\":\"+j(r.getUTCMinutes(),2)+\":\"+j(r.getUTCSeconds(),2)+\".\"+\nj(r.getUTCMilliseconds(),3);return n+=\"+00:00\",t&&(n+=\" BC\"),n}a(Ka,\"dateToStrin\\\ngUTC\");function Va(r,e,t){return r=typeof r==\"string\"?{text:r}:r,e&&(typeof e==\"\\\nfunction\"?r.callback=e:r.values=e),t&&(r.callback=t),r}a(Va,\"normalizeQueryConfi\\\ng\");var Zt=a(function(r){return Wa.createHash(\"md5\").update(r,\"utf-8\").digest(\"h\\\nex\")},\"md5\"),za=a(function(r,e,t){var n=Zt(e+r),i=Zt(d.concat([d.from(n),t]));return\"\\\nmd5\"+i},\"postgresMd5PasswordHash\");Mi.exports={prepareValue:a(function(e){return ft(\ne)},\"prepareValueWrapper\"),normalizeQueryConfig:Va,postgresMd5PasswordHash:za,md5:Zt}});var qi=I((Vh,Ui)=>{\"use strict\";p();var Jt=(qt(),k(Ut));function Ya(r){if(r.indexOf(\n\"SCRAM-SHA-256\")===-1)throw new Error(\"SASL: Only mechanism SCRAM-SHA-256 is cur\\\nrently supported\");let e=Jt.randomBytes(18).toString(\"base64\");return{mechanism:\"\\\nSCRAM-SHA-256\",clientNonce:e,response:\"n,,n=*,r=\"+e,message:\"SASLInitialResponse\"}}\na(Ya,\"startSession\");function Za(r,e,t){if(r.message!==\"SASLInitialResponse\")throw new Error(\n\"SASL: Last message was not SASLInitialResponse\");if(typeof e!=\"string\")throw new Error(\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: client password must be a string\");if(typeof t!=\n\"string\")throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: serverData must be a\\\n string\");let n=eu(t);if(n.nonce.startsWith(r.clientNonce)){if(n.nonce.length===\nr.clientNonce.length)throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server n\\\nonce is too short\")}else throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: serv\\\ner nonce does not start with client nonce\");var i=d.from(n.salt,\"base64\"),s=nu(e,\ni,n.iteration),o=De(s,\"Client Key\"),u=ru(o),c=\"n=*,r=\"+r.clientNonce,h=\"r=\"+n.nonce+\n\",s=\"+n.salt+\",i=\"+n.iteration,l=\"c=biws,r=\"+n.nonce,y=c+\",\"+h+\",\"+l,E=De(u,y),_=ki(\no,E),P=_.toString(\"base64\"),N=De(s,\"Server Key\"),J=De(N,y);r.message=\"SASLRespon\\\nse\",r.serverSignature=J.toString(\"base64\"),r.response=l+\",p=\"+P}a(Za,\"continueSe\\\nssion\");function Ja(r,e){if(r.message!==\"SASLResponse\")throw new Error(\"SASL: La\\\nst message was not SASLResponse\");if(typeof e!=\"string\")throw new Error(\"SASL: S\\\nCRAM-SERVER-FINAL-MESSAGE: serverData must be a string\");let{serverSignature:t}=tu(\ne);if(t!==r.serverSignature)throw new Error(\"SASL: SCRAM-SERVER-FINAL-MESSAGE: s\\\nerver signature does not match\")}a(Ja,\"finalizeSession\");function Xa(r){if(typeof r!=\n\"string\")throw new TypeError(\"SASL: text must be a string\");return r.split(\"\").map(\n(e,t)=>r.charCodeAt(t)).every(e=>e>=33&&e<=43||e>=45&&e<=126)}a(Xa,\"isPrintableC\\\nhars\");function Di(r){return/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.\ntest(r)}a(Di,\"isBase64\");function Oi(r){if(typeof r!=\"string\")throw new TypeError(\n\"SASL: attribute pairs text must be a string\");return new Map(r.split(\",\").map(e=>{\nif(!/^.=/.test(e))throw new Error(\"SASL: Invalid attribute pair entry\");let t=e[0],\nn=e.substring(2);return[t,n]}))}a(Oi,\"parseAttributePairs\");function eu(r){let e=Oi(\nr),t=e.get(\"r\");if(t){if(!Xa(t))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAG\\\nE: nonce must only contain printable characters\")}else throw new Error(\"SASL: SC\\\nRAM-SERVER-FIRST-MESSAGE: nonce missing\");let n=e.get(\"s\");if(n){if(!Di(n))throw new Error(\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: salt must be base64\")}else throw new Error(\"S\\\nASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing\");let i=e.get(\"i\");if(i){if(!/^[1-9][0-9]*$/.\ntest(i))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: invalid iteration cou\\\nnt\")}else throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: iteration missing\");\nlet s=parseInt(i,10);return{nonce:t,salt:n,iteration:s}}a(eu,\"parseServerFirstMe\\\nssage\");function tu(r){let t=Oi(r).get(\"v\");if(t){if(!Di(t))throw new Error(\"SAS\\\nL: SCRAM-SERVER-FINAL-MESSAGE: server signature must be base64\")}else throw new Error(\n\"SASL: SCRAM-SERVER-FINAL-MESSAGE: server signature is missing\");return{serverSignature:t}}\na(tu,\"parseServerFinalMessage\");function ki(r,e){if(!d.isBuffer(r))throw new TypeError(\n\"first argument must be a Buffer\");if(!d.isBuffer(e))throw new TypeError(\"second\\\n argument must be a Buffer\");if(r.length!==e.length)throw new Error(\"Buffer leng\\\nths must match\");if(r.length===0)throw new Error(\"Buffers cannot be empty\");return d.\nfrom(r.map((t,n)=>r[n]^e[n]))}a(ki,\"xorBuffers\");function ru(r){return Jt.createHash(\n\"sha256\").update(r).digest()}a(ru,\"sha256\");function De(r,e){return Jt.createHmac(\n\"sha256\",r).update(e).digest()}a(De,\"hmacSha256\");function nu(r,e,t){for(var n=De(\nr,d.concat([e,d.from([0,0,0,1])])),i=n,s=0;s<t-1;s++)n=De(r,n),i=ki(i,n);return i}\na(nu,\"Hi\");Ui.exports={startSession:Ya,continueSession:Za,finalizeSession:Ja}});var Xt={};X(Xt,{join:()=>iu});function iu(...r){return r.join(\"/\")}var er=K(()=>{\n\"use strict\";p();a(iu,\"join\")});var tr={};X(tr,{stat:()=>su});function su(r,e){e(new Error(\"No filesystem\"))}var rr=K(\n()=>{\"use strict\";p();a(su,\"stat\")});var nr={};X(nr,{default:()=>ou});var ou,ir=K(()=>{\"use strict\";p();ou={}});var Ni={};X(Ni,{StringDecoder:()=>sr});var or,sr,Qi=K(()=>{\"use strict\";p();or=class or{constructor(e){\nT(this,\"td\");this.td=new TextDecoder(e)}write(e){return this.td.decode(e,{stream:!0})}end(e){\nreturn this.td.decode(e)}};a(or,\"StringDecoder\");sr=or});var Gi=I((il,Hi)=>{\"use strict\";p();var{Transform:au}=(ir(),k(nr)),{StringDecoder:uu}=(Qi(),k(Ni)),\nwe=Symbol(\"last\"),pt=Symbol(\"decoder\");function cu(r,e,t){let n;if(this.overflow){\nif(n=this[pt].write(r).split(this.matcher),n.length===1)return t();n.shift(),this.\noverflow=!1}else this[we]+=this[pt].write(r),n=this[we].split(this.matcher);this[we]=\nn.pop();for(let i=0;i<n.length;i++)try{ji(this,this.mapper(n[i]))}catch(s){return t(\ns)}if(this.overflow=this[we].length>this.maxLength,this.overflow&&!this.skipOverflow){\nt(new Error(\"maximum buffer reached\"));return}t()}a(cu,\"transform\");function hu(r){\nif(this[we]+=this[pt].end(),this[we])try{ji(this,this.mapper(this[we]))}catch(e){\nreturn r(e)}r()}a(hu,\"flush\");function ji(r,e){e!==void 0&&r.push(e)}a(ji,\"push\");\nfunction Wi(r){return r}a(Wi,\"noop\");function lu(r,e,t){switch(r=r||/\\r?\\n/,e=e||\nWi,t=t||{},arguments.length){case 1:typeof r==\"function\"?(e=r,r=/\\r?\\n/):typeof r==\n\"object\"&&!(r instanceof RegExp)&&!r[Symbol.split]&&(t=r,r=/\\r?\\n/);break;case 2:\ntypeof r==\"function\"?(t=e,e=r,r=/\\r?\\n/):typeof e==\"object\"&&(t=e,e=Wi)}t=Object.\nassign({},t),t.autoDestroy=!0,t.transform=cu,t.flush=hu,t.readableObjectMode=!0;\nlet n=new au(t);return n[we]=\"\",n[pt]=new uu(\"utf8\"),n.matcher=r,n.mapper=e,n.maxLength=\nt.maxLength,n.skipOverflow=t.skipOverflow||!1,n.overflow=!1,n._destroy=function(i,s){\nthis._writableState.errorEmitted=!1,s(i)},n}a(lu,\"split\");Hi.exports=lu});var Vi=I((al,fe)=>{\"use strict\";p();var $i=(er(),k(Xt)),fu=(ir(),k(nr)).Stream,pu=Gi(),\nKi=(Ge(),k(He)),du=5432,dt=m.platform===\"win32\",rt=m.stderr,yu=56,mu=7,gu=61440,\nwu=32768;function bu(r){return(r&gu)==wu}a(bu,\"isRegFile\");var Oe=[\"host\",\"port\",\n\"database\",\"user\",\"password\"],ar=Oe.length,Su=Oe[ar-1];function ur(){var r=rt instanceof\nfu&&rt.writable===!0;if(r){var e=Array.prototype.slice.call(arguments).concat(`\n`);rt.write(Ki.format.apply(Ki,e))}}a(ur,\"warn\");Object.defineProperty(fe.exports,\n\"isWin\",{get:function(){return dt},set:function(r){dt=r}});fe.exports.warnTo=function(r){\nvar e=rt;return rt=r,e};fe.exports.getFileName=function(r){var e=r||m.env,t=e.PGPASSFILE||\n(dt?$i.join(e.APPDATA||\"./\",\"postgresql\",\"pgpass.conf\"):$i.join(e.HOME||\"./\",\".p\\\ngpass\"));return t};fe.exports.usePgPass=function(r,e){return Object.prototype.hasOwnProperty.\ncall(m.env,\"PGPASSWORD\")?!1:dt?!0:(e=e||\"<unkn>\",bu(r.mode)?r.mode&(yu|mu)?(ur('\\\nWARNING: password file \"%s\" has group or world access; permissions should be u=r\\\nw (0600) or less',e),!1):!0:(ur('WARNING: password file \"%s\" is not a plain file',\ne),!1))};var xu=fe.exports.match=function(r,e){return Oe.slice(0,-1).reduce(function(t,n,i){\nreturn i==1&&Number(r[n]||du)===Number(e[n])?t&&!0:t&&(e[n]===\"*\"||e[n]===r[n])},\n!0)};fe.exports.getPassword=function(r,e,t){var n,i=e.pipe(pu());function s(c){var h=Eu(\nc);h&&vu(h)&&xu(r,h)&&(n=h[Su],i.end())}a(s,\"onLine\");var o=a(function(){e.destroy(),\nt(n)},\"onEnd\"),u=a(function(c){e.destroy(),ur(\"WARNING: error on reading file: %\\\ns\",c),t(void 0)},\"onErr\");e.on(\"error\",u),i.on(\"data\",s).on(\"end\",o).on(\"error\",\nu)};var Eu=fe.exports.parseLine=function(r){if(r.length<11||r.match(/^\\s+#/))return null;\nfor(var e=\"\",t=\"\",n=0,i=0,s=0,o={},u=!1,c=a(function(l,y,E){var _=r.substring(y,\nE);Object.hasOwnProperty.call(m.env,\"PGPASS_NO_DEESCAPE\")||(_=_.replace(/\\\\([:\\\\])/g,\n\"$1\")),o[Oe[l]]=_},\"addToObj\"),h=0;h<r.length-1;h+=1){if(e=r.charAt(h+1),t=r.charAt(\nh),u=n==ar-1,u){c(n,i);break}h>=0&&e==\":\"&&t!==\"\\\\\"&&(c(n,i,h+1),i=h+2,n+=1)}return o=\nObject.keys(o).length===ar?o:null,o},vu=fe.exports.isValidEntry=function(r){for(var e={\n0:function(o){return o.length>0},1:function(o){return o===\"*\"?!0:(o=Number(o),isFinite(\no)&&o>0&&o<9007199254740992&&Math.floor(o)===o)},2:function(o){return o.length>0},\n3:function(o){return o.length>0},4:function(o){return o.length>0}},t=0;t<Oe.length;t+=\n1){var n=e[t],i=r[Oe[t]]||\"\",s=n(i);if(!s)return!1}return!0}});var Yi=I((ll,cr)=>{\"use strict\";p();var hl=(er(),k(Xt)),zi=(rr(),k(tr)),yt=Vi();\ncr.exports=function(r,e){var t=yt.getFileName();zi.stat(t,function(n,i){if(n||!yt.\nusePgPass(i,t))return e(void 0);var s=zi.createReadStream(t);yt.getPassword(r,s,\ne)})};cr.exports.warnTo=yt.warnTo});var hr=I((pl,Zi)=>{\"use strict\";p();var _u=Xe();function mt(r){this._types=r||_u,\nthis.text={},this.binary={}}a(mt,\"TypeOverrides\");mt.prototype.getOverrides=function(r){\nswitch(r){case\"text\":return this.text;case\"binary\":return this.binary;default:return{}}};\nmt.prototype.setTypeParser=function(r,e,t){typeof e==\"function\"&&(t=e,e=\"text\"),\nthis.getOverrides(e)[r]=t};mt.prototype.getTypeParser=function(r,e){return e=e||\n\"text\",this.getOverrides(e)[r]||this._types.getTypeParser(r,e)};Zi.exports=mt});var Ji={};X(Ji,{default:()=>Au});var Au,Xi=K(()=>{\"use strict\";p();Au={}});var es={};X(es,{parse:()=>lr});function lr(r,e=!1){let{protocol:t}=new URL(r),n=\"\\\nhttp:\"+r.substring(t.length),{username:i,password:s,host:o,hostname:u,port:c,pathname:h,\nsearch:l,searchParams:y,hash:E}=new URL(n);s=decodeURIComponent(s);let _=i+\":\"+s,\nP=e?Object.fromEntries(y.entries()):l;return{href:r,protocol:t,auth:_,username:i,\npassword:s,host:o,hostname:u,port:c,pathname:h,search:l,query:P,hash:E}}var fr=K(\n()=>{\"use strict\";p();a(lr,\"parse\")});var rs=I((bl,ts)=>{\"use strict\";p();var Cu=(fr(),k(es)),pr=(rr(),k(tr));function dr(r){\nif(r.charAt(0)===\"/\"){var t=r.split(\" \");return{host:t[0],database:t[1]}}var e=Cu.\nparse(/ |%[^a-f0-9]|%[a-f0-9][^a-f0-9]/i.test(r)?encodeURI(r).replace(/\\%25(\\d\\d)/g,\n\"%$1\"):r,!0),t=e.query;for(var n in t)Array.isArray(t[n])&&(t[n]=t[n][t[n].length-\n1]);var i=(e.auth||\":\").split(\":\");if(t.user=i[0],t.password=i.splice(1).join(\":\"),\nt.port=e.port,e.protocol==\"socket:\")return t.host=decodeURI(e.pathname),t.database=\ne.query.db,t.client_encoding=e.query.encoding,t;t.host||(t.host=e.hostname);var s=e.\npathname;if(!t.host&&s&&/^%2f/i.test(s)){var o=s.split(\"/\");t.host=decodeURIComponent(\no[0]),s=o.splice(1).join(\"/\")}switch(s&&s.charAt(0)===\"/\"&&(s=s.slice(1)||null),\nt.database=s&&decodeURI(s),(t.ssl===\"true\"||t.ssl===\"1\")&&(t.ssl=!0),t.ssl===\"0\"&&\n(t.ssl=!1),(t.sslcert||t.sslkey||t.sslrootcert||t.sslmode)&&(t.ssl={}),t.sslcert&&\n(t.ssl.cert=pr.readFileSync(t.sslcert).toString()),t.sslkey&&(t.ssl.key=pr.readFileSync(\nt.sslkey).toString()),t.sslrootcert&&(t.ssl.ca=pr.readFileSync(t.sslrootcert).toString()),\nt.sslmode){case\"disable\":{t.ssl=!1;break}case\"prefer\":case\"require\":case\"verify-\\\nca\":case\"verify-full\":break;case\"no-verify\":{t.ssl.rejectUnauthorized=!1;break}}\nreturn t}a(dr,\"parse\");ts.exports=dr;dr.parse=dr});var gt=I((El,ss)=>{\"use strict\";p();var Iu=(Xi(),k(Ji)),is=et(),ns=rs().parse,V=a(\nfunction(r,e,t){return t===void 0?t=m.env[\"PG\"+r.toUpperCase()]:t===!1||(t=m.env[t]),\ne[r]||t||is[r]},\"val\"),Tu=a(function(){switch(m.env.PGSSLMODE){case\"disable\":return!1;case\"\\\nprefer\":case\"require\":case\"verify-ca\":case\"verify-full\":return!0;case\"no-verify\":\nreturn{rejectUnauthorized:!1}}return is.ssl},\"readSSLConfigFromEnvironment\"),ke=a(\nfunction(r){return\"'\"+(\"\"+r).replace(/\\\\/g,\"\\\\\\\\\").replace(/'/g,\"\\\\'\")+\"'\"},\"quo\\\nteParamValue\"),re=a(function(r,e,t){var n=e[t];n!=null&&r.push(t+\"=\"+ke(n))},\"ad\\\nd\"),mr=class mr{constructor(e){e=typeof e==\"string\"?ns(e):e||{},e.connectionString&&\n(e=Object.assign({},e,ns(e.connectionString))),this.user=V(\"user\",e),this.database=\nV(\"database\",e),this.database===void 0&&(this.database=this.user),this.port=parseInt(\nV(\"port\",e),10),this.host=V(\"host\",e),Object.defineProperty(this,\"password\",{configurable:!0,\nenumerable:!1,writable:!0,value:V(\"password\",e)}),this.binary=V(\"binary\",e),this.\noptions=V(\"options\",e),this.ssl=typeof e.ssl>\"u\"?Tu():e.ssl,typeof this.ssl==\"st\\\nring\"&&this.ssl===\"true\"&&(this.ssl=!0),this.ssl===\"no-verify\"&&(this.ssl={rejectUnauthorized:!1}),\nthis.ssl&&this.ssl.key&&Object.defineProperty(this.ssl,\"key\",{enumerable:!1}),this.\nclient_encoding=V(\"client_encoding\",e),this.replication=V(\"replication\",e),this.\nisDomainSocket=!(this.host||\"\").indexOf(\"/\"),this.application_name=V(\"applicatio\\\nn_name\",e,\"PGAPPNAME\"),this.fallback_application_name=V(\"fallback_application_na\\\nme\",e,!1),this.statement_timeout=V(\"statement_timeout\",e,!1),this.lock_timeout=V(\n\"lock_timeout\",e,!1),this.idle_in_transaction_session_timeout=V(\"idle_in_transac\\\ntion_session_timeout\",e,!1),this.query_timeout=V(\"query_timeout\",e,!1),e.connectionTimeoutMillis===\nvoid 0?this.connect_timeout=m.env.PGCONNECT_TIMEOUT||0:this.connect_timeout=Math.\nfloor(e.connectionTimeoutMillis/1e3),e.keepAlive===!1?this.keepalives=0:e.keepAlive===\n!0&&(this.keepalives=1),typeof e.keepAliveInitialDelayMillis==\"number\"&&(this.keepalives_idle=\nMath.floor(e.keepAliveInitialDelayMillis/1e3))}getLibpqConnectionString(e){var t=[];\nre(t,this,\"user\"),re(t,this,\"password\"),re(t,this,\"port\"),re(t,this,\"application\\\n_name\"),re(t,this,\"fallback_application_name\"),re(t,this,\"connect_timeout\"),re(t,\nthis,\"options\");var n=typeof this.ssl==\"object\"?this.ssl:this.ssl?{sslmode:this.\nssl}:{};if(re(t,n,\"sslmode\"),re(t,n,\"sslca\"),re(t,n,\"sslkey\"),re(t,n,\"sslcert\"),\nre(t,n,\"sslrootcert\"),this.database&&t.push(\"dbname=\"+ke(this.database)),this.replication&&\nt.push(\"replication=\"+ke(this.replication)),this.host&&t.push(\"host=\"+ke(this.host)),\nthis.isDomainSocket)return e(null,t.join(\" \"));this.client_encoding&&t.push(\"cli\\\nent_encoding=\"+ke(this.client_encoding)),Iu.lookup(this.host,function(i,s){return i?\ne(i,null):(t.push(\"hostaddr=\"+ke(s)),e(null,t.join(\" \")))})}};a(mr,\"ConnectionPa\\\nrameters\");var yr=mr;ss.exports=yr});var us=I((Al,as)=>{\"use strict\";p();var Pu=Xe(),os=/^([A-Za-z]+)(?: (\\d+))?(?: (\\d+))?/,\nwr=class wr{constructor(e,t){this.command=null,this.rowCount=null,this.oid=null,\nthis.rows=[],this.fields=[],this._parsers=void 0,this._types=t,this.RowCtor=null,\nthis.rowAsArray=e===\"array\",this.rowAsArray&&(this.parseRow=this._parseRowAsArray)}addCommandComplete(e){\nvar t;e.text?t=os.exec(e.text):t=os.exec(e.command),t&&(this.command=t[1],t[3]?(this.\noid=parseInt(t[2],10),this.rowCount=parseInt(t[3],10)):t[2]&&(this.rowCount=parseInt(\nt[2],10)))}_parseRowAsArray(e){for(var t=new Array(e.length),n=0,i=e.length;n<i;n++){\nvar s=e[n];s!==null?t[n]=this._parsers[n](s):t[n]=null}return t}parseRow(e){for(var t={},\nn=0,i=e.length;n<i;n++){var s=e[n],o=this.fields[n].name;s!==null?t[o]=this._parsers[n](\ns):t[o]=null}return t}addRow(e){this.rows.push(e)}addFields(e){this.fields=e,this.\nfields.length&&(this._parsers=new Array(e.length));for(var t=0;t<e.length;t++){var n=e[t];\nthis._types?this._parsers[t]=this._types.getTypeParser(n.dataTypeID,n.format||\"t\\\next\"):this._parsers[t]=Pu.getTypeParser(n.dataTypeID,n.format||\"text\")}}};a(wr,\"\\\nResult\");var gr=wr;as.exports=gr});var fs=I((Tl,ls)=>{\"use strict\";p();var{EventEmitter:Bu}=ge(),cs=us(),hs=tt(),Sr=class Sr extends Bu{constructor(e,t,n){\nsuper(),e=hs.normalizeQueryConfig(e,t,n),this.text=e.text,this.values=e.values,this.\nrows=e.rows,this.types=e.types,this.name=e.name,this.binary=e.binary,this.portal=\ne.portal||\"\",this.callback=e.callback,this._rowMode=e.rowMode,m.domain&&e.callback&&\n(this.callback=m.domain.bind(e.callback)),this._result=new cs(this._rowMode,this.\ntypes),this._results=this._result,this.isPreparedStatement=!1,this._canceledDueToError=\n!1,this._promise=null}requiresPreparation(){return this.name||this.rows?!0:!this.\ntext||!this.values?!1:this.values.length>0}_checkForMultirow(){this._result.command&&\n(Array.isArray(this._results)||(this._results=[this._result]),this._result=new cs(\nthis._rowMode,this.types),this._results.push(this._result))}handleRowDescription(e){\nthis._checkForMultirow(),this._result.addFields(e.fields),this._accumulateRows=this.\ncallback||!this.listeners(\"row\").length}handleDataRow(e){let t;if(!this._canceledDueToError){\ntry{t=this._result.parseRow(e.fields)}catch(n){this._canceledDueToError=n;return}\nthis.emit(\"row\",t,this._result),this._accumulateRows&&this._result.addRow(t)}}handleCommandComplete(e,t){\nthis._checkForMultirow(),this._result.addCommandComplete(e),this.rows&&t.sync()}handleEmptyQuery(e){\nthis.rows&&e.sync()}handleError(e,t){if(this._canceledDueToError&&(e=this._canceledDueToError,\nthis._canceledDueToError=!1),this.callback)return this.callback(e);this.emit(\"er\\\nror\",e)}handleReadyForQuery(e){if(this._canceledDueToError)return this.handleError(\nthis._canceledDueToError,e);if(this.callback)try{this.callback(null,this._results)}catch(t){\nm.nextTick(()=>{throw t})}this.emit(\"end\",this._results)}submit(e){if(typeof this.\ntext!=\"string\"&&typeof this.name!=\"string\")return new Error(\"A query must have e\\\nither text or a name. Supplying neither is unsupported.\");let t=e.parsedStatements[this.\nname];return this.text&&t&&this.text!==t?new Error(`Prepared statements must be \\\nunique - '${this.name}' was used for a different statement`):this.values&&!Array.\nisArray(this.values)?new Error(\"Query values must be an array\"):(this.requiresPreparation()?\nthis.prepare(e):e.query(this.text),null)}hasBeenParsed(e){return this.name&&e.parsedStatements[this.\nname]}handlePortalSuspended(e){this._getRows(e,this.rows)}_getRows(e,t){e.execute(\n{portal:this.portal,rows:t}),t?e.flush():e.sync()}prepare(e){this.isPreparedStatement=\n!0,this.hasBeenParsed(e)||e.parse({text:this.text,name:this.name,types:this.types});\ntry{e.bind({portal:this.portal,statement:this.name,values:this.values,binary:this.\nbinary,valueMapper:hs.prepareValue})}catch(t){this.handleError(t,e);return}e.describe(\n{type:\"P\",name:this.portal||\"\"}),this._getRows(e,this.rows)}handleCopyInResponse(e){\ne.sendCopyFail(\"No source stream defined\")}handleCopyData(e,t){}};a(Sr,\"Query\");\nvar br=Sr;ls.exports=br});var ds={};X(ds,{Socket:()=>_e,isIP:()=>Lu});function Lu(r){return 0}var ps,x,_e,\nwt=K(()=>{\"use strict\";p();ps=We(ge(),1);a(Lu,\"isIP\");x=class x extends ps.EventEmitter{constructor(){\nsuper(...arguments);T(this,\"opts\",{});T(this,\"connecting\",!1);T(this,\"pending\",!0);\nT(this,\"writable\",!0);T(this,\"encrypted\",!1);T(this,\"authorized\",!1);T(this,\"des\\\ntroyed\",!1);T(this,\"ws\",null);T(this,\"writeBuffer\");T(this,\"tlsState\",0);T(this,\n\"tlsRead\");T(this,\"tlsWrite\")}static get poolQueryViaFetch(){return x.opts.poolQueryViaFetch??\nx.defaults.poolQueryViaFetch}static set poolQueryViaFetch(t){x.opts.poolQueryViaFetch=\nt}static get fetchEndpoint(){return x.opts.fetchEndpoint??x.defaults.fetchEndpoint}static set fetchEndpoint(t){\nx.opts.fetchEndpoint=t}static get fetchConnectionCache(){return x.opts.fetchConnectionCache??\nx.defaults.fetchConnectionCache}static set fetchConnectionCache(t){x.opts.fetchConnectionCache=\nt}static get fetchFunction(){return x.opts.fetchFunction??x.defaults.fetchFunction}static set fetchFunction(t){\nx.opts.fetchFunction=t}static get webSocketConstructor(){return x.opts.webSocketConstructor??\nx.defaults.webSocketConstructor}static set webSocketConstructor(t){x.opts.webSocketConstructor=\nt}get webSocketConstructor(){return this.opts.webSocketConstructor??x.webSocketConstructor}set webSocketConstructor(t){\nthis.opts.webSocketConstructor=t}static get wsProxy(){return x.opts.wsProxy??x.defaults.\nwsProxy}static set wsProxy(t){x.opts.wsProxy=t}get wsProxy(){return this.opts.wsProxy??\nx.wsProxy}set wsProxy(t){this.opts.wsProxy=t}static get coalesceWrites(){return x.\nopts.coalesceWrites??x.defaults.coalesceWrites}static set coalesceWrites(t){x.opts.\ncoalesceWrites=t}get coalesceWrites(){return this.opts.coalesceWrites??x.coalesceWrites}set coalesceWrites(t){\nthis.opts.coalesceWrites=t}static get useSecureWebSocket(){return x.opts.useSecureWebSocket??\nx.defaults.useSecureWebSocket}static set useSecureWebSocket(t){x.opts.useSecureWebSocket=\nt}get useSecureWebSocket(){return this.opts.useSecureWebSocket??x.useSecureWebSocket}set useSecureWebSocket(t){\nthis.opts.useSecureWebSocket=t}static get forceDisablePgSSL(){return x.opts.forceDisablePgSSL??\nx.defaults.forceDisablePgSSL}static set forceDisablePgSSL(t){x.opts.forceDisablePgSSL=\nt}get forceDisablePgSSL(){return this.opts.forceDisablePgSSL??x.forceDisablePgSSL}set forceDisablePgSSL(t){\nthis.opts.forceDisablePgSSL=t}static get disableSNI(){return x.opts.disableSNI??\nx.defaults.disableSNI}static set disableSNI(t){x.opts.disableSNI=t}get disableSNI(){\nreturn this.opts.disableSNI??x.disableSNI}set disableSNI(t){this.opts.disableSNI=\nt}static get pipelineConnect(){return x.opts.pipelineConnect??x.defaults.pipelineConnect}static set pipelineConnect(t){\nx.opts.pipelineConnect=t}get pipelineConnect(){return this.opts.pipelineConnect??\nx.pipelineConnect}set pipelineConnect(t){this.opts.pipelineConnect=t}static get subtls(){\nreturn x.opts.subtls??x.defaults.subtls}static set subtls(t){x.opts.subtls=t}get subtls(){\nreturn this.opts.subtls??x.subtls}set subtls(t){this.opts.subtls=t}static get pipelineTLS(){\nreturn x.opts.pipelineTLS??x.defaults.pipelineTLS}static set pipelineTLS(t){x.opts.\npipelineTLS=t}get pipelineTLS(){return this.opts.pipelineTLS??x.pipelineTLS}set pipelineTLS(t){\nthis.opts.pipelineTLS=t}static get rootCerts(){return x.opts.rootCerts??x.defaults.\nrootCerts}static set rootCerts(t){x.opts.rootCerts=t}get rootCerts(){return this.\nopts.rootCerts??x.rootCerts}set rootCerts(t){this.opts.rootCerts=t}wsProxyAddrForHost(t,n){\nlet i=this.wsProxy;if(i===void 0)throw new Error(\"No WebSocket proxy is configur\\\ned. Please see https://github.com/neondatabase/serverless/blob/main/CONFIG.md#ws\\\nproxy-string--host-string-port-number--string--string\");return typeof i==\"functi\\\non\"?i(t,n):`${i}?address=${t}:${n}`}setNoDelay(){return this}setKeepAlive(){return this}ref(){\nreturn this}unref(){return this}connect(t,n,i){this.connecting=!0,i&&this.once(\"\\\nconnect\",i);let s=a(()=>{this.connecting=!1,this.pending=!1,this.emit(\"connect\"),\nthis.emit(\"ready\")},\"handleWebSocketOpen\"),o=a((c,h=!1)=>{c.binaryType=\"arraybuf\\\nfer\",c.addEventListener(\"error\",l=>{this.emit(\"error\",l),this.emit(\"close\")}),c.\naddEventListener(\"message\",l=>{if(this.tlsState===0){let y=d.from(l.data);this.emit(\n\"data\",y)}}),c.addEventListener(\"close\",()=>{this.emit(\"close\")}),h?s():c.addEventListener(\n\"open\",s)},\"configureWebSocket\"),u;try{u=this.wsProxyAddrForHost(n,typeof t==\"st\\\nring\"?parseInt(t,10):t)}catch(c){this.emit(\"error\",c),this.emit(\"close\");return}\ntry{let h=(this.useSecureWebSocket?\"wss:\":\"ws:\")+\"//\"+u;if(this.webSocketConstructor!==\nvoid 0)this.ws=new this.webSocketConstructor(h),o(this.ws);else try{this.ws=new WebSocket(\nh),o(this.ws)}catch{this.ws=new __unstable_WebSocket(h),o(this.ws)}}catch(c){let l=(this.\nuseSecureWebSocket?\"https:\":\"http:\")+\"//\"+u;fetch(l,{headers:{Upgrade:\"websocket\"}}).\nthen(y=>{if(this.ws=y.webSocket,this.ws==null)throw c;this.ws.accept(),o(this.ws,\n!0)}).catch(y=>{this.emit(\"error\",new Error(`All attempts to open a WebSocket to\\\n connect to the database failed. Please refer to https://github.com/neondatabase\\\n/serverless/blob/main/CONFIG.md#websocketconstructor-typeof-websocket--undefined\\\n. Details: ${y.message}`)),this.emit(\"close\")})}}async startTls(t){if(this.subtls===\nvoid 0)throw new Error(\"For Postgres SSL connections, you must set `neonConfig.s\\\nubtls` to the subtls library. See https://github.com/neondatabase/serverless/blo\\\nb/main/CONFIG.md for more information.\");this.tlsState=1;let n=this.subtls.TrustedCert.\nfromPEM(this.rootCerts),i=new this.subtls.WebSocketReadQueue(this.ws),s=i.read.bind(\ni),o=this.rawWrite.bind(this),[u,c]=await this.subtls.startTls(t,n,s,o,{useSNI:!this.\ndisableSNI,expectPreData:this.pipelineTLS?new Uint8Array([83]):void 0});this.tlsRead=\nu,this.tlsWrite=c,this.tlsState=2,this.encrypted=!0,this.authorized=!0,this.emit(\n\"secureConnection\",this),this.tlsReadLoop()}async tlsReadLoop(){for(;;){let t=await this.\ntlsRead();if(t===void 0)break;{let n=d.from(t);this.emit(\"data\",n)}}}rawWrite(t){\nif(!this.coalesceWrites){this.ws.send(t);return}if(this.writeBuffer===void 0)this.\nwriteBuffer=t,setTimeout(()=>{this.ws.send(this.writeBuffer),this.writeBuffer=void 0},\n0);else{let n=new Uint8Array(this.writeBuffer.length+t.length);n.set(this.writeBuffer),\nn.set(t,this.writeBuffer.length),this.writeBuffer=n}}write(t,n=\"utf8\",i=s=>{}){return t.\nlength===0?(i(),!0):(typeof t==\"string\"&&(t=d.from(t,n)),this.tlsState===0?(this.\nrawWrite(t),i()):this.tlsState===1?this.once(\"secureConnection\",()=>{this.write(\nt,n,i)}):(this.tlsWrite(t),i()),!0)}end(t=d.alloc(0),n=\"utf8\",i=()=>{}){return this.\nwrite(t,n,()=>{this.ws.close(),i()}),this}destroy(){return this.destroyed=!0,this.\nend()}};a(x,\"Socket\"),T(x,\"defaults\",{poolQueryViaFetch:!1,fetchEndpoint:t=>\"htt\\\nps://\"+t+\"/sql\",fetchConnectionCache:!1,fetchFunction:void 0,webSocketConstructor:void 0,\nwsProxy:t=>t+\"/v2\",useSecureWebSocket:!0,forceDisablePgSSL:!0,coalesceWrites:!0,\npipelineConnect:\"password\",subtls:void 0,rootCerts:\"\",pipelineTLS:!1,disableSNI:!1}),\nT(x,\"opts\",{});_e=x});var zr=I(C=>{\"use strict\";p();Object.defineProperty(C,\"__esModule\",{value:!0});C.\nNoticeMessage=C.DataRowMessage=C.CommandCompleteMessage=C.ReadyForQueryMessage=C.\nNotificationResponseMessage=C.BackendKeyDataMessage=C.AuthenticationMD5Password=\nC.ParameterStatusMessage=C.ParameterDescriptionMessage=C.RowDescriptionMessage=C.\nField=C.CopyResponse=C.CopyDataMessage=C.DatabaseError=C.copyDone=C.emptyQuery=C.\nreplicationStart=C.portalSuspended=C.noData=C.closeComplete=C.bindComplete=C.parseComplete=\nvoid 0;C.parseComplete={name:\"parseComplete\",length:5};C.bindComplete={name:\"bin\\\ndComplete\",length:5};C.closeComplete={name:\"closeComplete\",length:5};C.noData={name:\"\\\nnoData\",length:5};C.portalSuspended={name:\"portalSuspended\",length:5};C.replicationStart=\n{name:\"replicationStart\",length:4};C.emptyQuery={name:\"emptyQuery\",length:4};C.copyDone=\n{name:\"copyDone\",length:4};var Dr=class Dr extends Error{constructor(e,t,n){super(\ne),this.length=t,this.name=n}};a(Dr,\"DatabaseError\");var xr=Dr;C.DatabaseError=xr;\nvar Or=class Or{constructor(e,t){this.length=e,this.chunk=t,this.name=\"copyData\"}};\na(Or,\"CopyDataMessage\");var Er=Or;C.CopyDataMessage=Er;var kr=class kr{constructor(e,t,n,i){\nthis.length=e,this.name=t,this.binary=n,this.columnTypes=new Array(i)}};a(kr,\"Co\\\npyResponse\");var vr=kr;C.CopyResponse=vr;var Ur=class Ur{constructor(e,t,n,i,s,o,u){\nthis.name=e,this.tableID=t,this.columnID=n,this.dataTypeID=i,this.dataTypeSize=s,\nthis.dataTypeModifier=o,this.format=u}};a(Ur,\"Field\");var _r=Ur;C.Field=_r;var qr=class qr{constructor(e,t){\nthis.length=e,this.fieldCount=t,this.name=\"rowDescription\",this.fields=new Array(\nthis.fieldCount)}};a(qr,\"RowDescriptionMessage\");var Ar=qr;C.RowDescriptionMessage=\nAr;var Nr=class Nr{constructor(e,t){this.length=e,this.parameterCount=t,this.name=\n\"parameterDescription\",this.dataTypeIDs=new Array(this.parameterCount)}};a(Nr,\"P\\\narameterDescriptionMessage\");var Cr=Nr;C.ParameterDescriptionMessage=Cr;var Qr=class Qr{constructor(e,t,n){\nthis.length=e,this.parameterName=t,this.parameterValue=n,this.name=\"parameterSta\\\ntus\"}};a(Qr,\"ParameterStatusMessage\");var Ir=Qr;C.ParameterStatusMessage=Ir;var Wr=class Wr{constructor(e,t){\nthis.length=e,this.salt=t,this.name=\"authenticationMD5Password\"}};a(Wr,\"Authenti\\\ncationMD5Password\");var Tr=Wr;C.AuthenticationMD5Password=Tr;var jr=class jr{constructor(e,t,n){\nthis.length=e,this.processID=t,this.secretKey=n,this.name=\"backendKeyData\"}};a(jr,\n\"BackendKeyDataMessage\");var Pr=jr;C.BackendKeyDataMessage=Pr;var Hr=class Hr{constructor(e,t,n,i){\nthis.length=e,this.processId=t,this.channel=n,this.payload=i,this.name=\"notifica\\\ntion\"}};a(Hr,\"NotificationResponseMessage\");var Br=Hr;C.NotificationResponseMessage=\nBr;var Gr=class Gr{constructor(e,t){this.length=e,this.status=t,this.name=\"ready\\\nForQuery\"}};a(Gr,\"ReadyForQueryMessage\");var Lr=Gr;C.ReadyForQueryMessage=Lr;var $r=class $r{constructor(e,t){\nthis.length=e,this.text=t,this.name=\"commandComplete\"}};a($r,\"CommandCompleteMes\\\nsage\");var Rr=$r;C.CommandCompleteMessage=Rr;var Kr=class Kr{constructor(e,t){this.\nlength=e,this.fields=t,this.name=\"dataRow\",this.fieldCount=t.length}};a(Kr,\"Data\\\nRowMessage\");var Fr=Kr;C.DataRowMessage=Fr;var Vr=class Vr{constructor(e,t){this.\nlength=e,this.message=t,this.name=\"notice\"}};a(Vr,\"NoticeMessage\");var Mr=Vr;C.NoticeMessage=\nMr});var ys=I(bt=>{\"use strict\";p();Object.defineProperty(bt,\"__esModule\",{value:!0});\nbt.Writer=void 0;var Zr=class Zr{constructor(e=256){this.size=e,this.offset=5,this.\nheaderPosition=0,this.buffer=d.allocUnsafe(e)}ensure(e){var t=this.buffer.length-\nthis.offset;if(t<e){var n=this.buffer,i=n.length+(n.length>>1)+e;this.buffer=d.allocUnsafe(\ni),n.copy(this.buffer)}}addInt32(e){return this.ensure(4),this.buffer[this.offset++]=\ne>>>24&255,this.buffer[this.offset++]=e>>>16&255,this.buffer[this.offset++]=e>>>\n8&255,this.buffer[this.offset++]=e>>>0&255,this}addInt16(e){return this.ensure(2),\nthis.buffer[this.offset++]=e>>>8&255,this.buffer[this.offset++]=e>>>0&255,this}addCString(e){\nif(!e)this.ensure(1);else{var t=d.byteLength(e);this.ensure(t+1),this.buffer.write(\ne,this.offset,\"utf-8\"),this.offset+=t}return this.buffer[this.offset++]=0,this}addString(e=\"\"){\nvar t=d.byteLength(e);return this.ensure(t),this.buffer.write(e,this.offset),this.\noffset+=t,this}add(e){return this.ensure(e.length),e.copy(this.buffer,this.offset),\nthis.offset+=e.length,this}join(e){if(e){this.buffer[this.headerPosition]=e;let t=this.\noffset-(this.headerPosition+1);this.buffer.writeInt32BE(t,this.headerPosition+1)}\nreturn this.buffer.slice(e?0:5,this.offset)}flush(e){var t=this.join(e);return this.\noffset=5,this.headerPosition=0,this.buffer=d.allocUnsafe(this.size),t}};a(Zr,\"Wr\\\niter\");var Yr=Zr;bt.Writer=Yr});var gs=I(xt=>{\"use strict\";p();Object.defineProperty(xt,\"__esModule\",{value:!0});\nxt.serialize=void 0;var Jr=ys(),F=new Jr.Writer,Ru=a(r=>{F.addInt16(3).addInt16(\n0);for(let n of Object.keys(r))F.addCString(n).addCString(r[n]);F.addCString(\"cl\\\nient_encoding\").addCString(\"UTF8\");var e=F.addCString(\"\").flush(),t=e.length+4;return new Jr.\nWriter().addInt32(t).add(e).flush()},\"startup\"),Fu=a(()=>{let r=d.allocUnsafe(8);\nreturn r.writeInt32BE(8,0),r.writeInt32BE(80877103,4),r},\"requestSsl\"),Mu=a(r=>F.\naddCString(r).flush(112),\"password\"),Du=a(function(r,e){return F.addCString(r).addInt32(\nd.byteLength(e)).addString(e),F.flush(112)},\"sendSASLInitialResponseMessage\"),Ou=a(\nfunction(r){return F.addString(r).flush(112)},\"sendSCRAMClientFinalMessage\"),ku=a(\nr=>F.addCString(r).flush(81),\"query\"),ms=[],Uu=a(r=>{let e=r.name||\"\";e.length>63&&\n(console.error(\"Warning! Postgres only supports 63 characters for query names.\"),\nconsole.error(\"You supplied %s (%s)\",e,e.length),console.error(\"This can cause c\\\nonflicts and silent errors executing queries\"));let t=r.types||ms;for(var n=t.length,\ni=F.addCString(e).addCString(r.text).addInt16(n),s=0;s<n;s++)i.addInt32(t[s]);return F.\nflush(80)},\"parse\"),Ue=new Jr.Writer,qu=a(function(r,e){for(let t=0;t<r.length;t++){\nlet n=e?e(r[t],t):r[t];n==null?(F.addInt16(0),Ue.addInt32(-1)):n instanceof d?(F.\naddInt16(1),Ue.addInt32(n.length),Ue.add(n)):(F.addInt16(0),Ue.addInt32(d.byteLength(\nn)),Ue.addString(n))}},\"writeValues\"),Nu=a((r={})=>{let e=r.portal||\"\",t=r.statement||\n\"\",n=r.binary||!1,i=r.values||ms,s=i.length;return F.addCString(e).addCString(t),\nF.addInt16(s),qu(i,r.valueMapper),F.addInt16(s),F.add(Ue.flush()),F.addInt16(n?1:\n0),F.flush(66)},\"bind\"),Qu=d.from([69,0,0,0,9,0,0,0,0,0]),Wu=a(r=>{if(!r||!r.portal&&\n!r.rows)return Qu;let e=r.portal||\"\",t=r.rows||0,n=d.byteLength(e),i=4+n+1+4,s=d.\nallocUnsafe(1+i);return s[0]=69,s.writeInt32BE(i,1),s.write(e,5,\"utf-8\"),s[n+5]=\n0,s.writeUInt32BE(t,s.length-4),s},\"execute\"),ju=a((r,e)=>{let t=d.allocUnsafe(16);\nreturn t.writeInt32BE(16,0),t.writeInt16BE(1234,4),t.writeInt16BE(5678,6),t.writeInt32BE(\nr,8),t.writeInt32BE(e,12),t},\"cancel\"),Xr=a((r,e)=>{let n=4+d.byteLength(e)+1,i=d.\nallocUnsafe(1+n);return i[0]=r,i.writeInt32BE(n,1),i.write(e,5,\"utf-8\"),i[n]=0,i},\n\"cstringMessage\"),Hu=F.addCString(\"P\").flush(68),Gu=F.addCString(\"S\").flush(68),\n$u=a(r=>r.name?Xr(68,`${r.type}${r.name||\"\"}`):r.type===\"P\"?Hu:Gu,\"describe\"),Ku=a(\nr=>{let e=`${r.type}${r.name||\"\"}`;return Xr(67,e)},\"close\"),Vu=a(r=>F.add(r).flush(\n100),\"copyData\"),zu=a(r=>Xr(102,r),\"copyFail\"),St=a(r=>d.from([r,0,0,0,4]),\"code\\\nOnlyBuffer\"),Yu=St(72),Zu=St(83),Ju=St(88),Xu=St(99),ec={startup:Ru,password:Mu,\nrequestSsl:Fu,sendSASLInitialResponseMessage:Du,sendSCRAMClientFinalMessage:Ou,query:ku,\nparse:Uu,bind:Nu,execute:Wu,describe:$u,close:Ku,flush:()=>Yu,sync:()=>Zu,end:()=>Ju,\ncopyData:Vu,copyDone:()=>Xu,copyFail:zu,cancel:ju};xt.serialize=ec});var ws=I(Et=>{\"use strict\";p();Object.defineProperty(Et,\"__esModule\",{value:!0});\nEt.BufferReader=void 0;var tc=d.allocUnsafe(0),tn=class tn{constructor(e=0){this.\noffset=e,this.buffer=tc,this.encoding=\"utf-8\"}setBuffer(e,t){this.offset=e,this.\nbuffer=t}int16(){let e=this.buffer.readInt16BE(this.offset);return this.offset+=\n2,e}byte(){let e=this.buffer[this.offset];return this.offset++,e}int32(){let e=this.\nbuffer.readInt32BE(this.offset);return this.offset+=4,e}string(e){let t=this.buffer.\ntoString(this.encoding,this.offset,this.offset+e);return this.offset+=e,t}cstring(){\nlet e=this.offset,t=e;for(;this.buffer[t++]!==0;);return this.offset=t,this.buffer.\ntoString(this.encoding,e,t-1)}bytes(e){let t=this.buffer.slice(this.offset,this.\noffset+e);return this.offset+=e,t}};a(tn,\"BufferReader\");var en=tn;Et.BufferReader=\nen});var bs={};X(bs,{default:()=>rc});var rc,Ss=K(()=>{\"use strict\";p();rc={}});var vs=I(qe=>{\"use strict\";p();var nc=qe&&qe.__importDefault||function(r){return r&&\nr.__esModule?r:{default:r}};Object.defineProperty(qe,\"__esModule\",{value:!0});qe.\nParser=void 0;var M=zr(),ic=ws(),sc=nc((Ss(),k(bs))),rn=1,oc=4,xs=rn+oc,Es=d.allocUnsafe(\n0),sn=class sn{constructor(e){if(this.buffer=Es,this.bufferLength=0,this.bufferOffset=\n0,this.reader=new ic.BufferReader,e?.mode===\"binary\")throw new Error(\"Binary mod\\\ne not supported yet\");this.mode=e?.mode||\"text\"}parse(e,t){this.mergeBuffer(e);let n=this.\nbufferOffset+this.bufferLength,i=this.bufferOffset;for(;i+xs<=n;){let s=this.buffer[i],\no=this.buffer.readUInt32BE(i+rn),u=rn+o;if(u+i<=n){let c=this.handlePacket(i+xs,\ns,o,this.buffer);t(c),i+=u}else break}i===n?(this.buffer=Es,this.bufferLength=0,\nthis.bufferOffset=0):(this.bufferLength=n-i,this.bufferOffset=i)}mergeBuffer(e){\nif(this.bufferLength>0){let t=this.bufferLength+e.byteLength;if(t+this.bufferOffset>\nthis.buffer.byteLength){let i;if(t<=this.buffer.byteLength&&this.bufferOffset>=this.\nbufferLength)i=this.buffer;else{let s=this.buffer.byteLength*2;for(;t>=s;)s*=2;i=\nd.allocUnsafe(s)}this.buffer.copy(i,0,this.bufferOffset,this.bufferOffset+this.bufferLength),\nthis.buffer=i,this.bufferOffset=0}e.copy(this.buffer,this.bufferOffset+this.bufferLength),\nthis.bufferLength=t}else this.buffer=e,this.bufferOffset=0,this.bufferLength=e.byteLength}handlePacket(e,t,n,i){\nswitch(t){case 50:return M.bindComplete;case 49:return M.parseComplete;case 51:return M.\ncloseComplete;case 110:return M.noData;case 115:return M.portalSuspended;case 99:\nreturn M.copyDone;case 87:return M.replicationStart;case 73:return M.emptyQuery;case 68:\nreturn this.parseDataRowMessage(e,n,i);case 67:return this.parseCommandCompleteMessage(\ne,n,i);case 90:return this.parseReadyForQueryMessage(e,n,i);case 65:return this.\nparseNotificationMessage(e,n,i);case 82:return this.parseAuthenticationResponse(\ne,n,i);case 83:return this.parseParameterStatusMessage(e,n,i);case 75:return this.\nparseBackendKeyData(e,n,i);case 69:return this.parseErrorMessage(e,n,i,\"error\");case 78:\nreturn this.parseErrorMessage(e,n,i,\"notice\");case 84:return this.parseRowDescriptionMessage(\ne,n,i);case 116:return this.parseParameterDescriptionMessage(e,n,i);case 71:return this.\nparseCopyInMessage(e,n,i);case 72:return this.parseCopyOutMessage(e,n,i);case 100:\nreturn this.parseCopyData(e,n,i);default:sc.default.fail(`unknown message code: ${t.\ntoString(16)}`)}}parseReadyForQueryMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.\nreader.string(1);return new M.ReadyForQueryMessage(t,i)}parseCommandCompleteMessage(e,t,n){\nthis.reader.setBuffer(e,n);let i=this.reader.cstring();return new M.CommandCompleteMessage(\nt,i)}parseCopyData(e,t,n){let i=n.slice(e,e+(t-4));return new M.CopyDataMessage(\nt,i)}parseCopyInMessage(e,t,n){return this.parseCopyMessage(e,t,n,\"copyInRespons\\\ne\")}parseCopyOutMessage(e,t,n){return this.parseCopyMessage(e,t,n,\"copyOutRespon\\\nse\")}parseCopyMessage(e,t,n,i){this.reader.setBuffer(e,n);let s=this.reader.byte()!==\n0,o=this.reader.int16(),u=new M.CopyResponse(t,i,s,o);for(let c=0;c<o;c++)u.columnTypes[c]=\nthis.reader.int16();return u}parseNotificationMessage(e,t,n){this.reader.setBuffer(\ne,n);let i=this.reader.int32(),s=this.reader.cstring(),o=this.reader.cstring();return new M.\nNotificationResponseMessage(t,i,s,o)}parseRowDescriptionMessage(e,t,n){this.reader.\nsetBuffer(e,n);let i=this.reader.int16(),s=new M.RowDescriptionMessage(t,i);for(let o=0;o<\ni;o++)s.fields[o]=this.parseField();return s}parseField(){let e=this.reader.cstring(),\nt=this.reader.int32(),n=this.reader.int16(),i=this.reader.int32(),s=this.reader.\nint16(),o=this.reader.int32(),u=this.reader.int16()===0?\"text\":\"binary\";return new M.\nField(e,t,n,i,s,o,u)}parseParameterDescriptionMessage(e,t,n){this.reader.setBuffer(\ne,n);let i=this.reader.int16(),s=new M.ParameterDescriptionMessage(t,i);for(let o=0;o<\ni;o++)s.dataTypeIDs[o]=this.reader.int32();return s}parseDataRowMessage(e,t,n){this.\nreader.setBuffer(e,n);let i=this.reader.int16(),s=new Array(i);for(let o=0;o<i;o++){\nlet u=this.reader.int32();s[o]=u===-1?null:this.reader.string(u)}return new M.DataRowMessage(\nt,s)}parseParameterStatusMessage(e,t,n){this.reader.setBuffer(e,n);let i=this.reader.\ncstring(),s=this.reader.cstring();return new M.ParameterStatusMessage(t,i,s)}parseBackendKeyData(e,t,n){\nthis.reader.setBuffer(e,n);let i=this.reader.int32(),s=this.reader.int32();return new M.\nBackendKeyDataMessage(t,i,s)}parseAuthenticationResponse(e,t,n){this.reader.setBuffer(\ne,n);let i=this.reader.int32(),s={name:\"authenticationOk\",length:t};switch(i){case 0:\nbreak;case 3:s.length===8&&(s.name=\"authenticationCleartextPassword\");break;case 5:\nif(s.length===12){s.name=\"authenticationMD5Password\";let u=this.reader.bytes(4);\nreturn new M.AuthenticationMD5Password(t,u)}break;case 10:s.name=\"authentication\\\nSASL\",s.mechanisms=[];let o;do o=this.reader.cstring(),o&&s.mechanisms.push(o);while(o);\nbreak;case 11:s.name=\"authenticationSASLContinue\",s.data=this.reader.string(t-8);\nbreak;case 12:s.name=\"authenticationSASLFinal\",s.data=this.reader.string(t-8);break;default:\nthrow new Error(\"Unknown authenticationOk message type \"+i)}return s}parseErrorMessage(e,t,n,i){\nthis.reader.setBuffer(e,n);let s={},o=this.reader.string(1);for(;o!==\"\\0\";)s[o]=\nthis.reader.cstring(),o=this.reader.string(1);let u=s.M,c=i===\"notice\"?new M.NoticeMessage(\nt,u):new M.DatabaseError(u,t,i);return c.severity=s.S,c.code=s.C,c.detail=s.D,c.\nhint=s.H,c.position=s.P,c.internalPosition=s.p,c.internalQuery=s.q,c.where=s.W,c.\nschema=s.s,c.table=s.t,c.column=s.c,c.dataType=s.d,c.constraint=s.n,c.file=s.F,c.\nline=s.L,c.routine=s.R,c}};a(sn,\"Parser\");var nn=sn;qe.Parser=nn});var on=I(be=>{\"use strict\";p();Object.defineProperty(be,\"__esModule\",{value:!0});\nbe.DatabaseError=be.serialize=be.parse=void 0;var ac=zr();Object.defineProperty(\nbe,\"DatabaseError\",{enumerable:!0,get:function(){return ac.DatabaseError}});var uc=gs();\nObject.defineProperty(be,\"serialize\",{enumerable:!0,get:function(){return uc.serialize}});\nvar cc=vs();function hc(r,e){let t=new cc.Parser;return r.on(\"data\",n=>t.parse(n,\ne)),new Promise(n=>r.on(\"end\",()=>n()))}a(hc,\"parse\");be.parse=hc});var _s={};X(_s,{connect:()=>lc});function lc({socket:r,servername:e}){return r.startTls(\ne),r}var As=K(()=>{\"use strict\";p();a(lc,\"connect\")});var cn=I((ef,Ts)=>{\"use strict\";p();var Cs=(wt(),k(ds)),fc=ge().EventEmitter,{parse:pc,\nserialize:q}=on(),Is=q.flush(),dc=q.sync(),yc=q.end(),un=class un extends fc{constructor(e){\nsuper(),e=e||{},this.stream=e.stream||new Cs.Socket,this._keepAlive=e.keepAlive,\nthis._keepAliveInitialDelayMillis=e.keepAliveInitialDelayMillis,this.lastBuffer=\n!1,this.parsedStatements={},this.ssl=e.ssl||!1,this._ending=!1,this._emitMessage=\n!1;var t=this;this.on(\"newListener\",function(n){n===\"message\"&&(t._emitMessage=!0)})}connect(e,t){\nvar n=this;this._connecting=!0,this.stream.setNoDelay(!0),this.stream.connect(e,\nt),this.stream.once(\"connect\",function(){n._keepAlive&&n.stream.setKeepAlive(!0,\nn._keepAliveInitialDelayMillis),n.emit(\"connect\")});let i=a(function(s){n._ending&&\n(s.code===\"ECONNRESET\"||s.code===\"EPIPE\")||n.emit(\"error\",s)},\"reportStreamError\");\nif(this.stream.on(\"error\",i),this.stream.on(\"close\",function(){n.emit(\"end\")}),!this.\nssl)return this.attachListeners(this.stream);this.stream.once(\"data\",function(s){\nvar o=s.toString(\"utf8\");switch(o){case\"S\":break;case\"N\":return n.stream.end(),n.\nemit(\"error\",new Error(\"The server does not support SSL connections\"));default:return n.\nstream.end(),n.emit(\"error\",new Error(\"There was an error establishing an SSL co\\\nnnection\"))}var u=(As(),k(_s));let c={socket:n.stream};n.ssl!==!0&&(Object.assign(\nc,n.ssl),\"key\"in n.ssl&&(c.key=n.ssl.key)),Cs.isIP(t)===0&&(c.servername=t);try{\nn.stream=u.connect(c)}catch(h){return n.emit(\"error\",h)}n.attachListeners(n.stream),\nn.stream.on(\"error\",i),n.emit(\"sslconnect\")})}attachListeners(e){e.on(\"end\",()=>{\nthis.emit(\"end\")}),pc(e,t=>{var n=t.name===\"error\"?\"errorMessage\":t.name;this._emitMessage&&\nthis.emit(\"message\",t),this.emit(n,t)})}requestSsl(){this.stream.write(q.requestSsl())}startup(e){\nthis.stream.write(q.startup(e))}cancel(e,t){this._send(q.cancel(e,t))}password(e){\nthis._send(q.password(e))}sendSASLInitialResponseMessage(e,t){this._send(q.sendSASLInitialResponseMessage(\ne,t))}sendSCRAMClientFinalMessage(e){this._send(q.sendSCRAMClientFinalMessage(e))}_send(e){\nreturn this.stream.writable?this.stream.write(e):!1}query(e){this._send(q.query(\ne))}parse(e){this._send(q.parse(e))}bind(e){this._send(q.bind(e))}execute(e){this.\n_send(q.execute(e))}flush(){this.stream.writable&&this.stream.write(Is)}sync(){this.\n_ending=!0,this._send(Is),this._send(dc)}ref(){this.stream.ref()}unref(){this.stream.\nunref()}end(){if(this._ending=!0,!this._connecting||!this.stream.writable){this.\nstream.end();return}return this.stream.write(yc,()=>{this.stream.end()})}close(e){\nthis._send(q.close(e))}describe(e){this._send(q.describe(e))}sendCopyFromChunk(e){\nthis._send(q.copyData(e))}endCopyFrom(){this._send(q.copyDone())}sendCopyFail(e){\nthis._send(q.copyFail(e))}};a(un,\"Connection\");var an=un;Ts.exports=an});var Ls=I((sf,Bs)=>{\"use strict\";p();var mc=ge().EventEmitter,nf=(Ge(),k(He)),gc=tt(),\nhn=qi(),wc=Yi(),bc=hr(),Sc=gt(),Ps=fs(),xc=et(),Ec=cn(),ln=class ln extends mc{constructor(e){\nsuper(),this.connectionParameters=new Sc(e),this.user=this.connectionParameters.\nuser,this.database=this.connectionParameters.database,this.port=this.connectionParameters.\nport,this.host=this.connectionParameters.host,Object.defineProperty(this,\"passwo\\\nrd\",{configurable:!0,enumerable:!1,writable:!0,value:this.connectionParameters.password}),\nthis.replication=this.connectionParameters.replication;var t=e||{};this._Promise=\nt.Promise||b.Promise,this._types=new bc(t.types),this._ending=!1,this._connecting=\n!1,this._connected=!1,this._connectionError=!1,this._queryable=!0,this.connection=\nt.connection||new Ec({stream:t.stream,ssl:this.connectionParameters.ssl,keepAlive:t.\nkeepAlive||!1,keepAliveInitialDelayMillis:t.keepAliveInitialDelayMillis||0,encoding:this.\nconnectionParameters.client_encoding||\"utf8\"}),this.queryQueue=[],this.binary=t.\nbinary||xc.binary,this.processID=null,this.secretKey=null,this.ssl=this.connectionParameters.\nssl||!1,this.ssl&&this.ssl.key&&Object.defineProperty(this.ssl,\"key\",{enumerable:!1}),\nthis._connectionTimeoutMillis=t.connectionTimeoutMillis||0}_errorAllQueries(e){let t=a(\nn=>{m.nextTick(()=>{n.handleError(e,this.connection)})},\"enqueueError\");this.activeQuery&&\n(t(this.activeQuery),this.activeQuery=null),this.queryQueue.forEach(t),this.queryQueue.\nlength=0}_connect(e){var t=this,n=this.connection;if(this._connectionCallback=e,\nthis._connecting||this._connected){let i=new Error(\"Client has already been conn\\\nected. You cannot reuse a client.\");m.nextTick(()=>{e(i)});return}this._connecting=\n!0,this.connectionTimeoutHandle,this._connectionTimeoutMillis>0&&(this.connectionTimeoutHandle=\nsetTimeout(()=>{n._ending=!0,n.stream.destroy(new Error(\"timeout expired\"))},this.\n_connectionTimeoutMillis)),this.host&&this.host.indexOf(\"/\")===0?n.connect(this.\nhost+\"/.s.PGSQL.\"+this.port):n.connect(this.port,this.host),n.on(\"connect\",function(){\nt.ssl?n.requestSsl():n.startup(t.getStartupConf())}),n.on(\"sslconnect\",function(){\nn.startup(t.getStartupConf())}),this._attachListeners(n),n.once(\"end\",()=>{let i=this.\n_ending?new Error(\"Connection terminated\"):new Error(\"Connection terminated unex\\\npectedly\");clearTimeout(this.connectionTimeoutHandle),this._errorAllQueries(i),this.\n_ending||(this._connecting&&!this._connectionError?this._connectionCallback?this.\n_connectionCallback(i):this._handleErrorEvent(i):this._connectionError||this._handleErrorEvent(\ni)),m.nextTick(()=>{this.emit(\"end\")})})}connect(e){if(e){this._connect(e);return}\nreturn new this._Promise((t,n)=>{this._connect(i=>{i?n(i):t()})})}_attachListeners(e){\ne.on(\"authenticationCleartextPassword\",this._handleAuthCleartextPassword.bind(this)),\ne.on(\"authenticationMD5Password\",this._handleAuthMD5Password.bind(this)),e.on(\"a\\\nuthenticationSASL\",this._handleAuthSASL.bind(this)),e.on(\"authenticationSASLCont\\\ninue\",this._handleAuthSASLContinue.bind(this)),e.on(\"authenticationSASLFinal\",this.\n_handleAuthSASLFinal.bind(this)),e.on(\"backendKeyData\",this._handleBackendKeyData.\nbind(this)),e.on(\"error\",this._handleErrorEvent.bind(this)),e.on(\"errorMessage\",\nthis._handleErrorMessage.bind(this)),e.on(\"readyForQuery\",this._handleReadyForQuery.\nbind(this)),e.on(\"notice\",this._handleNotice.bind(this)),e.on(\"rowDescription\",this.\n_handleRowDescription.bind(this)),e.on(\"dataRow\",this._handleDataRow.bind(this)),\ne.on(\"portalSuspended\",this._handlePortalSuspended.bind(this)),e.on(\"emptyQuery\",\nthis._handleEmptyQuery.bind(this)),e.on(\"commandComplete\",this._handleCommandComplete.\nbind(this)),e.on(\"parseComplete\",this._handleParseComplete.bind(this)),e.on(\"cop\\\nyInResponse\",this._handleCopyInResponse.bind(this)),e.on(\"copyData\",this._handleCopyData.\nbind(this)),e.on(\"notification\",this._handleNotification.bind(this))}_checkPgPass(e){\nlet t=this.connection;typeof this.password==\"function\"?this._Promise.resolve().then(\n()=>this.password()).then(n=>{if(n!==void 0){if(typeof n!=\"string\"){t.emit(\"erro\\\nr\",new TypeError(\"Password must be a string\"));return}this.connectionParameters.\npassword=this.password=n}else this.connectionParameters.password=this.password=null;\ne()}).catch(n=>{t.emit(\"error\",n)}):this.password!==null?e():wc(this.connectionParameters,\nn=>{n!==void 0&&(this.connectionParameters.password=this.password=n),e()})}_handleAuthCleartextPassword(e){\nthis._checkPgPass(()=>{this.connection.password(this.password)})}_handleAuthMD5Password(e){\nthis._checkPgPass(()=>{let t=gc.postgresMd5PasswordHash(this.user,this.password,\ne.salt);this.connection.password(t)})}_handleAuthSASL(e){this._checkPgPass(()=>{\nthis.saslSession=hn.startSession(e.mechanisms),this.connection.sendSASLInitialResponseMessage(\nthis.saslSession.mechanism,this.saslSession.response)})}_handleAuthSASLContinue(e){\nhn.continueSession(this.saslSession,this.password,e.data),this.connection.sendSCRAMClientFinalMessage(\nthis.saslSession.response)}_handleAuthSASLFinal(e){hn.finalizeSession(this.saslSession,\ne.data),this.saslSession=null}_handleBackendKeyData(e){this.processID=e.processID,\nthis.secretKey=e.secretKey}_handleReadyForQuery(e){this._connecting&&(this._connecting=\n!1,this._connected=!0,clearTimeout(this.connectionTimeoutHandle),this._connectionCallback&&\n(this._connectionCallback(null,this),this._connectionCallback=null),this.emit(\"c\\\nonnect\"));let{activeQuery:t}=this;this.activeQuery=null,this.readyForQuery=!0,t&&\nt.handleReadyForQuery(this.connection),this._pulseQueryQueue()}_handleErrorWhileConnecting(e){\nif(!this._connectionError){if(this._connectionError=!0,clearTimeout(this.connectionTimeoutHandle),\nthis._connectionCallback)return this._connectionCallback(e);this.emit(\"error\",e)}}_handleErrorEvent(e){\nif(this._connecting)return this._handleErrorWhileConnecting(e);this._queryable=!1,\nthis._errorAllQueries(e),this.emit(\"error\",e)}_handleErrorMessage(e){if(this._connecting)\nreturn this._handleErrorWhileConnecting(e);let t=this.activeQuery;if(!t){this._handleErrorEvent(\ne);return}this.activeQuery=null,t.handleError(e,this.connection)}_handleRowDescription(e){\nthis.activeQuery.handleRowDescription(e)}_handleDataRow(e){this.activeQuery.handleDataRow(\ne)}_handlePortalSuspended(e){this.activeQuery.handlePortalSuspended(this.connection)}_handleEmptyQuery(e){\nthis.activeQuery.handleEmptyQuery(this.connection)}_handleCommandComplete(e){this.\nactiveQuery.handleCommandComplete(e,this.connection)}_handleParseComplete(e){this.\nactiveQuery.name&&(this.connection.parsedStatements[this.activeQuery.name]=this.\nactiveQuery.text)}_handleCopyInResponse(e){this.activeQuery.handleCopyInResponse(\nthis.connection)}_handleCopyData(e){this.activeQuery.handleCopyData(e,this.connection)}_handleNotification(e){\nthis.emit(\"notification\",e)}_handleNotice(e){this.emit(\"notice\",e)}getStartupConf(){\nvar e=this.connectionParameters,t={user:e.user,database:e.database},n=e.application_name||\ne.fallback_application_name;return n&&(t.application_name=n),e.replication&&(t.replication=\n\"\"+e.replication),e.statement_timeout&&(t.statement_timeout=String(parseInt(e.statement_timeout,\n10))),e.lock_timeout&&(t.lock_timeout=String(parseInt(e.lock_timeout,10))),e.idle_in_transaction_session_timeout&&\n(t.idle_in_transaction_session_timeout=String(parseInt(e.idle_in_transaction_session_timeout,\n10))),e.options&&(t.options=e.options),t}cancel(e,t){if(e.activeQuery===t){var n=this.\nconnection;this.host&&this.host.indexOf(\"/\")===0?n.connect(this.host+\"/.s.PGSQL.\"+\nthis.port):n.connect(this.port,this.host),n.on(\"connect\",function(){n.cancel(e.processID,\ne.secretKey)})}else e.queryQueue.indexOf(t)!==-1&&e.queryQueue.splice(e.queryQueue.\nindexOf(t),1)}setTypeParser(e,t,n){return this._types.setTypeParser(e,t,n)}getTypeParser(e,t){\nreturn this._types.getTypeParser(e,t)}escapeIdentifier(e){return'\"'+e.replace(/\"/g,\n'\"\"')+'\"'}escapeLiteral(e){for(var t=!1,n=\"'\",i=0;i<e.length;i++){var s=e[i];s===\n\"'\"?n+=s+s:s===\"\\\\\"?(n+=s+s,t=!0):n+=s}return n+=\"'\",t===!0&&(n=\" E\"+n),n}_pulseQueryQueue(){\nif(this.readyForQuery===!0)if(this.activeQuery=this.queryQueue.shift(),this.activeQuery){\nthis.readyForQuery=!1,this.hasExecuted=!0;let e=this.activeQuery.submit(this.connection);\ne&&m.nextTick(()=>{this.activeQuery.handleError(e,this.connection),this.readyForQuery=\n!0,this._pulseQueryQueue()})}else this.hasExecuted&&(this.activeQuery=null,this.\nemit(\"drain\"))}query(e,t,n){var i,s,o,u,c;if(e==null)throw new TypeError(\"Client\\\n was passed a null or undefined query\");return typeof e.submit==\"function\"?(o=e.\nquery_timeout||this.connectionParameters.query_timeout,s=i=e,typeof t==\"function\"&&\n(i.callback=i.callback||t)):(o=this.connectionParameters.query_timeout,i=new Ps(\ne,t,n),i.callback||(s=new this._Promise((h,l)=>{i.callback=(y,E)=>y?l(y):h(E)}))),\no&&(c=i.callback,u=setTimeout(()=>{var h=new Error(\"Query read timeout\");m.nextTick(\n()=>{i.handleError(h,this.connection)}),c(h),i.callback=()=>{};var l=this.queryQueue.\nindexOf(i);l>-1&&this.queryQueue.splice(l,1),this._pulseQueryQueue()},o),i.callback=\n(h,l)=>{clearTimeout(u),c(h,l)}),this.binary&&!i.binary&&(i.binary=!0),i._result&&\n!i._result._types&&(i._result._types=this._types),this._queryable?this._ending?(m.\nnextTick(()=>{i.handleError(new Error(\"Client was closed and is not queryable\"),\nthis.connection)}),s):(this.queryQueue.push(i),this._pulseQueryQueue(),s):(m.nextTick(\n()=>{i.handleError(new Error(\"Client has encountered a connection error and is n\\\not queryable\"),this.connection)}),s)}ref(){this.connection.ref()}unref(){this.connection.\nunref()}end(e){if(this._ending=!0,!this.connection._connecting)if(e)e();else return this.\n_Promise.resolve();if(this.activeQuery||!this._queryable?this.connection.stream.\ndestroy():this.connection.end(),e)this.connection.once(\"end\",e);else return new this.\n_Promise(t=>{this.connection.once(\"end\",t)})}};a(ln,\"Client\");var vt=ln;vt.Query=\nPs;Bs.exports=vt});var Ds=I((uf,Ms)=>{\"use strict\";p();var vc=ge().EventEmitter,Rs=a(function(){},\"\\\nNOOP\"),Fs=a((r,e)=>{let t=r.findIndex(e);return t===-1?void 0:r.splice(t,1)[0]},\n\"removeWhere\"),dn=class dn{constructor(e,t,n){this.client=e,this.idleListener=t,\nthis.timeoutId=n}};a(dn,\"IdleItem\");var fn=dn,yn=class yn{constructor(e){this.callback=\ne}};a(yn,\"PendingItem\");var Ne=yn;function _c(){throw new Error(\"Release called \\\non client which has already been released to the pool.\")}a(_c,\"throwOnDoubleRele\\\nase\");function _t(r,e){if(e)return{callback:e,result:void 0};let t,n,i=a(function(o,u){\no?t(o):n(u)},\"cb\"),s=new r(function(o,u){n=o,t=u}).catch(o=>{throw Error.captureStackTrace(\no),o});return{callback:i,result:s}}a(_t,\"promisify\");function Ac(r,e){return a(function t(n){\nn.client=e,e.removeListener(\"error\",t),e.on(\"error\",()=>{r.log(\"additional clien\\\nt error after disconnection due to error\",n)}),r._remove(e),r.emit(\"error\",n,e)},\n\"idleListener\")}a(Ac,\"makeIdleListener\");var mn=class mn extends vc{constructor(e,t){\nsuper(),this.options=Object.assign({},e),e!=null&&\"password\"in e&&Object.defineProperty(\nthis.options,\"password\",{configurable:!0,enumerable:!1,writable:!0,value:e.password}),\ne!=null&&e.ssl&&e.ssl.key&&Object.defineProperty(this.options.ssl,\"key\",{enumerable:!1}),\nthis.options.max=this.options.max||this.options.poolSize||10,this.options.maxUses=\nthis.options.maxUses||1/0,this.options.allowExitOnIdle=this.options.allowExitOnIdle||\n!1,this.options.maxLifetimeSeconds=this.options.maxLifetimeSeconds||0,this.log=this.\noptions.log||function(){},this.Client=this.options.Client||t||At().Client,this.Promise=\nthis.options.Promise||b.Promise,typeof this.options.idleTimeoutMillis>\"u\"&&(this.\noptions.idleTimeoutMillis=1e4),this._clients=[],this._idle=[],this._expired=new WeakSet,\nthis._pendingQueue=[],this._endCallback=void 0,this.ending=!1,this.ended=!1}_isFull(){\nreturn this._clients.length>=this.options.max}_pulseQueue(){if(this.log(\"pulse q\\\nueue\"),this.ended){this.log(\"pulse queue ended\");return}if(this.ending){this.log(\n\"pulse queue on ending\"),this._idle.length&&this._idle.slice().map(t=>{this._remove(\nt.client)}),this._clients.length||(this.ended=!0,this._endCallback());return}if(!this.\n_pendingQueue.length){this.log(\"no queued requests\");return}if(!this._idle.length&&\nthis._isFull())return;let e=this._pendingQueue.shift();if(this._idle.length){let t=this.\n_idle.pop();clearTimeout(t.timeoutId);let n=t.client;n.ref&&n.ref();let i=t.idleListener;\nreturn this._acquireClient(n,e,i,!1)}if(!this._isFull())return this.newClient(e);\nthrow new Error(\"unexpected condition\")}_remove(e){let t=Fs(this._idle,n=>n.client===\ne);t!==void 0&&clearTimeout(t.timeoutId),this._clients=this._clients.filter(n=>n!==\ne),e.end(),this.emit(\"remove\",e)}connect(e){if(this.ending){let i=new Error(\"Can\\\nnot use a pool after calling end on the pool\");return e?e(i):this.Promise.reject(\ni)}let t=_t(this.Promise,e),n=t.result;if(this._isFull()||this._idle.length){if(this.\n_idle.length&&m.nextTick(()=>this._pulseQueue()),!this.options.connectionTimeoutMillis)\nreturn this._pendingQueue.push(new Ne(t.callback)),n;let i=a((u,c,h)=>{clearTimeout(\no),t.callback(u,c,h)},\"queueCallback\"),s=new Ne(i),o=setTimeout(()=>{Fs(this._pendingQueue,\nu=>u.callback===i),s.timedOut=!0,t.callback(new Error(\"timeout exceeded when try\\\ning to connect\"))},this.options.connectionTimeoutMillis);return this._pendingQueue.\npush(s),n}return this.newClient(new Ne(t.callback)),n}newClient(e){let t=new this.\nClient(this.options);this._clients.push(t);let n=Ac(this,t);this.log(\"checking c\\\nlient timeout\");let i,s=!1;this.options.connectionTimeoutMillis&&(i=setTimeout(()=>{\nthis.log(\"ending client due to timeout\"),s=!0,t.connection?t.connection.stream.destroy():\nt.end()},this.options.connectionTimeoutMillis)),this.log(\"connecting new client\"),\nt.connect(o=>{if(i&&clearTimeout(i),t.on(\"error\",n),o)this.log(\"client failed to\\\n connect\",o),this._clients=this._clients.filter(u=>u!==t),s&&(o.message=\"Connect\\\nion terminated due to connection timeout\"),this._pulseQueue(),e.timedOut||e.callback(\no,void 0,Rs);else{if(this.log(\"new client connected\"),this.options.maxLifetimeSeconds!==\n0){let u=setTimeout(()=>{this.log(\"ending client due to expired lifetime\"),this.\n_expired.add(t),this._idle.findIndex(h=>h.client===t)!==-1&&this._acquireClient(\nt,new Ne((h,l,y)=>y()),n,!1)},this.options.maxLifetimeSeconds*1e3);u.unref(),t.once(\n\"end\",()=>clearTimeout(u))}return this._acquireClient(t,e,n,!0)}})}_acquireClient(e,t,n,i){\ni&&this.emit(\"connect\",e),this.emit(\"acquire\",e),e.release=this._releaseOnce(e,n),\ne.removeListener(\"error\",n),t.timedOut?i&&this.options.verify?this.options.verify(\ne,e.release):e.release():i&&this.options.verify?this.options.verify(e,s=>{if(s)return e.\nrelease(s),t.callback(s,void 0,Rs);t.callback(void 0,e,e.release)}):t.callback(void 0,\ne,e.release)}_releaseOnce(e,t){let n=!1;return i=>{n&&_c(),n=!0,this._release(e,\nt,i)}}_release(e,t,n){if(e.on(\"error\",t),e._poolUseCount=(e._poolUseCount||0)+1,\nthis.emit(\"release\",n,e),n||this.ending||!e._queryable||e._ending||e._poolUseCount>=\nthis.options.maxUses){e._poolUseCount>=this.options.maxUses&&this.log(\"remove ex\\\npended client\"),this._remove(e),this._pulseQueue();return}if(this._expired.has(e)){\nthis.log(\"remove expired client\"),this._expired.delete(e),this._remove(e),this._pulseQueue();\nreturn}let s;this.options.idleTimeoutMillis&&(s=setTimeout(()=>{this.log(\"remove\\\n idle client\"),this._remove(e)},this.options.idleTimeoutMillis),this.options.allowExitOnIdle&&\ns.unref()),this.options.allowExitOnIdle&&e.unref(),this._idle.push(new fn(e,t,s)),\nthis._pulseQueue()}query(e,t,n){if(typeof e==\"function\"){let s=_t(this.Promise,e);\nreturn S(function(){return s.callback(new Error(\"Passing a function as the first\\\n parameter to pool.query is not supported\"))}),s.result}typeof t==\"function\"&&(n=\nt,t=void 0);let i=_t(this.Promise,n);return n=i.callback,this.connect((s,o)=>{if(s)\nreturn n(s);let u=!1,c=a(h=>{u||(u=!0,o.release(h),n(h))},\"onError\");o.once(\"err\\\nor\",c),this.log(\"dispatching query\");try{o.query(e,t,(h,l)=>{if(this.log(\"query \\\ndispatched\"),o.removeListener(\"error\",c),!u)return u=!0,o.release(h),h?n(h):n(void 0,\nl)})}catch(h){return o.release(h),n(h)}}),i.result}end(e){if(this.log(\"ending\"),\nthis.ending){let n=new Error(\"Called end on pool more than once\");return e?e(n):\nthis.Promise.reject(n)}this.ending=!0;let t=_t(this.Promise,e);return this._endCallback=\nt.callback,this._pulseQueue(),t.result}get waitingCount(){return this._pendingQueue.\nlength}get idleCount(){return this._idle.length}get expiredCount(){return this._clients.\nreduce((e,t)=>e+(this._expired.has(t)?1:0),0)}get totalCount(){return this._clients.\nlength}};a(mn,\"Pool\");var pn=mn;Ms.exports=pn});var Os={};X(Os,{default:()=>Cc});var Cc,ks=K(()=>{\"use strict\";p();Cc={}});var Us=I((ff,Ic)=>{Ic.exports={name:\"pg\",version:\"8.8.0\",description:\"PostgreSQL\\\n client - pure javascript & libpq with the same API\",keywords:[\"database\",\"libpq\",\n\"pg\",\"postgre\",\"postgres\",\"postgresql\",\"rdbms\"],homepage:\"https://github.com/bri\\\nanc/node-postgres\",repository:{type:\"git\",url:\"git://github.com/brianc/node-post\\\ngres.git\",directory:\"packages/pg\"},author:\"Brian Carlson <brian.m.carlson@gmail.\\\ncom>\",main:\"./lib\",dependencies:{\"buffer-writer\":\"2.0.0\",\"packet-reader\":\"1.0.0\",\n\"pg-connection-string\":\"^2.5.0\",\"pg-pool\":\"^3.5.2\",\"pg-protocol\":\"^1.5.0\",\"pg-ty\\\npes\":\"^2.1.0\",pgpass:\"1.x\"},devDependencies:{async:\"2.6.4\",bluebird:\"3.5.2\",co:\"\\\n4.6.0\",\"pg-copy-streams\":\"0.3.0\"},peerDependencies:{\"pg-native\":\">=3.0.1\"},peerDependenciesMeta:{\n\"pg-native\":{optional:!0}},scripts:{test:\"make test-all\"},files:[\"lib\",\"SPONSORS\\\n.md\"],license:\"MIT\",engines:{node:\">= 8.0.0\"},gitHead:\"c99fb2c127ddf8d712500db2c\\\n7b9a5491a178655\"}});var Qs=I((pf,Ns)=>{\"use strict\";p();var qs=ge().EventEmitter,Tc=(Ge(),k(He)),gn=tt(),\nQe=Ns.exports=function(r,e,t){qs.call(this),r=gn.normalizeQueryConfig(r,e,t),this.\ntext=r.text,this.values=r.values,this.name=r.name,this.callback=r.callback,this.\nstate=\"new\",this._arrayMode=r.rowMode===\"array\",this._emitRowEvents=!1,this.on(\"\\\nnewListener\",function(n){n===\"row\"&&(this._emitRowEvents=!0)}.bind(this))};Tc.inherits(\nQe,qs);var Pc={sqlState:\"code\",statementPosition:\"position\",messagePrimary:\"mess\\\nage\",context:\"where\",schemaName:\"schema\",tableName:\"table\",columnName:\"column\",dataTypeName:\"\\\ndataType\",constraintName:\"constraint\",sourceFile:\"file\",sourceLine:\"line\",sourceFunction:\"\\\nroutine\"};Qe.prototype.handleError=function(r){var e=this.native.pq.resultErrorFields();\nif(e)for(var t in e){var n=Pc[t]||t;r[n]=e[t]}this.callback?this.callback(r):this.\nemit(\"error\",r),this.state=\"error\"};Qe.prototype.then=function(r,e){return this.\n_getPromise().then(r,e)};Qe.prototype.catch=function(r){return this._getPromise().\ncatch(r)};Qe.prototype._getPromise=function(){return this._promise?this._promise:\n(this._promise=new Promise(function(r,e){this._once(\"end\",r),this._once(\"error\",\ne)}.bind(this)),this._promise)};Qe.prototype.submit=function(r){this.state=\"runn\\\ning\";var e=this;this.native=r.native,r.native.arrayMode=this._arrayMode;var t=a(\nfunction(s,o,u){if(r.native.arrayMode=!1,S(function(){e.emit(\"_done\")}),s)return e.\nhandleError(s);e._emitRowEvents&&(u.length>1?o.forEach((c,h)=>{c.forEach(l=>{e.emit(\n\"row\",l,u[h])})}):o.forEach(function(c){e.emit(\"row\",c,u)})),e.state=\"end\",e.emit(\n\"end\",u),e.callback&&e.callback(null,u)},\"after\");if(m.domain&&(t=m.domain.bind(\nt)),this.name){this.name.length>63&&(console.error(\"Warning! Postgres only suppo\\\nrts 63 characters for query names.\"),console.error(\"You supplied %s (%s)\",this.name,\nthis.name.length),console.error(\"This can cause conflicts and silent errors exec\\\nuting queries\"));var n=(this.values||[]).map(gn.prepareValue);if(r.namedQueries[this.\nname]){if(this.text&&r.namedQueries[this.name]!==this.text){let s=new Error(`Pre\\\npared statements must be unique - '${this.name}' was used for a different statem\\\nent`);return t(s)}return r.native.execute(this.name,n,t)}return r.native.prepare(\nthis.name,this.text,n.length,function(s){return s?t(s):(r.namedQueries[e.name]=e.\ntext,e.native.execute(e.name,n,t))})}else if(this.values){if(!Array.isArray(this.\nvalues)){let s=new Error(\"Query values must be an array\");return t(s)}var i=this.\nvalues.map(gn.prepareValue);r.native.query(this.text,i,t)}else r.native.query(this.\ntext,t)}});var Gs=I((gf,Hs)=>{\"use strict\";p();var Bc=(ks(),k(Os)),Lc=hr(),mf=Us(),Ws=ge().\nEventEmitter,Rc=(Ge(),k(He)),Fc=gt(),js=Qs(),Z=Hs.exports=function(r){Ws.call(this),\nr=r||{},this._Promise=r.Promise||b.Promise,this._types=new Lc(r.types),this.native=\nnew Bc({types:this._types}),this._queryQueue=[],this._ending=!1,this._connecting=\n!1,this._connected=!1,this._queryable=!0;var e=this.connectionParameters=new Fc(\nr);this.user=e.user,Object.defineProperty(this,\"password\",{configurable:!0,enumerable:!1,\nwritable:!0,value:e.password}),this.database=e.database,this.host=e.host,this.port=\ne.port,this.namedQueries={}};Z.Query=js;Rc.inherits(Z,Ws);Z.prototype._errorAllQueries=\nfunction(r){let e=a(t=>{m.nextTick(()=>{t.native=this.native,t.handleError(r)})},\n\"enqueueError\");this._hasActiveQuery()&&(e(this._activeQuery),this._activeQuery=\nnull),this._queryQueue.forEach(e),this._queryQueue.length=0};Z.prototype._connect=\nfunction(r){var e=this;if(this._connecting){m.nextTick(()=>r(new Error(\"Client h\\\nas already been connected. You cannot reuse a client.\")));return}this._connecting=\n!0,this.connectionParameters.getLibpqConnectionString(function(t,n){if(t)return r(\nt);e.native.connect(n,function(i){if(i)return e.native.end(),r(i);e._connected=!0,\ne.native.on(\"error\",function(s){e._queryable=!1,e._errorAllQueries(s),e.emit(\"er\\\nror\",s)}),e.native.on(\"notification\",function(s){e.emit(\"notification\",{channel:s.\nrelname,payload:s.extra})}),e.emit(\"connect\"),e._pulseQueryQueue(!0),r()})})};Z.\nprototype.connect=function(r){if(r){this._connect(r);return}return new this._Promise(\n(e,t)=>{this._connect(n=>{n?t(n):e()})})};Z.prototype.query=function(r,e,t){var n,\ni,s,o,u;if(r==null)throw new TypeError(\"Client was passed a null or undefined qu\\\nery\");if(typeof r.submit==\"function\")s=r.query_timeout||this.connectionParameters.\nquery_timeout,i=n=r,typeof e==\"function\"&&(r.callback=e);else if(s=this.connectionParameters.\nquery_timeout,n=new js(r,e,t),!n.callback){let c,h;i=new this._Promise((l,y)=>{c=\nl,h=y}),n.callback=(l,y)=>l?h(l):c(y)}return s&&(u=n.callback,o=setTimeout(()=>{\nvar c=new Error(\"Query read timeout\");m.nextTick(()=>{n.handleError(c,this.connection)}),\nu(c),n.callback=()=>{};var h=this._queryQueue.indexOf(n);h>-1&&this._queryQueue.\nsplice(h,1),this._pulseQueryQueue()},s),n.callback=(c,h)=>{clearTimeout(o),u(c,h)}),\nthis._queryable?this._ending?(n.native=this.native,m.nextTick(()=>{n.handleError(\nnew Error(\"Client was closed and is not queryable\"))}),i):(this._queryQueue.push(\nn),this._pulseQueryQueue(),i):(n.native=this.native,m.nextTick(()=>{n.handleError(\nnew Error(\"Client has encountered a connection error and is not queryable\"))}),i)};\nZ.prototype.end=function(r){var e=this;this._ending=!0,this._connected||this.once(\n\"connect\",this.end.bind(this,r));var t;return r||(t=new this._Promise(function(n,i){\nr=a(s=>s?i(s):n(),\"cb\")})),this.native.end(function(){e._errorAllQueries(new Error(\n\"Connection terminated\")),m.nextTick(()=>{e.emit(\"end\"),r&&r()})}),t};Z.prototype.\n_hasActiveQuery=function(){return this._activeQuery&&this._activeQuery.state!==\"\\\nerror\"&&this._activeQuery.state!==\"end\"};Z.prototype._pulseQueryQueue=function(r){\nif(this._connected&&!this._hasActiveQuery()){var e=this._queryQueue.shift();if(!e){\nr||this.emit(\"drain\");return}this._activeQuery=e,e.submit(this);var t=this;e.once(\n\"_done\",function(){t._pulseQueryQueue()})}};Z.prototype.cancel=function(r){this.\n_activeQuery===r?this.native.cancel(function(){}):this._queryQueue.indexOf(r)!==\n-1&&this._queryQueue.splice(this._queryQueue.indexOf(r),1)};Z.prototype.ref=function(){};\nZ.prototype.unref=function(){};Z.prototype.setTypeParser=function(r,e,t){return this.\n_types.setTypeParser(r,e,t)};Z.prototype.getTypeParser=function(r,e){return this.\n_types.getTypeParser(r,e)}});var wn=I((Sf,$s)=>{\"use strict\";p();$s.exports=Gs()});var At=I((Ef,nt)=>{\"use strict\";p();var Mc=Ls(),Dc=et(),Oc=cn(),kc=Ds(),{DatabaseError:Uc}=on(),\nqc=a(r=>{var e;return e=class extends kc{constructor(n){super(n,r)}},a(e,\"BoundP\\\nool\"),e},\"poolFactory\"),bn=a(function(r){this.defaults=Dc,this.Client=r,this.Query=\nthis.Client.Query,this.Pool=qc(this.Client),this._pools=[],this.Connection=Oc,this.\ntypes=Xe(),this.DatabaseError=Uc},\"PG\");typeof m.env.NODE_PG_FORCE_NATIVE<\"u\"?nt.\nexports=new bn(wn()):(nt.exports=new bn(Mc),Object.defineProperty(nt.exports,\"na\\\ntive\",{configurable:!0,enumerable:!1,get(){var r=null;try{r=new bn(wn())}catch(e){\nif(e.code!==\"MODULE_NOT_FOUND\")throw e}return Object.defineProperty(nt.exports,\"\\\nnative\",{value:r}),r}}))});p();var Ct=We(At());wt();p();fr();wt();var zs=We(tt());var Sn=class Sn extends Error{constructor(){super(...arguments);T(this,\"name\",\"N\\\neonDbError\");T(this,\"code\",null);T(this,\"sourceError\")}};a(Sn,\"NeonDbError\");var Ae=Sn,\nKs=\"transaction() expects an array of queries, or a function returning an array \\\nof queries\";function Ys(r,{arrayMode:e,fullResults:t,fetchOptions:n,isolationLevel:i,\nreadOnly:s,deferrable:o,queryCallback:u,resultCallback:c}={}){if(!r)throw new Error(\n\"No database connection string was provided to `neon()`. Perhaps an environment \\\nvariable has not been set?\");let h;try{h=lr(r)}catch{throw new Error(\"Database c\\\nonnection string provided to `neon()` is not a valid URL. Connection string: \"+String(\nr))}let{protocol:l,username:y,password:E,hostname:_,port:P,pathname:N}=h;if(l!==\n\"postgres:\"&&l!==\"postgresql:\"||!y||!E||!_||!N)throw new Error(\"Database connect\\\nion string format for `neon()` should be: postgresql://user:password@host.tld/db\\\nname?option=value\");function J(A,...g){let D,H;if(typeof A==\"string\")D=A,H=g[1],\ng=g[0]??[];else{D=\"\";for(let W=0;W<A.length;W++)D+=A[W],W<g.length&&(D+=\"$\"+(W+1))}\ng=g.map(W=>(0,zs.prepareValue)(W));let Q={query:D,params:g};return u&&u(Q),Nc(pe,\nQ,H)}a(J,\"resolve\"),J.transaction=async(A,g)=>{if(typeof A==\"function\"&&(A=A(J)),\n!Array.isArray(A))throw new Error(Ks);let D=A.map(H=>{if(H[Symbol.toStringTag]!==\n\"NeonQueryPromise\")throw new Error(Ks);return H.parameterizedQuery});return pe(D,\ng)};async function pe(A,g){let D=n??{},{fetchEndpoint:H,fetchConnectionCache:Q,fetchFunction:W}=_e,\nue=typeof H==\"function\"?H(_,P):H,de=Array.isArray(A)?{queries:A}:A,L=e??!1,G=t??\n!1,ce=i,ye=s,xe=o;g!==void 0&&(g.arrayMode!==void 0&&(L=g.arrayMode),g.fullResults!==\nvoid 0&&(G=g.fullResults),g.fetchOptions!==void 0&&(D={...D,...g.fetchOptions}),\ng.isolationLevel!==void 0&&(ce=g.isolationLevel),g.readOnly!==void 0&&(ye=g.readOnly),\ng.deferrable!==void 0&&(xe=g.deferrable));let he={\"Neon-Connection-String\":r,\"Ne\\\non-Raw-Text-Output\":\"true\",\"Neon-Array-Mode\":\"true\"};Q===!0&&(he[\"Neon-Pool-Opt-\\\nIn\"]=\"true\"),Array.isArray(A)&&(ce!==void 0&&(he[\"Neon-Batch-Isolation-Level\"]=ce),\nye!==void 0&&(he[\"Neon-Batch-Read-Only\"]=String(ye)),xe!==void 0&&(he[\"Neon-Batc\\\nh-Deferrable\"]=String(xe)));let ie;try{ie=await(W??fetch)(ue,{method:\"POST\",body:JSON.\nstringify(de),headers:he,...D})}catch(se){let $=new Ae(`Error connecting to data\\\nbase: ${se.message}`);throw $.sourceError=se,$}if(ie.ok){let se=await ie.json();\nif(Array.isArray(A)){let $=se.results;if(!Array.isArray($))throw new Ae(\"Neon in\\\nternal error: unexpected result format\");return $.map((ne,Ce)=>Vs(ne,{arrayMode:L,\nfullResults:G,parameterizedQuery:A[Ce],resultCallback:c}))}else return Vs(se,{arrayMode:L,\nfullResults:G,parameterizedQuery:A,resultCallback:c})}else{let{status:se}=ie;if(se===\n400){let{message:$,code:ne}=await ie.json(),Ce=new Ae($);throw Ce.code=ne,Ce}else{\nlet $=await ie.text();throw new Ae(`Server error (HTTP status ${se}): ${$}`)}}}return a(\npe,\"execute\"),J}a(Ys,\"neon\");function Nc(r,e,t){return{[Symbol.toStringTag]:\"Neo\\\nnQueryPromise\",parameterizedQuery:e,opts:t,then:(n,i)=>r(e,t).then(n,i),catch:n=>r(\ne,t).catch(n),finally:n=>r(e,t).finally(n)}}a(Nc,\"createNeonQueryPromise\");function Vs(r,{\narrayMode:e,fullResults:t,parameterizedQuery:n,resultCallback:i}){let s=r.fields.\nmap(c=>c.name),o=r.fields.map(c=>Se.types.getTypeParser(c.dataTypeID)),u=e===!0?\nr.rows.map(c=>c.map((h,l)=>h===null?null:o[l](h))):r.rows.map(c=>Object.fromEntries(\nc.map((h,l)=>[s[l],h===null?null:o[l](h)])));return i&&i(n,r,u,{arrayMode:e,fullResults:t}),\nt?(r.viaNeonFetch=!0,r.rowAsArray=e,r.rows=u,r):u}a(Vs,\"processQueryResult\");var Js=We(gt()),Se=We(At());var En=class En extends Ct.Client{constructor(t){super(t);this.config=t}get neonConfig(){\nreturn this.connection.stream}connect(t){let{neonConfig:n}=this;n.forceDisablePgSSL&&\n(this.ssl=this.connection.ssl=!1),this.ssl&&n.useSecureWebSocket&&console.warn(\"\\\nSSL is enabled for both Postgres (e.g. ?sslmode=require in the connection string\\\n + forceDisablePgSSL = false) and the WebSocket tunnel (useSecureWebSocket = tru\\\ne). Double encryption will increase latency and CPU usage. It may be appropriate\\\n to disable SSL in the Postgres connection parameters or set forceDisablePgSSL =\\\n true.\");let i=this.config?.host!==void 0||this.config?.connectionString!==void 0||\nm.env.PGHOST!==void 0,s=m.env.USER??m.env.USERNAME;if(!i&&this.host===\"localhost\"&&\nthis.user===s&&this.database===s&&this.password===null)throw new Error(`No datab\\\nase host or connection string was set, and key parameters have default values (h\\\nost: localhost, user: ${s}, db: ${s}, password: null). Is an environment variabl\\\ne missing? Alternatively, if you intended to connect with these parameters, plea\\\nse set the host to 'localhost' explicitly.`);let o=super.connect(t),u=n.pipelineTLS&&\nthis.ssl,c=n.pipelineConnect===\"password\";if(!u&&!n.pipelineConnect)return o;let h=this.\nconnection;if(u&&h.on(\"connect\",()=>h.stream.emit(\"data\",\"S\")),c){h.removeAllListeners(\n\"authenticationCleartextPassword\"),h.removeAllListeners(\"readyForQuery\"),h.once(\n\"readyForQuery\",()=>h.on(\"readyForQuery\",this._handleReadyForQuery.bind(this)));\nlet l=this.ssl?\"sslconnect\":\"connect\";h.on(l,()=>{this._handleAuthCleartextPassword(),\nthis._handleReadyForQuery()})}return o}async _handleAuthSASLContinue(t){let n=this.\nsaslSession,i=this.password,s=t.data;if(n.message!==\"SASLInitialResponse\"||typeof i!=\n\"string\"||typeof s!=\"string\")throw new Error(\"SASL: protocol error\");let o=Object.\nfromEntries(s.split(\",\").map($=>{if(!/^.=/.test($))throw new Error(\"SASL: Invali\\\nd attribute pair entry\");let ne=$[0],Ce=$.substring(2);return[ne,Ce]})),u=o.r,c=o.\ns,h=o.i;if(!u||!/^[!-+--~]+$/.test(u))throw new Error(\"SASL: SCRAM-SERVER-FIRST-\\\nMESSAGE: nonce missing/unprintable\");if(!c||!/^(?:[a-zA-Z0-9+/]{4})*(?:[a-zA-Z0-9+/]{2}==|[a-zA-Z0-9+/]{3}=)?$/.\ntest(c))throw new Error(\"SASL: SCRAM-SERVER-FIRST-MESSAGE: salt missing/not base\\\n64\");if(!h||!/^[1-9][0-9]*$/.test(h))throw new Error(\"SASL: SCRAM-SERVER-FIRST-M\\\nESSAGE: missing/invalid iteration count\");if(!u.startsWith(n.clientNonce))throw new Error(\n\"SASL: SCRAM-SERVER-FIRST-MESSAGE: server nonce does not start with client nonce\");\nif(u.length===n.clientNonce.length)throw new Error(\"SASL: SCRAM-SERVER-FIRST-MES\\\nSAGE: server nonce is too short\");let l=parseInt(h,10),y=d.from(c,\"base64\"),E=new TextEncoder,\n_=E.encode(i),P=await w.subtle.importKey(\"raw\",_,{name:\"HMAC\",hash:{name:\"SHA-25\\\n6\"}},!1,[\"sign\"]),N=new Uint8Array(await w.subtle.sign(\"HMAC\",P,d.concat([y,d.from(\n[0,0,0,1])]))),J=N;for(var pe=0;pe<l-1;pe++)N=new Uint8Array(await w.subtle.sign(\n\"HMAC\",P,N)),J=d.from(J.map(($,ne)=>J[ne]^N[ne]));let A=J,g=await w.subtle.importKey(\n\"raw\",A,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),D=new Uint8Array(await w.\nsubtle.sign(\"HMAC\",g,E.encode(\"Client Key\"))),H=await w.subtle.digest(\"SHA-256\",\nD),Q=\"n=*,r=\"+n.clientNonce,W=\"r=\"+u+\",s=\"+c+\",i=\"+l,ue=\"c=biws,r=\"+u,de=Q+\",\"+W+\n\",\"+ue,L=await w.subtle.importKey(\"raw\",H,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,\n[\"sign\"]);var G=new Uint8Array(await w.subtle.sign(\"HMAC\",L,E.encode(de))),ce=d.\nfrom(D.map(($,ne)=>D[ne]^G[ne])),ye=ce.toString(\"base64\");let xe=await w.subtle.\nimportKey(\"raw\",A,{name:\"HMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]),he=await w.subtle.\nsign(\"HMAC\",xe,E.encode(\"Server Key\")),ie=await w.subtle.importKey(\"raw\",he,{name:\"\\\nHMAC\",hash:{name:\"SHA-256\"}},!1,[\"sign\"]);var se=d.from(await w.subtle.sign(\"HMA\\\nC\",ie,E.encode(de)));n.message=\"SASLResponse\",n.serverSignature=se.toString(\"bas\\\ne64\"),n.response=ue+\",p=\"+ye,this.connection.sendSCRAMClientFinalMessage(this.saslSession.\nresponse)}};a(En,\"NeonClient\");var xn=En;function Qc(r,e){if(e)return{callback:e,\nresult:void 0};let t,n,i=a(function(o,u){o?t(o):n(u)},\"cb\"),s=new r(function(o,u){\nn=o,t=u});return{callback:i,result:s}}a(Qc,\"promisify\");var vn=class vn extends Ct.Pool{constructor(){\nsuper(...arguments);T(this,\"Client\",xn);T(this,\"hasFetchUnsupportedListeners\",!1)}on(t,n){\nreturn t!==\"error\"&&(this.hasFetchUnsupportedListeners=!0),super.on(t,n)}query(t,n,i){\nif(!_e.poolQueryViaFetch||this.hasFetchUnsupportedListeners||typeof t==\"function\")\nreturn super.query(t,n,i);typeof n==\"function\"&&(i=n,n=void 0);let s=Qc(this.Promise,\ni);i=s.callback;try{let o=new Js.default(this.options),u=encodeURIComponent,c=encodeURI,\nh=`postgresql://${u(o.user)}:${u(o.password)}@${u(o.host)}/${c(o.database)}`,l=typeof t==\n\"string\"?t:t.text,y=n??t.values??[];Ys(h,{fullResults:!0,arrayMode:t.rowMode===\"\\\narray\"})(l,y).then(_=>i(void 0,_)).catch(_=>i(_))}catch(o){i(o)}return s.result}};\na(vn,\"NeonPool\");var Zs=vn;var export_ClientBase=Se.ClientBase;var export_Connection=Se.Connection;var export_DatabaseError=Se.DatabaseError;\nvar export_Query=Se.Query;var export_defaults=Se.defaults;var export_types=Se.types;\n\n/*! Bundled license information:\n\nieee754/index.js:\n  (*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> *)\n\nbuffer/index.js:\n  (*!\n   * The buffer module from node.js, for the browser.\n   *\n   * @author   Feross Aboukhadijeh <https://feross.org>\n   * @license  MIT\n   *)\n*/\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvQG5lb25kYXRhYmFzZS9zZXJ2ZXJsZXNzL2luZGV4Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBLHFCQUFxQiw2QkFBNkIsdUNBQXVDLGtDQUFrQyxnRUFBZ0UsK0JBQStCLGtEQUFrRDtBQUM1USxPQUFPLDBCQUEwQix3QkFBd0IsRUFBRSxtQ0FBbUMsMkJBQTJCLFdBQVcsa0NBQWtDO0FBQ3RLLFFBQVEsdUJBQXVCLEVBQUUsZ0JBQWdCO0FBQ2pELDREQUE0RDtBQUM1RCx1QkFBdUIsRUFBRSxVQUFVLHVDQUF1QztBQUMxRSxzQkFBc0IscUJBQXFCLGVBQWUsU0FBUyxLQUFLLHFEQUFxRCxjQUFjLGFBQWEsSUFBSSxpQkFBaUIsa0JBQWtCO0FBQy9MLEdBQUc7QUFDSCxtREFBbUQsc0JBQXNCLE1BQU07QUFDL0UsdUNBQXVDLFVBQVUsVUFBVSxVQUFVO0FBQ3JFLGVBQWU7QUFDZixVQUFVLHFCQUFxQixjQUFjLG9CQUFvQixZQUFZO0FBQzdFLFdBQVcsZUFBZSwwQkFBMEIsa0JBQWtCO0FBQ3RFLFNBQVMsbUJBQW1CLGtCQUFrQixvQkFBb0I7QUFDbEUsa0VBQWtFLFFBQVEsSUFBSTtBQUM5RTtBQUNBLCtEQUErRDtBQUMvRDtBQUNBO0FBQ0EsU0FBUyxvQkFBb0IsZUFBZTtBQUM1QyxlQUFlLHdCQUF3QixtQkFBbUIsbUJBQW1CLElBQUk7QUFDakYscUVBQXFFO0FBQ3JFLElBQUksb0JBQW9CLGVBQWU7QUFDdkMsTUFBTSxJQUFJLGlDQUFpQztBQUMzQztBQUNBLHVCQUF1QixzQkFBc0IsRUFBRSxjQUFjLElBQUksNEJBQTRCO0FBQzdGLG1DQUFtQyxtQ0FBbUMsSUFBSTtBQUMxRSxrQkFBa0IsOEJBQThCLElBQUksMEJBQTBCO0FBQzlFLFFBQVEsS0FBSyxxQ0FBcUMsd0JBQXdCO0FBQzFFLHlCQUF5QiwrQkFBK0I7QUFDeEQ7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLHFEQUFxRCxLQUFLO0FB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c2Uvc2VydmVybGVzcy9pbmRleC5tanM/ZDc5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgWHM9T2JqZWN0LmNyZWF0ZTt2YXIgSWU9T2JqZWN0LmRlZmluZVByb3BlcnR5O3ZhciBlbz1PYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yO3ZhciB0bz1PYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lczt2YXIgcm89T2JqZWN0LmdldFByb3RvdHlwZU9mLG5vPU9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHk7dmFyIGlvPShyLGUsdCk9PmUgaW4gcj9JZShyLGUse2VudW1lcmFibGU6ITAsY29uZmlndXJhYmxlOiEwLHdyaXRhYmxlOiEwLHZhbHVlOnR9KTpcbnJbZV09dDt2YXIgYT0ocixlKT0+SWUocixcIm5hbWVcIix7dmFsdWU6ZSxjb25maWd1cmFibGU6ITB9KTt2YXIgSz0ocixlKT0+KCk9PihyJiYoZT1yKHI9MCkpLGUpO3ZhciBJPShyLGUpPT4oKT0+KGV8fHIoKGU9e2V4cG9ydHM6e319KS5leHBvcnRzLGUpLGUuZXhwb3J0cyksWD0ocixlKT0+e2Zvcih2YXIgdCBpbiBlKVxuSWUocix0LHtnZXQ6ZVt0XSxlbnVtZXJhYmxlOiEwfSl9LF9uPShyLGUsdCxuKT0+e2lmKGUmJnR5cGVvZiBlPT1cIm9iamVjdFwifHx0eXBlb2YgZT09XG5cImZ1bmN0aW9uXCIpZm9yKGxldCBpIG9mIHRvKGUpKSFuby5jYWxsKHIsaSkmJmkhPT10JiZJZShyLGkse2dldDooKT0+ZVtpXSxlbnVtZXJhYmxlOiEobj1cbmVvKGUsaSkpfHxuLmVudW1lcmFibGV9KTtyZXR1cm4gcn07dmFyIFdlPShyLGUsdCk9Pih0PXIhPW51bGw/WHMocm8ocikpOnt9LF9uKGV8fCFyfHwhci5fX2VzTW9kdWxlP0llKHQsXCJkZWZhdWx0XCIse1xudmFsdWU6cixlbnVtZXJhYmxlOiEwfSk6dCxyKSksaz1yPT5fbihJZSh7fSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KSxyKTt2YXIgVD0ocixlLHQpPT4oaW8ocix0eXBlb2YgZSE9XCJzeW1ib2xcIj9lK1wiXCI6ZSx0KSx0KTt2YXIgSW49SShpdD0+e1widXNlIHN0cmljdFwiO3AoKTtpdC5ieXRlTGVuZ3RoPW9vO2l0LnRvQnl0ZUFycmF5PXVvO2l0LmZyb21CeXRlQXJyYXk9XG5sbzt2YXIgb2U9W10sZWU9W10sc289dHlwZW9mIFVpbnQ4QXJyYXk8XCJ1XCI/VWludDhBcnJheTpBcnJheSxJdD1cIkFCQ0RFRkdISUpLTE1OT1xcXG5QUVJTVFVWV1hZWmFiY2RlZmdoaWprbG1ub3BxcnN0dXZ3eHl6MDEyMzQ1Njc4OSsvXCI7Zm9yKEVlPTAsQW49SXQubGVuZ3RoO0VlPEFuOysrRWUpXG5vZVtFZV09SXRbRWVdLGVlW0l0LmNoYXJDb2RlQXQoRWUpXT1FZTt2YXIgRWUsQW47ZWVbNDVdPTYyO2VlWzk1XT02MztmdW5jdGlvbiBDbihyKXtcbnZhciBlPXIubGVuZ3RoO2lmKGUlND4wKXRocm93IG5ldyBFcnJvcihcIkludmFsaWQgc3RyaW5nLiBMZW5ndGggbXVzdCBiZSBhIG11bHRpcFxcXG5sZSBvZiA0XCIpO3ZhciB0PXIuaW5kZXhPZihcIj1cIik7dD09PS0xJiYodD1lKTt2YXIgbj10PT09ZT8wOjQtdCU0O3JldHVyblt0LG5dfWEoQ24sXG5cImdldExlbnNcIik7ZnVuY3Rpb24gb28ocil7dmFyIGU9Q24ociksdD1lWzBdLG49ZVsxXTtyZXR1cm4odCtuKSozLzQtbn1hKG9vLFwiYnl0ZVxcXG5MZW5ndGhcIik7ZnVuY3Rpb24gYW8ocixlLHQpe3JldHVybihlK3QpKjMvNC10fWEoYW8sXCJfYnl0ZUxlbmd0aFwiKTtmdW5jdGlvbiB1byhyKXtcbnZhciBlLHQ9Q24ociksbj10WzBdLGk9dFsxXSxzPW5ldyBzbyhhbyhyLG4saSkpLG89MCx1PWk+MD9uLTQ6bixjO2ZvcihjPTA7Yzx1O2MrPVxuNCllPWVlW3IuY2hhckNvZGVBdChjKV08PDE4fGVlW3IuY2hhckNvZGVBdChjKzEpXTw8MTJ8ZWVbci5jaGFyQ29kZUF0KGMrMildPDw2fGVlW3IuXG5jaGFyQ29kZUF0KGMrMyldLHNbbysrXT1lPj4xNiYyNTUsc1tvKytdPWU+PjgmMjU1LHNbbysrXT1lJjI1NTtyZXR1cm4gaT09PTImJihlPVxuZWVbci5jaGFyQ29kZUF0KGMpXTw8MnxlZVtyLmNoYXJDb2RlQXQoYysxKV0+PjQsc1tvKytdPWUmMjU1KSxpPT09MSYmKGU9ZWVbci5jaGFyQ29kZUF0KFxuYyldPDwxMHxlZVtyLmNoYXJDb2RlQXQoYysxKV08PDR8ZWVbci5jaGFyQ29kZUF0KGMrMildPj4yLHNbbysrXT1lPj44JjI1NSxzW28rK109XG5lJjI1NSksc31hKHVvLFwidG9CeXRlQXJyYXlcIik7ZnVuY3Rpb24gY28ocil7cmV0dXJuIG9lW3I+PjE4JjYzXStvZVtyPj4xMiY2M10rb2Vbcj4+XG42JjYzXStvZVtyJjYzXX1hKGNvLFwidHJpcGxldFRvQmFzZTY0XCIpO2Z1bmN0aW9uIGhvKHIsZSx0KXtmb3IodmFyIG4saT1bXSxzPWU7czx0O3MrPVxuMyluPShyW3NdPDwxNiYxNjcxMTY4MCkrKHJbcysxXTw8OCY2NTI4MCkrKHJbcysyXSYyNTUpLGkucHVzaChjbyhuKSk7cmV0dXJuIGkuam9pbihcblwiXCIpfWEoaG8sXCJlbmNvZGVDaHVua1wiKTtmdW5jdGlvbiBsbyhyKXtmb3IodmFyIGUsdD1yLmxlbmd0aCxuPXQlMyxpPVtdLHM9MTYzODMsbz0wLFxudT10LW47bzx1O28rPXMpaS5wdXNoKGhvKHIsbyxvK3M+dT91Om8rcykpO3JldHVybiBuPT09MT8oZT1yW3QtMV0saS5wdXNoKG9lW2U+PjJdK1xub2VbZTw8NCY2M10rXCI9PVwiKSk6bj09PTImJihlPShyW3QtMl08PDgpK3JbdC0xXSxpLnB1c2gob2VbZT4+MTBdK29lW2U+PjQmNjNdK29lW2U8PFxuMiY2M10rXCI9XCIpKSxpLmpvaW4oXCJcIil9YShsbyxcImZyb21CeXRlQXJyYXlcIil9KTt2YXIgVG49SShUdD0+e3AoKTtUdC5yZWFkPWZ1bmN0aW9uKHIsZSx0LG4saSl7dmFyIHMsbyx1PWkqOC1uLTEsYz0oMTw8dSktMSxoPWM+PlxuMSxsPS03LHk9dD9pLTE6MCxFPXQ/LTE6MSxfPXJbZSt5XTtmb3IoeSs9RSxzPV8mKDE8PC1sKS0xLF8+Pj0tbCxsKz11O2w+MDtzPXMqMjU2K1xucltlK3ldLHkrPUUsbC09OCk7Zm9yKG89cyYoMTw8LWwpLTEscz4+PS1sLGwrPW47bD4wO289byoyNTYrcltlK3ldLHkrPUUsbC09OCk7aWYocz09PVxuMClzPTEtaDtlbHNle2lmKHM9PT1jKXJldHVybiBvP05hTjooXz8tMToxKSooMS8wKTtvPW8rTWF0aC5wb3coMixuKSxzPXMtaH1yZXR1cm4oXz9cbi0xOjEpKm8qTWF0aC5wb3coMixzLW4pfTtUdC53cml0ZT1mdW5jdGlvbihyLGUsdCxuLGkscyl7dmFyIG8sdSxjLGg9cyo4LWktMSxsPSgxPDxcbmgpLTEseT1sPj4xLEU9aT09PTIzP01hdGgucG93KDIsLTI0KS1NYXRoLnBvdygyLC03Nyk6MCxfPW4/MDpzLTEsUD1uPzE6LTEsTj1lPDB8fFxuZT09PTAmJjEvZTwwPzE6MDtmb3IoZT1NYXRoLmFicyhlKSxpc05hTihlKXx8ZT09PTEvMD8odT1pc05hTihlKT8xOjAsbz1sKToobz1NYXRoLlxuZmxvb3IoTWF0aC5sb2coZSkvTWF0aC5MTjIpLGUqKGM9TWF0aC5wb3coMiwtbykpPDEmJihvLS0sYyo9Miksbyt5Pj0xP2UrPUUvYzplKz1cbkUqTWF0aC5wb3coMiwxLXkpLGUqYz49MiYmKG8rKyxjLz0yKSxvK3k+PWw/KHU9MCxvPWwpOm8reT49MT8odT0oZSpjLTEpKk1hdGgucG93KFxuMixpKSxvPW8reSk6KHU9ZSpNYXRoLnBvdygyLHktMSkqTWF0aC5wb3coMixpKSxvPTApKTtpPj04O3JbdCtfXT11JjI1NSxfKz1QLHUvPTI1NixcbmktPTgpO2ZvcihvPW88PGl8dSxoKz1pO2g+MDtyW3QrX109byYyNTUsXys9UCxvLz0yNTYsaC09OCk7clt0K18tUF18PU4qMTI4fX0pO3ZhciBHbj1JKExlPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3ZhciBQdD1JbigpLFBlPVRuKCksUG49dHlwZW9mIFN5bWJvbD09XCJmdW5jdGlvblwiJiZcbnR5cGVvZiBTeW1ib2wuZm9yPT1cImZ1bmN0aW9uXCI/U3ltYm9sLmZvcihcIm5vZGVqcy51dGlsLmluc3BlY3QuY3VzdG9tXCIpOm51bGw7TGUuQnVmZmVyPVxuZjtMZS5TbG93QnVmZmVyPXdvO0xlLklOU1BFQ1RfTUFYX0JZVEVTPTUwO3ZhciBzdD0yMTQ3NDgzNjQ3O0xlLmtNYXhMZW5ndGg9c3Q7Zi5cblRZUEVEX0FSUkFZX1NVUFBPUlQ9Zm8oKTshZi5UWVBFRF9BUlJBWV9TVVBQT1JUJiZ0eXBlb2YgY29uc29sZTxcInVcIiYmdHlwZW9mIGNvbnNvbGUuXG5lcnJvcj09XCJmdW5jdGlvblwiJiZjb25zb2xlLmVycm9yKFwiVGhpcyBicm93c2VyIGxhY2tzIHR5cGVkIGFycmF5IChVaW50OEFycmF5KSBzdVxcXG5wcG9ydCB3aGljaCBpcyByZXF1aXJlZCBieSBgYnVmZmVyYCB2NS54LiBVc2UgYGJ1ZmZlcmAgdjQueCBpZiB5b3UgcmVxdWlyZSBvbGQgYlxcXG5yb3dzZXIgc3VwcG9ydC5cIik7ZnVuY3Rpb24gZm8oKXt0cnl7bGV0IHI9bmV3IFVpbnQ4QXJyYXkoMSksZT17Zm9vOmZ1bmN0aW9uKCl7cmV0dXJuIDQyfX07XG5yZXR1cm4gT2JqZWN0LnNldFByb3RvdHlwZU9mKGUsVWludDhBcnJheS5wcm90b3R5cGUpLE9iamVjdC5zZXRQcm90b3R5cGVPZihyLGUpLFxuci5mb28oKT09PTQyfWNhdGNoe3JldHVybiExfX1hKGZvLFwidHlwZWRBcnJheVN1cHBvcnRcIik7T2JqZWN0LmRlZmluZVByb3BlcnR5KGYucHJvdG90eXBlLFxuXCJwYXJlbnRcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtpZihmLmlzQnVmZmVyKHRoaXMpKXJldHVybiB0aGlzLmJ1ZmZlcn19KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShmLnByb3RvdHlwZSxcIm9mZnNldFwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe2lmKGYuaXNCdWZmZXIoXG50aGlzKSlyZXR1cm4gdGhpcy5ieXRlT2Zmc2V0fX0pO2Z1bmN0aW9uIGxlKHIpe2lmKHI+c3QpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1RoZVxcXG4gdmFsdWUgXCInK3IrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpO2xldCBlPW5ldyBVaW50OEFycmF5KHIpO3JldHVybiBPYmplY3QuXG5zZXRQcm90b3R5cGVPZihlLGYucHJvdG90eXBlKSxlfWEobGUsXCJjcmVhdGVCdWZmZXJcIik7ZnVuY3Rpb24gZihyLGUsdCl7aWYodHlwZW9mIHI9PVxuXCJudW1iZXJcIil7aWYodHlwZW9mIGU9PVwic3RyaW5nXCIpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwic3RyaW5nXCIgYXJndW1lbnQgbXVzdCBcXFxuYmUgb2YgdHlwZSBzdHJpbmcuIFJlY2VpdmVkIHR5cGUgbnVtYmVyJyk7cmV0dXJuIEZ0KHIpfXJldHVybiBGbihyLGUsdCl9YShmLFwiQnVmXFxcbmZlclwiKTtmLnBvb2xTaXplPTgxOTI7ZnVuY3Rpb24gRm4ocixlLHQpe2lmKHR5cGVvZiByPT1cInN0cmluZ1wiKXJldHVybiB5byhyLGUpO2lmKEFycmF5QnVmZmVyLlxuaXNWaWV3KHIpKXJldHVybiBtbyhyKTtpZihyPT1udWxsKXRocm93IG5ldyBUeXBlRXJyb3IoXCJUaGUgZmlyc3QgYXJndW1lbnQgbXVzdCBiXFxcbmUgb25lIG9mIHR5cGUgc3RyaW5nLCBCdWZmZXIsIEFycmF5QnVmZmVyLCBBcnJheSwgb3IgQXJyYXktbGlrZSBPYmplY3QuIFJlY2VpdmVkXFxcbiB0eXBlIFwiK3R5cGVvZiByKTtpZihhZShyLEFycmF5QnVmZmVyKXx8ciYmYWUoci5idWZmZXIsQXJyYXlCdWZmZXIpfHx0eXBlb2YgU2hhcmVkQXJyYXlCdWZmZXI8XG5cInVcIiYmKGFlKHIsU2hhcmVkQXJyYXlCdWZmZXIpfHxyJiZhZShyLmJ1ZmZlcixTaGFyZWRBcnJheUJ1ZmZlcikpKXJldHVybiBMdChyLGUsXG50KTtpZih0eXBlb2Ygcj09XCJudW1iZXJcIil0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJ2YWx1ZVwiIGFyZ3VtZW50IG11c3Qgbm90IGJlIG9cXFxuZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSBudW1iZXInKTtsZXQgbj1yLnZhbHVlT2YmJnIudmFsdWVPZigpO2lmKG4hPW51bGwmJm4hPT1cbnIpcmV0dXJuIGYuZnJvbShuLGUsdCk7bGV0IGk9Z28ocik7aWYoaSlyZXR1cm4gaTtpZih0eXBlb2YgU3ltYm9sPFwidVwiJiZTeW1ib2wudG9QcmltaXRpdmUhPVxubnVsbCYmdHlwZW9mIHJbU3ltYm9sLnRvUHJpbWl0aXZlXT09XCJmdW5jdGlvblwiKXJldHVybiBmLmZyb20ocltTeW1ib2wudG9QcmltaXRpdmVdKFxuXCJzdHJpbmdcIiksZSx0KTt0aHJvdyBuZXcgVHlwZUVycm9yKFwiVGhlIGZpcnN0IGFyZ3VtZW50IG11c3QgYmUgb25lIG9mIHR5cGUgc3RyaW5cXFxuZywgQnVmZmVyLCBBcnJheUJ1ZmZlciwgQXJyYXksIG9yIEFycmF5LWxpa2UgT2JqZWN0LiBSZWNlaXZlZCB0eXBlIFwiK3R5cGVvZiByKX1hKFxuRm4sXCJmcm9tXCIpO2YuZnJvbT1mdW5jdGlvbihyLGUsdCl7cmV0dXJuIEZuKHIsZSx0KX07T2JqZWN0LnNldFByb3RvdHlwZU9mKGYucHJvdG90eXBlLFxuVWludDhBcnJheS5wcm90b3R5cGUpO09iamVjdC5zZXRQcm90b3R5cGVPZihmLFVpbnQ4QXJyYXkpO2Z1bmN0aW9uIE1uKHIpe2lmKHR5cGVvZiByIT1cblwibnVtYmVyXCIpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJzaXplXCIgYXJndW1lbnQgbXVzdCBiZSBvZiB0eXBlIG51bWJlcicpO2lmKHI8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcbidUaGUgdmFsdWUgXCInK3IrJ1wiIGlzIGludmFsaWQgZm9yIG9wdGlvbiBcInNpemVcIicpfWEoTW4sXCJhc3NlcnRTaXplXCIpO2Z1bmN0aW9uIHBvKHIsZSx0KXtcbnJldHVybiBNbihyKSxyPD0wP2xlKHIpOmUhPT12b2lkIDA/dHlwZW9mIHQ9PVwic3RyaW5nXCI/bGUocikuZmlsbChlLHQpOmxlKHIpLmZpbGwoXG5lKTpsZShyKX1hKHBvLFwiYWxsb2NcIik7Zi5hbGxvYz1mdW5jdGlvbihyLGUsdCl7cmV0dXJuIHBvKHIsZSx0KX07ZnVuY3Rpb24gRnQocil7XG5yZXR1cm4gTW4ociksbGUocjwwPzA6TXQocil8MCl9YShGdCxcImFsbG9jVW5zYWZlXCIpO2YuYWxsb2NVbnNhZmU9ZnVuY3Rpb24ocil7cmV0dXJuIEZ0KFxucil9O2YuYWxsb2NVbnNhZmVTbG93PWZ1bmN0aW9uKHIpe3JldHVybiBGdChyKX07ZnVuY3Rpb24geW8ocixlKXtpZigodHlwZW9mIGUhPVwiXFxcbnN0cmluZ1wifHxlPT09XCJcIikmJihlPVwidXRmOFwiKSwhZi5pc0VuY29kaW5nKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXCJVbmtub3duIGVuY29kXFxcbmluZzogXCIrZSk7bGV0IHQ9RG4ocixlKXwwLG49bGUodCksaT1uLndyaXRlKHIsZSk7cmV0dXJuIGkhPT10JiYobj1uLnNsaWNlKDAsaSkpLFxubn1hKHlvLFwiZnJvbVN0cmluZ1wiKTtmdW5jdGlvbiBCdChyKXtsZXQgZT1yLmxlbmd0aDwwPzA6TXQoci5sZW5ndGgpfDAsdD1sZShlKTtmb3IobGV0IG49MDtuPFxuZTtuKz0xKXRbbl09cltuXSYyNTU7cmV0dXJuIHR9YShCdCxcImZyb21BcnJheUxpa2VcIik7ZnVuY3Rpb24gbW8ocil7aWYoYWUocixVaW50OEFycmF5KSl7XG5sZXQgZT1uZXcgVWludDhBcnJheShyKTtyZXR1cm4gTHQoZS5idWZmZXIsZS5ieXRlT2Zmc2V0LGUuYnl0ZUxlbmd0aCl9cmV0dXJuIEJ0KFxucil9YShtbyxcImZyb21BcnJheVZpZXdcIik7ZnVuY3Rpb24gTHQocixlLHQpe2lmKGU8MHx8ci5ieXRlTGVuZ3RoPGUpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXG4nXCJvZmZzZXRcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKTtpZihyLmJ5dGVMZW5ndGg8ZSsodHx8MCkpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXG4nXCJsZW5ndGhcIiBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHMnKTtsZXQgbjtyZXR1cm4gZT09PXZvaWQgMCYmdD09PXZvaWQgMD9uPW5ldyBVaW50OEFycmF5KFxucik6dD09PXZvaWQgMD9uPW5ldyBVaW50OEFycmF5KHIsZSk6bj1uZXcgVWludDhBcnJheShyLGUsdCksT2JqZWN0LnNldFByb3RvdHlwZU9mKFxubixmLnByb3RvdHlwZSksbn1hKEx0LFwiZnJvbUFycmF5QnVmZmVyXCIpO2Z1bmN0aW9uIGdvKHIpe2lmKGYuaXNCdWZmZXIocikpe2xldCBlPU10KFxuci5sZW5ndGgpfDAsdD1sZShlKTtyZXR1cm4gdC5sZW5ndGg9PT0wfHxyLmNvcHkodCwwLDAsZSksdH1pZihyLmxlbmd0aCE9PXZvaWQgMClcbnJldHVybiB0eXBlb2Ygci5sZW5ndGghPVwibnVtYmVyXCJ8fE90KHIubGVuZ3RoKT9sZSgwKTpCdChyKTtpZihyLnR5cGU9PT1cIkJ1ZmZlclwiJiZcbkFycmF5LmlzQXJyYXkoci5kYXRhKSlyZXR1cm4gQnQoci5kYXRhKX1hKGdvLFwiZnJvbU9iamVjdFwiKTtmdW5jdGlvbiBNdChyKXtpZihyPj1cbnN0KXRocm93IG5ldyBSYW5nZUVycm9yKFwiQXR0ZW1wdCB0byBhbGxvY2F0ZSBCdWZmZXIgbGFyZ2VyIHRoYW4gbWF4aW11bSBzaXplOiAweFwiK1xuc3QudG9TdHJpbmcoMTYpK1wiIGJ5dGVzXCIpO3JldHVybiByfDB9YShNdCxcImNoZWNrZWRcIik7ZnVuY3Rpb24gd28ocil7cmV0dXJuK3IhPXImJlxuKHI9MCksZi5hbGxvYygrcil9YSh3byxcIlNsb3dCdWZmZXJcIik7Zi5pc0J1ZmZlcj1hKGZ1bmN0aW9uKGUpe3JldHVybiBlIT1udWxsJiZlLlxuX2lzQnVmZmVyPT09ITAmJmUhPT1mLnByb3RvdHlwZX0sXCJpc0J1ZmZlclwiKTtmLmNvbXBhcmU9YShmdW5jdGlvbihlLHQpe2lmKGFlKGUsVWludDhBcnJheSkmJlxuKGU9Zi5mcm9tKGUsZS5vZmZzZXQsZS5ieXRlTGVuZ3RoKSksYWUodCxVaW50OEFycmF5KSYmKHQ9Zi5mcm9tKHQsdC5vZmZzZXQsdC5ieXRlTGVuZ3RoKSksXG4hZi5pc0J1ZmZlcihlKXx8IWYuaXNCdWZmZXIodCkpdGhyb3cgbmV3IFR5cGVFcnJvcignVGhlIFwiYnVmMVwiLCBcImJ1ZjJcIiBhcmd1bWVudHNcXFxuIG11c3QgYmUgb25lIG9mIHR5cGUgQnVmZmVyIG9yIFVpbnQ4QXJyYXknKTtpZihlPT09dClyZXR1cm4gMDtsZXQgbj1lLmxlbmd0aCxpPXQuXG5sZW5ndGg7Zm9yKGxldCBzPTAsbz1NYXRoLm1pbihuLGkpO3M8bzsrK3MpaWYoZVtzXSE9PXRbc10pe249ZVtzXSxpPXRbc107YnJlYWt9cmV0dXJuIG48XG5pPy0xOmk8bj8xOjB9LFwiY29tcGFyZVwiKTtmLmlzRW5jb2Rpbmc9YShmdW5jdGlvbihlKXtzd2l0Y2goU3RyaW5nKGUpLnRvTG93ZXJDYXNlKCkpe2Nhc2VcIlxcXG5oZXhcIjpjYXNlXCJ1dGY4XCI6Y2FzZVwidXRmLThcIjpjYXNlXCJhc2NpaVwiOmNhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOmNhc2VcImJhc2U2NFwiOmNhc2VcIlxcXG51Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4hMDtkZWZhdWx0OnJldHVybiExfX0sXCJpc0VuXFxcbmNvZGluZ1wiKTtmLmNvbmNhdD1hKGZ1bmN0aW9uKGUsdCl7aWYoIUFycmF5LmlzQXJyYXkoZSkpdGhyb3cgbmV3IFR5cGVFcnJvcignXCJsaXNcXFxudFwiIGFyZ3VtZW50IG11c3QgYmUgYW4gQXJyYXkgb2YgQnVmZmVycycpO2lmKGUubGVuZ3RoPT09MClyZXR1cm4gZi5hbGxvYygwKTtsZXQgbjtcbmlmKHQ9PT12b2lkIDApZm9yKHQ9MCxuPTA7bjxlLmxlbmd0aDsrK24pdCs9ZVtuXS5sZW5ndGg7bGV0IGk9Zi5hbGxvY1Vuc2FmZSh0KSxzPTA7XG5mb3Iobj0wO248ZS5sZW5ndGg7KytuKXtsZXQgbz1lW25dO2lmKGFlKG8sVWludDhBcnJheSkpcytvLmxlbmd0aD5pLmxlbmd0aD8oZi5pc0J1ZmZlcihcbm8pfHwobz1mLmZyb20obykpLG8uY29weShpLHMpKTpVaW50OEFycmF5LnByb3RvdHlwZS5zZXQuY2FsbChpLG8scyk7ZWxzZSBpZihmLmlzQnVmZmVyKFxubykpby5jb3B5KGkscyk7ZWxzZSB0aHJvdyBuZXcgVHlwZUVycm9yKCdcImxpc3RcIiBhcmd1bWVudCBtdXN0IGJlIGFuIEFycmF5IG9mIEJ1ZlxcXG5mZXJzJyk7cys9by5sZW5ndGh9cmV0dXJuIGl9LFwiY29uY2F0XCIpO2Z1bmN0aW9uIERuKHIsZSl7aWYoZi5pc0J1ZmZlcihyKSlyZXR1cm4gci5cbmxlbmd0aDtpZihBcnJheUJ1ZmZlci5pc1ZpZXcocil8fGFlKHIsQXJyYXlCdWZmZXIpKXJldHVybiByLmJ5dGVMZW5ndGg7aWYodHlwZW9mIHIhPVxuXCJzdHJpbmdcIil0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJzdHJpbmdcIiBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIHN0cmluZywgXFxcbkJ1ZmZlciwgb3IgQXJyYXlCdWZmZXIuIFJlY2VpdmVkIHR5cGUgJyt0eXBlb2Ygcik7bGV0IHQ9ci5sZW5ndGgsbj1hcmd1bWVudHMubGVuZ3RoPlxuMiYmYXJndW1lbnRzWzJdPT09ITA7aWYoIW4mJnQ9PT0wKXJldHVybiAwO2xldCBpPSExO2Zvcig7Oylzd2l0Y2goZSl7Y2FzZVwiYXNjaWlcIjpjYXNlXCJcXFxubGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIHQ7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIFJ0KHIpLmxlbmd0aDtjYXNlXCJ1Y1xcXG5zMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIHQqMjtjYXNlXCJoZXhcIjpyZXR1cm4gdD4+PjE7Y2FzZVwiXFxcbmJhc2U2NFwiOnJldHVybiBIbihyKS5sZW5ndGg7ZGVmYXVsdDppZihpKXJldHVybiBuPy0xOlJ0KHIpLmxlbmd0aDtlPShcIlwiK2UpLnRvTG93ZXJDYXNlKCksXG5pPSEwfX1hKERuLFwiYnl0ZUxlbmd0aFwiKTtmLmJ5dGVMZW5ndGg9RG47ZnVuY3Rpb24gYm8ocixlLHQpe2xldCBuPSExO2lmKChlPT09dm9pZCAwfHxcbmU8MCkmJihlPTApLGU+dGhpcy5sZW5ndGh8fCgodD09PXZvaWQgMHx8dD50aGlzLmxlbmd0aCkmJih0PXRoaXMubGVuZ3RoKSx0PD0wKXx8XG4odD4+Pj0wLGU+Pj49MCx0PD1lKSlyZXR1cm5cIlwiO2ZvcihyfHwocj1cInV0ZjhcIik7Oylzd2l0Y2gocil7Y2FzZVwiaGV4XCI6cmV0dXJuIFBvKFxudGhpcyxlLHQpO2Nhc2VcInV0ZjhcIjpjYXNlXCJ1dGYtOFwiOnJldHVybiBrbih0aGlzLGUsdCk7Y2FzZVwiYXNjaWlcIjpyZXR1cm4gSW8odGhpcyxcbmUsdCk7Y2FzZVwibGF0aW4xXCI6Y2FzZVwiYmluYXJ5XCI6cmV0dXJuIFRvKHRoaXMsZSx0KTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gQW8odGhpcyxlLFxudCk7Y2FzZVwidWNzMlwiOmNhc2VcInVjcy0yXCI6Y2FzZVwidXRmMTZsZVwiOmNhc2VcInV0Zi0xNmxlXCI6cmV0dXJuIEJvKHRoaXMsZSx0KTtkZWZhdWx0OlxuaWYobil0aHJvdyBuZXcgVHlwZUVycm9yKFwiVW5rbm93biBlbmNvZGluZzogXCIrcik7cj0ocitcIlwiKS50b0xvd2VyQ2FzZSgpLG49ITB9fWEoXG5ibyxcInNsb3dUb1N0cmluZ1wiKTtmLnByb3RvdHlwZS5faXNCdWZmZXI9ITA7ZnVuY3Rpb24gdmUocixlLHQpe2xldCBuPXJbZV07cltlXT1yW3RdLFxuclt0XT1ufWEodmUsXCJzd2FwXCIpO2YucHJvdG90eXBlLnN3YXAxNj1hKGZ1bmN0aW9uKCl7bGV0IGU9dGhpcy5sZW5ndGg7aWYoZSUyIT09MClcbnRocm93IG5ldyBSYW5nZUVycm9yKFwiQnVmZmVyIHNpemUgbXVzdCBiZSBhIG11bHRpcGxlIG9mIDE2LWJpdHNcIik7Zm9yKGxldCB0PTA7dDxcbmU7dCs9Mil2ZSh0aGlzLHQsdCsxKTtyZXR1cm4gdGhpc30sXCJzd2FwMTZcIik7Zi5wcm90b3R5cGUuc3dhcDMyPWEoZnVuY3Rpb24oKXtsZXQgZT10aGlzLlxubGVuZ3RoO2lmKGUlNCE9PTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJCdWZmZXIgc2l6ZSBtdXN0IGJlIGEgbXVsdGlwbGUgb2YgMzItYml0XFxcbnNcIik7Zm9yKGxldCB0PTA7dDxlO3QrPTQpdmUodGhpcyx0LHQrMyksdmUodGhpcyx0KzEsdCsyKTtyZXR1cm4gdGhpc30sXCJzd2FwMzJcIik7XG5mLnByb3RvdHlwZS5zd2FwNjQ9YShmdW5jdGlvbigpe2xldCBlPXRoaXMubGVuZ3RoO2lmKGUlOCE9PTApdGhyb3cgbmV3IFJhbmdlRXJyb3IoXG5cIkJ1ZmZlciBzaXplIG11c3QgYmUgYSBtdWx0aXBsZSBvZiA2NC1iaXRzXCIpO2ZvcihsZXQgdD0wO3Q8ZTt0Kz04KXZlKHRoaXMsdCx0KzcpLFxudmUodGhpcyx0KzEsdCs2KSx2ZSh0aGlzLHQrMix0KzUpLHZlKHRoaXMsdCszLHQrNCk7cmV0dXJuIHRoaXN9LFwic3dhcDY0XCIpO2YucHJvdG90eXBlLlxudG9TdHJpbmc9YShmdW5jdGlvbigpe2xldCBlPXRoaXMubGVuZ3RoO3JldHVybiBlPT09MD9cIlwiOmFyZ3VtZW50cy5sZW5ndGg9PT0wP2tuKFxudGhpcywwLGUpOmJvLmFwcGx5KHRoaXMsYXJndW1lbnRzKX0sXCJ0b1N0cmluZ1wiKTtmLnByb3RvdHlwZS50b0xvY2FsZVN0cmluZz1mLnByb3RvdHlwZS5cbnRvU3RyaW5nO2YucHJvdG90eXBlLmVxdWFscz1hKGZ1bmN0aW9uKGUpe2lmKCFmLmlzQnVmZmVyKGUpKXRocm93IG5ldyBUeXBlRXJyb3IoXG5cIkFyZ3VtZW50IG11c3QgYmUgYSBCdWZmZXJcIik7cmV0dXJuIHRoaXM9PT1lPyEwOmYuY29tcGFyZSh0aGlzLGUpPT09MH0sXCJlcXVhbHNcIik7XG5mLnByb3RvdHlwZS5pbnNwZWN0PWEoZnVuY3Rpb24oKXtsZXQgZT1cIlwiLHQ9TGUuSU5TUEVDVF9NQVhfQllURVM7cmV0dXJuIGU9dGhpcy50b1N0cmluZyhcblwiaGV4XCIsMCx0KS5yZXBsYWNlKC8oLnsyfSkvZyxcIiQxIFwiKS50cmltKCksdGhpcy5sZW5ndGg+dCYmKGUrPVwiIC4uLiBcIiksXCI8QnVmZmVyIFwiK1xuZStcIj5cIn0sXCJpbnNwZWN0XCIpO1BuJiYoZi5wcm90b3R5cGVbUG5dPWYucHJvdG90eXBlLmluc3BlY3QpO2YucHJvdG90eXBlLmNvbXBhcmU9XG5hKGZ1bmN0aW9uKGUsdCxuLGkscyl7aWYoYWUoZSxVaW50OEFycmF5KSYmKGU9Zi5mcm9tKGUsZS5vZmZzZXQsZS5ieXRlTGVuZ3RoKSksIWYuXG5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJ0YXJnZXRcIiBhcmd1bWVudCBtdXN0IGJlIG9uZSBvZiB0eXBlIEJ1ZmZlXFxcbnIgb3IgVWludDhBcnJheS4gUmVjZWl2ZWQgdHlwZSAnK3R5cGVvZiBlKTtpZih0PT09dm9pZCAwJiYodD0wKSxuPT09dm9pZCAwJiYobj1lP1xuZS5sZW5ndGg6MCksaT09PXZvaWQgMCYmKGk9MCkscz09PXZvaWQgMCYmKHM9dGhpcy5sZW5ndGgpLHQ8MHx8bj5lLmxlbmd0aHx8aTwwfHxcbnM+dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJvdXQgb2YgcmFuZ2UgaW5kZXhcIik7aWYoaT49cyYmdD49bilyZXR1cm4gMDtcbmlmKGk+PXMpcmV0dXJuLTE7aWYodD49bilyZXR1cm4gMTtpZih0Pj4+PTAsbj4+Pj0wLGk+Pj49MCxzPj4+PTAsdGhpcz09PWUpcmV0dXJuIDA7XG5sZXQgbz1zLWksdT1uLXQsYz1NYXRoLm1pbihvLHUpLGg9dGhpcy5zbGljZShpLHMpLGw9ZS5zbGljZSh0LG4pO2ZvcihsZXQgeT0wO3k8YzsrK3kpXG5pZihoW3ldIT09bFt5XSl7bz1oW3ldLHU9bFt5XTticmVha31yZXR1cm4gbzx1Py0xOnU8bz8xOjB9LFwiY29tcGFyZVwiKTtmdW5jdGlvbiBPbihyLGUsdCxuLGkpe1xuaWYoci5sZW5ndGg9PT0wKXJldHVybi0xO2lmKHR5cGVvZiB0PT1cInN0cmluZ1wiPyhuPXQsdD0wKTp0PjIxNDc0ODM2NDc/dD0yMTQ3NDgzNjQ3OlxudDwtMjE0NzQ4MzY0OCYmKHQ9LTIxNDc0ODM2NDgpLHQ9K3QsT3QodCkmJih0PWk/MDpyLmxlbmd0aC0xKSx0PDAmJih0PXIubGVuZ3RoK3QpLFxudD49ci5sZW5ndGgpe2lmKGkpcmV0dXJuLTE7dD1yLmxlbmd0aC0xfWVsc2UgaWYodDwwKWlmKGkpdD0wO2Vsc2UgcmV0dXJuLTE7aWYodHlwZW9mIGU9PVxuXCJzdHJpbmdcIiYmKGU9Zi5mcm9tKGUsbikpLGYuaXNCdWZmZXIoZSkpcmV0dXJuIGUubGVuZ3RoPT09MD8tMTpCbihyLGUsdCxuLGkpO2lmKHR5cGVvZiBlPT1cblwibnVtYmVyXCIpcmV0dXJuIGU9ZSYyNTUsdHlwZW9mIFVpbnQ4QXJyYXkucHJvdG90eXBlLmluZGV4T2Y9PVwiZnVuY3Rpb25cIj9pP1VpbnQ4QXJyYXkuXG5wcm90b3R5cGUuaW5kZXhPZi5jYWxsKHIsZSx0KTpVaW50OEFycmF5LnByb3RvdHlwZS5sYXN0SW5kZXhPZi5jYWxsKHIsZSx0KTpCbihyLFxuW2VdLHQsbixpKTt0aHJvdyBuZXcgVHlwZUVycm9yKFwidmFsIG11c3QgYmUgc3RyaW5nLCBudW1iZXIgb3IgQnVmZmVyXCIpfWEoT24sXCJiaWRcXFxuaXJlY3Rpb25hbEluZGV4T2ZcIik7ZnVuY3Rpb24gQm4ocixlLHQsbixpKXtsZXQgcz0xLG89ci5sZW5ndGgsdT1lLmxlbmd0aDtpZihuIT09XG52b2lkIDAmJihuPVN0cmluZyhuKS50b0xvd2VyQ2FzZSgpLG49PT1cInVjczJcInx8bj09PVwidWNzLTJcInx8bj09PVwidXRmMTZsZVwifHxuPT09XCJcXFxudXRmLTE2bGVcIikpe2lmKHIubGVuZ3RoPDJ8fGUubGVuZ3RoPDIpcmV0dXJuLTE7cz0yLG8vPTIsdS89Mix0Lz0yfWZ1bmN0aW9uIGMobCx5KXtcbnJldHVybiBzPT09MT9sW3ldOmwucmVhZFVJbnQxNkJFKHkqcyl9YShjLFwicmVhZFwiKTtsZXQgaDtpZihpKXtsZXQgbD0tMTtmb3IoaD10O2g8XG5vO2grKylpZihjKHIsaCk9PT1jKGUsbD09PS0xPzA6aC1sKSl7aWYobD09PS0xJiYobD1oKSxoLWwrMT09PXUpcmV0dXJuIGwqc31lbHNlIGwhPT1cbi0xJiYoaC09aC1sKSxsPS0xfWVsc2UgZm9yKHQrdT5vJiYodD1vLXUpLGg9dDtoPj0wO2gtLSl7bGV0IGw9ITA7Zm9yKGxldCB5PTA7eTx1O3krKylcbmlmKGMocixoK3kpIT09YyhlLHkpKXtsPSExO2JyZWFrfWlmKGwpcmV0dXJuIGh9cmV0dXJuLTF9YShCbixcImFycmF5SW5kZXhPZlwiKTtmLnByb3RvdHlwZS5cbmluY2x1ZGVzPWEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiB0aGlzLmluZGV4T2YoZSx0LG4pIT09LTF9LFwiaW5jbHVkZXNcIik7Zi5wcm90b3R5cGUuXG5pbmRleE9mPWEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiBPbih0aGlzLGUsdCxuLCEwKX0sXCJpbmRleE9mXCIpO2YucHJvdG90eXBlLmxhc3RJbmRleE9mPVxuYShmdW5jdGlvbihlLHQsbil7cmV0dXJuIE9uKHRoaXMsZSx0LG4sITEpfSxcImxhc3RJbmRleE9mXCIpO2Z1bmN0aW9uIFNvKHIsZSx0LG4pe1xudD1OdW1iZXIodCl8fDA7bGV0IGk9ci5sZW5ndGgtdDtuPyhuPU51bWJlcihuKSxuPmkmJihuPWkpKTpuPWk7bGV0IHM9ZS5sZW5ndGg7bj5cbnMvMiYmKG49cy8yKTtsZXQgbztmb3Iobz0wO288bjsrK28pe2xldCB1PXBhcnNlSW50KGUuc3Vic3RyKG8qMiwyKSwxNik7aWYoT3QodSkpXG5yZXR1cm4gbztyW3Qrb109dX1yZXR1cm4gb31hKFNvLFwiaGV4V3JpdGVcIik7ZnVuY3Rpb24geG8ocixlLHQsbil7cmV0dXJuIG90KFJ0KGUsXG5yLmxlbmd0aC10KSxyLHQsbil9YSh4byxcInV0ZjhXcml0ZVwiKTtmdW5jdGlvbiBFbyhyLGUsdCxuKXtyZXR1cm4gb3QoTW8oZSkscix0LG4pfVxuYShFbyxcImFzY2lpV3JpdGVcIik7ZnVuY3Rpb24gdm8ocixlLHQsbil7cmV0dXJuIG90KEhuKGUpLHIsdCxuKX1hKHZvLFwiYmFzZTY0V3JpdGVcIik7XG5mdW5jdGlvbiBfbyhyLGUsdCxuKXtyZXR1cm4gb3QoRG8oZSxyLmxlbmd0aC10KSxyLHQsbil9YShfbyxcInVjczJXcml0ZVwiKTtmLnByb3RvdHlwZS5cbndyaXRlPWEoZnVuY3Rpb24oZSx0LG4saSl7aWYodD09PXZvaWQgMClpPVwidXRmOFwiLG49dGhpcy5sZW5ndGgsdD0wO2Vsc2UgaWYobj09PXZvaWQgMCYmXG50eXBlb2YgdD09XCJzdHJpbmdcIilpPXQsbj10aGlzLmxlbmd0aCx0PTA7ZWxzZSBpZihpc0Zpbml0ZSh0KSl0PXQ+Pj4wLGlzRmluaXRlKG4pP1xuKG49bj4+PjAsaT09PXZvaWQgMCYmKGk9XCJ1dGY4XCIpKTooaT1uLG49dm9pZCAwKTtlbHNlIHRocm93IG5ldyBFcnJvcihcIkJ1ZmZlci53cmlcXFxudGUoc3RyaW5nLCBlbmNvZGluZywgb2Zmc2V0WywgbGVuZ3RoXSkgaXMgbm8gbG9uZ2VyIHN1cHBvcnRlZFwiKTtsZXQgcz10aGlzLmxlbmd0aC1cbnQ7aWYoKG49PT12b2lkIDB8fG4+cykmJihuPXMpLGUubGVuZ3RoPjAmJihuPDB8fHQ8MCl8fHQ+dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXG5cIkF0dGVtcHQgdG8gd3JpdGUgb3V0c2lkZSBidWZmZXIgYm91bmRzXCIpO2l8fChpPVwidXRmOFwiKTtsZXQgbz0hMTtmb3IoOzspc3dpdGNoKGkpe2Nhc2VcIlxcXG5oZXhcIjpyZXR1cm4gU28odGhpcyxlLHQsbik7Y2FzZVwidXRmOFwiOmNhc2VcInV0Zi04XCI6cmV0dXJuIHhvKHRoaXMsZSx0LG4pO2Nhc2VcImFzY1xcXG5paVwiOmNhc2VcImxhdGluMVwiOmNhc2VcImJpbmFyeVwiOnJldHVybiBFbyh0aGlzLGUsdCxuKTtjYXNlXCJiYXNlNjRcIjpyZXR1cm4gdm8odGhpcyxcbmUsdCxuKTtjYXNlXCJ1Y3MyXCI6Y2FzZVwidWNzLTJcIjpjYXNlXCJ1dGYxNmxlXCI6Y2FzZVwidXRmLTE2bGVcIjpyZXR1cm4gX28odGhpcyxlLHQsbik7ZGVmYXVsdDpcbmlmKG8pdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2kpO2k9KFwiXCIraSkudG9Mb3dlckNhc2UoKSxvPSEwfX0sXCJcXFxud3JpdGVcIik7Zi5wcm90b3R5cGUudG9KU09OPWEoZnVuY3Rpb24oKXtyZXR1cm57dHlwZTpcIkJ1ZmZlclwiLGRhdGE6QXJyYXkucHJvdG90eXBlLlxuc2xpY2UuY2FsbCh0aGlzLl9hcnJ8fHRoaXMsMCl9fSxcInRvSlNPTlwiKTtmdW5jdGlvbiBBbyhyLGUsdCl7cmV0dXJuIGU9PT0wJiZ0PT09ci5cbmxlbmd0aD9QdC5mcm9tQnl0ZUFycmF5KHIpOlB0LmZyb21CeXRlQXJyYXkoci5zbGljZShlLHQpKX1hKEFvLFwiYmFzZTY0U2xpY2VcIik7ZnVuY3Rpb24ga24ocixlLHQpe1xudD1NYXRoLm1pbihyLmxlbmd0aCx0KTtsZXQgbj1bXSxpPWU7Zm9yKDtpPHQ7KXtsZXQgcz1yW2ldLG89bnVsbCx1PXM+MjM5PzQ6cz4yMjM/XG4zOnM+MTkxPzI6MTtpZihpK3U8PXQpe2xldCBjLGgsbCx5O3N3aXRjaCh1KXtjYXNlIDE6czwxMjgmJihvPXMpO2JyZWFrO2Nhc2UgMjpjPVxucltpKzFdLChjJjE5Mik9PT0xMjgmJih5PShzJjMxKTw8NnxjJjYzLHk+MTI3JiYobz15KSk7YnJlYWs7Y2FzZSAzOmM9cltpKzFdLGg9cltpK1xuMl0sKGMmMTkyKT09PTEyOCYmKGgmMTkyKT09PTEyOCYmKHk9KHMmMTUpPDwxMnwoYyY2Myk8PDZ8aCY2Myx5PjIwNDcmJih5PDU1Mjk2fHxcbnk+NTczNDMpJiYobz15KSk7YnJlYWs7Y2FzZSA0OmM9cltpKzFdLGg9cltpKzJdLGw9cltpKzNdLChjJjE5Mik9PT0xMjgmJihoJjE5Mik9PT1cbjEyOCYmKGwmMTkyKT09PTEyOCYmKHk9KHMmMTUpPDwxOHwoYyY2Myk8PDEyfChoJjYzKTw8NnxsJjYzLHk+NjU1MzUmJnk8MTExNDExMiYmXG4obz15KSl9fW89PT1udWxsPyhvPTY1NTMzLHU9MSk6bz42NTUzNSYmKG8tPTY1NTM2LG4ucHVzaChvPj4+MTAmMTAyM3w1NTI5Niksbz01NjMyMHxcbm8mMTAyMyksbi5wdXNoKG8pLGkrPXV9cmV0dXJuIENvKG4pfWEoa24sXCJ1dGY4U2xpY2VcIik7dmFyIExuPTQwOTY7ZnVuY3Rpb24gQ28ocil7XG5sZXQgZT1yLmxlbmd0aDtpZihlPD1MbilyZXR1cm4gU3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcscik7bGV0IHQ9XCJcIixuPTA7XG5mb3IoO248ZTspdCs9U3RyaW5nLmZyb21DaGFyQ29kZS5hcHBseShTdHJpbmcsci5zbGljZShuLG4rPUxuKSk7cmV0dXJuIHR9YShDbyxcImRcXFxuZWNvZGVDb2RlUG9pbnRzQXJyYXlcIik7ZnVuY3Rpb24gSW8ocixlLHQpe2xldCBuPVwiXCI7dD1NYXRoLm1pbihyLmxlbmd0aCx0KTtmb3IobGV0IGk9ZTtpPFxudDsrK2kpbis9U3RyaW5nLmZyb21DaGFyQ29kZShyW2ldJjEyNyk7cmV0dXJuIG59YShJbyxcImFzY2lpU2xpY2VcIik7ZnVuY3Rpb24gVG8ocixlLHQpe1xubGV0IG49XCJcIjt0PU1hdGgubWluKHIubGVuZ3RoLHQpO2ZvcihsZXQgaT1lO2k8dDsrK2kpbis9U3RyaW5nLmZyb21DaGFyQ29kZShyW2ldKTtcbnJldHVybiBufWEoVG8sXCJsYXRpbjFTbGljZVwiKTtmdW5jdGlvbiBQbyhyLGUsdCl7bGV0IG49ci5sZW5ndGg7KCFlfHxlPDApJiYoZT0wKSxcbighdHx8dDwwfHx0Pm4pJiYodD1uKTtsZXQgaT1cIlwiO2ZvcihsZXQgcz1lO3M8dDsrK3MpaSs9T29bcltzXV07cmV0dXJuIGl9YShQbyxcImhlXFxcbnhTbGljZVwiKTtmdW5jdGlvbiBCbyhyLGUsdCl7bGV0IG49ci5zbGljZShlLHQpLGk9XCJcIjtmb3IobGV0IHM9MDtzPG4ubGVuZ3RoLTE7cys9XG4yKWkrPVN0cmluZy5mcm9tQ2hhckNvZGUobltzXStuW3MrMV0qMjU2KTtyZXR1cm4gaX1hKEJvLFwidXRmMTZsZVNsaWNlXCIpO2YucHJvdG90eXBlLlxuc2xpY2U9YShmdW5jdGlvbihlLHQpe2xldCBuPXRoaXMubGVuZ3RoO2U9fn5lLHQ9dD09PXZvaWQgMD9uOn5+dCxlPDA/KGUrPW4sZTwwJiZcbihlPTApKTplPm4mJihlPW4pLHQ8MD8odCs9bix0PDAmJih0PTApKTp0Pm4mJih0PW4pLHQ8ZSYmKHQ9ZSk7bGV0IGk9dGhpcy5zdWJhcnJheShcbmUsdCk7cmV0dXJuIE9iamVjdC5zZXRQcm90b3R5cGVPZihpLGYucHJvdG90eXBlKSxpfSxcInNsaWNlXCIpO2Z1bmN0aW9uIFUocixlLHQpe2lmKHIlXG4xIT09MHx8cjwwKXRocm93IG5ldyBSYW5nZUVycm9yKFwib2Zmc2V0IGlzIG5vdCB1aW50XCIpO2lmKHIrZT50KXRocm93IG5ldyBSYW5nZUVycm9yKFxuXCJUcnlpbmcgdG8gYWNjZXNzIGJleW9uZCBidWZmZXIgbGVuZ3RoXCIpfWEoVSxcImNoZWNrT2Zmc2V0XCIpO2YucHJvdG90eXBlLnJlYWRVaW50TEU9XG5mLnByb3RvdHlwZS5yZWFkVUludExFPWEoZnVuY3Rpb24oZSx0LG4pe2U9ZT4+PjAsdD10Pj4+MCxufHxVKGUsdCx0aGlzLmxlbmd0aCk7bGV0IGk9dGhpc1tlXSxcbnM9MSxvPTA7Zm9yKDsrK288dCYmKHMqPTI1Nik7KWkrPXRoaXNbZStvXSpzO3JldHVybiBpfSxcInJlYWRVSW50TEVcIik7Zi5wcm90b3R5cGUuXG5yZWFkVWludEJFPWYucHJvdG90eXBlLnJlYWRVSW50QkU9YShmdW5jdGlvbihlLHQsbil7ZT1lPj4+MCx0PXQ+Pj4wLG58fFUoZSx0LHRoaXMuXG5sZW5ndGgpO2xldCBpPXRoaXNbZSstLXRdLHM9MTtmb3IoO3Q+MCYmKHMqPTI1Nik7KWkrPXRoaXNbZSstLXRdKnM7cmV0dXJuIGl9LFwicmVcXFxuYWRVSW50QkVcIik7Zi5wcm90b3R5cGUucmVhZFVpbnQ4PWYucHJvdG90eXBlLnJlYWRVSW50OD1hKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9XG5lPj4+MCx0fHxVKGUsMSx0aGlzLmxlbmd0aCksdGhpc1tlXX0sXCJyZWFkVUludDhcIik7Zi5wcm90b3R5cGUucmVhZFVpbnQxNkxFPWYucHJvdG90eXBlLlxucmVhZFVJbnQxNkxFPWEoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1lPj4+MCx0fHxVKGUsMix0aGlzLmxlbmd0aCksdGhpc1tlXXx0aGlzW2UrXG4xXTw8OH0sXCJyZWFkVUludDE2TEVcIik7Zi5wcm90b3R5cGUucmVhZFVpbnQxNkJFPWYucHJvdG90eXBlLnJlYWRVSW50MTZCRT1hKGZ1bmN0aW9uKGUsdCl7XG5yZXR1cm4gZT1lPj4+MCx0fHxVKGUsMix0aGlzLmxlbmd0aCksdGhpc1tlXTw8OHx0aGlzW2UrMV19LFwicmVhZFVJbnQxNkJFXCIpO2YucHJvdG90eXBlLlxucmVhZFVpbnQzMkxFPWYucHJvdG90eXBlLnJlYWRVSW50MzJMRT1hKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9ZT4+PjAsdHx8VShlLDQsdGhpcy5cbmxlbmd0aCksKHRoaXNbZV18dGhpc1tlKzFdPDw4fHRoaXNbZSsyXTw8MTYpK3RoaXNbZSszXSoxNjc3NzIxNn0sXCJyZWFkVUludDMyTEVcIik7XG5mLnByb3RvdHlwZS5yZWFkVWludDMyQkU9Zi5wcm90b3R5cGUucmVhZFVJbnQzMkJFPWEoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1lPj4+MCxcbnR8fFUoZSw0LHRoaXMubGVuZ3RoKSx0aGlzW2VdKjE2Nzc3MjE2Kyh0aGlzW2UrMV08PDE2fHRoaXNbZSsyXTw8OHx0aGlzW2UrM10pfSxcIlxcXG5yZWFkVUludDMyQkVcIik7Zi5wcm90b3R5cGUucmVhZEJpZ1VJbnQ2NExFPW1lKGEoZnVuY3Rpb24oZSl7ZT1lPj4+MCxCZShlLFwib2Zmc2V0XCIpO1xubGV0IHQ9dGhpc1tlXSxuPXRoaXNbZSs3XTsodD09PXZvaWQgMHx8bj09PXZvaWQgMCkmJmplKGUsdGhpcy5sZW5ndGgtOCk7bGV0IGk9dCtcbnRoaXNbKytlXSoyKio4K3RoaXNbKytlXSoyKioxNit0aGlzWysrZV0qMioqMjQscz10aGlzWysrZV0rdGhpc1srK2VdKjIqKjgrdGhpc1srK2VdKlxuMioqMTYrbioyKioyNDtyZXR1cm4gQmlnSW50KGkpKyhCaWdJbnQocyk8PEJpZ0ludCgzMikpfSxcInJlYWRCaWdVSW50NjRMRVwiKSk7Zi5wcm90b3R5cGUuXG5yZWFkQmlnVUludDY0QkU9bWUoYShmdW5jdGlvbihlKXtlPWU+Pj4wLEJlKGUsXCJvZmZzZXRcIik7bGV0IHQ9dGhpc1tlXSxuPXRoaXNbZSs3XTtcbih0PT09dm9pZCAwfHxuPT09dm9pZCAwKSYmamUoZSx0aGlzLmxlbmd0aC04KTtsZXQgaT10KjIqKjI0K3RoaXNbKytlXSoyKioxNit0aGlzWysrZV0qXG4yKio4K3RoaXNbKytlXSxzPXRoaXNbKytlXSoyKioyNCt0aGlzWysrZV0qMioqMTYrdGhpc1srK2VdKjIqKjgrbjtyZXR1cm4oQmlnSW50KFxuaSk8PEJpZ0ludCgzMikpK0JpZ0ludChzKX0sXCJyZWFkQmlnVUludDY0QkVcIikpO2YucHJvdG90eXBlLnJlYWRJbnRMRT1hKGZ1bmN0aW9uKGUsdCxuKXtcbmU9ZT4+PjAsdD10Pj4+MCxufHxVKGUsdCx0aGlzLmxlbmd0aCk7bGV0IGk9dGhpc1tlXSxzPTEsbz0wO2Zvcig7KytvPHQmJihzKj0yNTYpOylcbmkrPXRoaXNbZStvXSpzO3JldHVybiBzKj0xMjgsaT49cyYmKGktPU1hdGgucG93KDIsOCp0KSksaX0sXCJyZWFkSW50TEVcIik7Zi5wcm90b3R5cGUuXG5yZWFkSW50QkU9YShmdW5jdGlvbihlLHQsbil7ZT1lPj4+MCx0PXQ+Pj4wLG58fFUoZSx0LHRoaXMubGVuZ3RoKTtsZXQgaT10LHM9MSxvPXRoaXNbZStcbi0taV07Zm9yKDtpPjAmJihzKj0yNTYpOylvKz10aGlzW2UrLS1pXSpzO3JldHVybiBzKj0xMjgsbz49cyYmKG8tPU1hdGgucG93KDIsOCp0KSksXG5vfSxcInJlYWRJbnRCRVwiKTtmLnByb3RvdHlwZS5yZWFkSW50OD1hKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9ZT4+PjAsdHx8VShlLDEsdGhpcy5cbmxlbmd0aCksdGhpc1tlXSYxMjg/KDI1NS10aGlzW2VdKzEpKi0xOnRoaXNbZV19LFwicmVhZEludDhcIik7Zi5wcm90b3R5cGUucmVhZEludDE2TEU9XG5hKGZ1bmN0aW9uKGUsdCl7ZT1lPj4+MCx0fHxVKGUsMix0aGlzLmxlbmd0aCk7bGV0IG49dGhpc1tlXXx0aGlzW2UrMV08PDg7cmV0dXJuIG4mXG4zMjc2OD9ufDQyOTQ5MDE3NjA6bn0sXCJyZWFkSW50MTZMRVwiKTtmLnByb3RvdHlwZS5yZWFkSW50MTZCRT1hKGZ1bmN0aW9uKGUsdCl7ZT1lPj4+XG4wLHR8fFUoZSwyLHRoaXMubGVuZ3RoKTtsZXQgbj10aGlzW2UrMV18dGhpc1tlXTw8ODtyZXR1cm4gbiYzMjc2OD9ufDQyOTQ5MDE3NjA6bn0sXG5cInJlYWRJbnQxNkJFXCIpO2YucHJvdG90eXBlLnJlYWRJbnQzMkxFPWEoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1lPj4+MCx0fHxVKGUsNCx0aGlzLlxubGVuZ3RoKSx0aGlzW2VdfHRoaXNbZSsxXTw8OHx0aGlzW2UrMl08PDE2fHRoaXNbZSszXTw8MjR9LFwicmVhZEludDMyTEVcIik7Zi5wcm90b3R5cGUuXG5yZWFkSW50MzJCRT1hKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9ZT4+PjAsdHx8VShlLDQsdGhpcy5sZW5ndGgpLHRoaXNbZV08PDI0fHRoaXNbZStcbjFdPDwxNnx0aGlzW2UrMl08PDh8dGhpc1tlKzNdfSxcInJlYWRJbnQzMkJFXCIpO2YucHJvdG90eXBlLnJlYWRCaWdJbnQ2NExFPW1lKGEoZnVuY3Rpb24oZSl7XG5lPWU+Pj4wLEJlKGUsXCJvZmZzZXRcIik7bGV0IHQ9dGhpc1tlXSxuPXRoaXNbZSs3XTsodD09PXZvaWQgMHx8bj09PXZvaWQgMCkmJmplKGUsXG50aGlzLmxlbmd0aC04KTtsZXQgaT10aGlzW2UrNF0rdGhpc1tlKzVdKjIqKjgrdGhpc1tlKzZdKjIqKjE2KyhuPDwyNCk7cmV0dXJuKEJpZ0ludChcbmkpPDxCaWdJbnQoMzIpKStCaWdJbnQodCt0aGlzWysrZV0qMioqOCt0aGlzWysrZV0qMioqMTYrdGhpc1srK2VdKjIqKjI0KX0sXCJyZWFkQlxcXG5pZ0ludDY0TEVcIikpO2YucHJvdG90eXBlLnJlYWRCaWdJbnQ2NEJFPW1lKGEoZnVuY3Rpb24oZSl7ZT1lPj4+MCxCZShlLFwib2Zmc2V0XCIpO1xubGV0IHQ9dGhpc1tlXSxuPXRoaXNbZSs3XTsodD09PXZvaWQgMHx8bj09PXZvaWQgMCkmJmplKGUsdGhpcy5sZW5ndGgtOCk7bGV0IGk9KHQ8PFxuMjQpK3RoaXNbKytlXSoyKioxNit0aGlzWysrZV0qMioqOCt0aGlzWysrZV07cmV0dXJuKEJpZ0ludChpKTw8QmlnSW50KDMyKSkrQmlnSW50KFxudGhpc1srK2VdKjIqKjI0K3RoaXNbKytlXSoyKioxNit0aGlzWysrZV0qMioqOCtuKX0sXCJyZWFkQmlnSW50NjRCRVwiKSk7Zi5wcm90b3R5cGUuXG5yZWFkRmxvYXRMRT1hKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIGU9ZT4+PjAsdHx8VShlLDQsdGhpcy5sZW5ndGgpLFBlLnJlYWQodGhpcyxlLFxuITAsMjMsNCl9LFwicmVhZEZsb2F0TEVcIik7Zi5wcm90b3R5cGUucmVhZEZsb2F0QkU9YShmdW5jdGlvbihlLHQpe3JldHVybiBlPWU+Pj4wLFxudHx8VShlLDQsdGhpcy5sZW5ndGgpLFBlLnJlYWQodGhpcyxlLCExLDIzLDQpfSxcInJlYWRGbG9hdEJFXCIpO2YucHJvdG90eXBlLnJlYWREb3VibGVMRT1cbmEoZnVuY3Rpb24oZSx0KXtyZXR1cm4gZT1lPj4+MCx0fHxVKGUsOCx0aGlzLmxlbmd0aCksUGUucmVhZCh0aGlzLGUsITAsNTIsOCl9LFwiclxcXG5lYWREb3VibGVMRVwiKTtmLnByb3RvdHlwZS5yZWFkRG91YmxlQkU9YShmdW5jdGlvbihlLHQpe3JldHVybiBlPWU+Pj4wLHR8fFUoZSw4LHRoaXMuXG5sZW5ndGgpLFBlLnJlYWQodGhpcyxlLCExLDUyLDgpfSxcInJlYWREb3VibGVCRVwiKTtmdW5jdGlvbiB6KHIsZSx0LG4saSxzKXtpZighZi5pc0J1ZmZlcihcbnIpKXRocm93IG5ldyBUeXBlRXJyb3IoJ1wiYnVmZmVyXCIgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlciBpbnN0YW5jZScpO2lmKGU+aXx8ZTxcbnMpdGhyb3cgbmV3IFJhbmdlRXJyb3IoJ1widmFsdWVcIiBhcmd1bWVudCBpcyBvdXQgb2YgYm91bmRzJyk7aWYodCtuPnIubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFxuXCJJbmRleCBvdXQgb2YgcmFuZ2VcIil9YSh6LFwiY2hlY2tJbnRcIik7Zi5wcm90b3R5cGUud3JpdGVVaW50TEU9Zi5wcm90b3R5cGUud3JpdGVVSW50TEU9XG5hKGZ1bmN0aW9uKGUsdCxuLGkpe2lmKGU9K2UsdD10Pj4+MCxuPW4+Pj4wLCFpKXtsZXQgdT1NYXRoLnBvdygyLDgqbiktMTt6KHRoaXMsZSxcbnQsbix1LDApfWxldCBzPTEsbz0wO2Zvcih0aGlzW3RdPWUmMjU1OysrbzxuJiYocyo9MjU2KTspdGhpc1t0K29dPWUvcyYyNTU7cmV0dXJuIHQrXG5ufSxcIndyaXRlVUludExFXCIpO2YucHJvdG90eXBlLndyaXRlVWludEJFPWYucHJvdG90eXBlLndyaXRlVUludEJFPWEoZnVuY3Rpb24oZSx0LG4saSl7XG5pZihlPStlLHQ9dD4+PjAsbj1uPj4+MCwhaSl7bGV0IHU9TWF0aC5wb3coMiw4Km4pLTE7eih0aGlzLGUsdCxuLHUsMCl9bGV0IHM9bi0xLFxubz0xO2Zvcih0aGlzW3Qrc109ZSYyNTU7LS1zPj0wJiYobyo9MjU2KTspdGhpc1t0K3NdPWUvbyYyNTU7cmV0dXJuIHQrbn0sXCJ3cml0ZVVJXFxcbm50QkVcIik7Zi5wcm90b3R5cGUud3JpdGVVaW50OD1mLnByb3RvdHlwZS53cml0ZVVJbnQ4PWEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlPVxuK2UsdD10Pj4+MCxufHx6KHRoaXMsZSx0LDEsMjU1LDApLHRoaXNbdF09ZSYyNTUsdCsxfSxcIndyaXRlVUludDhcIik7Zi5wcm90b3R5cGUud3JpdGVVaW50MTZMRT1cbmYucHJvdG90eXBlLndyaXRlVUludDE2TEU9YShmdW5jdGlvbihlLHQsbil7cmV0dXJuIGU9K2UsdD10Pj4+MCxufHx6KHRoaXMsZSx0LDIsXG42NTUzNSwwKSx0aGlzW3RdPWUmMjU1LHRoaXNbdCsxXT1lPj4+OCx0KzJ9LFwid3JpdGVVSW50MTZMRVwiKTtmLnByb3RvdHlwZS53cml0ZVVpbnQxNkJFPVxuZi5wcm90b3R5cGUud3JpdGVVSW50MTZCRT1hKGZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZT0rZSx0PXQ+Pj4wLG58fHoodGhpcyxlLHQsMixcbjY1NTM1LDApLHRoaXNbdF09ZT4+PjgsdGhpc1t0KzFdPWUmMjU1LHQrMn0sXCJ3cml0ZVVJbnQxNkJFXCIpO2YucHJvdG90eXBlLndyaXRlVWludDMyTEU9XG5mLnByb3RvdHlwZS53cml0ZVVJbnQzMkxFPWEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlPStlLHQ9dD4+PjAsbnx8eih0aGlzLGUsdCw0LFxuNDI5NDk2NzI5NSwwKSx0aGlzW3QrM109ZT4+PjI0LHRoaXNbdCsyXT1lPj4+MTYsdGhpc1t0KzFdPWU+Pj44LHRoaXNbdF09ZSYyNTUsdCtcbjR9LFwid3JpdGVVSW50MzJMRVwiKTtmLnByb3RvdHlwZS53cml0ZVVpbnQzMkJFPWYucHJvdG90eXBlLndyaXRlVUludDMyQkU9YShmdW5jdGlvbihlLHQsbil7XG5yZXR1cm4gZT0rZSx0PXQ+Pj4wLG58fHoodGhpcyxlLHQsNCw0Mjk0OTY3Mjk1LDApLHRoaXNbdF09ZT4+PjI0LHRoaXNbdCsxXT1lPj4+MTYsXG50aGlzW3QrMl09ZT4+PjgsdGhpc1t0KzNdPWUmMjU1LHQrNH0sXCJ3cml0ZVVJbnQzMkJFXCIpO2Z1bmN0aW9uIFVuKHIsZSx0LG4saSl7am4oXG5lLG4saSxyLHQsNyk7bGV0IHM9TnVtYmVyKGUmQmlnSW50KDQyOTQ5NjcyOTUpKTtyW3QrK109cyxzPXM+Pjgsclt0KytdPXMscz1zPj44LFxuclt0KytdPXMscz1zPj44LHJbdCsrXT1zO2xldCBvPU51bWJlcihlPj5CaWdJbnQoMzIpJkJpZ0ludCg0Mjk0OTY3Mjk1KSk7cmV0dXJuIHJbdCsrXT1cbm8sbz1vPj44LHJbdCsrXT1vLG89bz4+OCxyW3QrK109byxvPW8+Pjgsclt0KytdPW8sdH1hKFVuLFwid3J0QmlnVUludDY0TEVcIik7ZnVuY3Rpb24gcW4ocixlLHQsbixpKXtcbmpuKGUsbixpLHIsdCw3KTtsZXQgcz1OdW1iZXIoZSZCaWdJbnQoNDI5NDk2NzI5NSkpO3JbdCs3XT1zLHM9cz4+OCxyW3QrNl09cyxzPXM+PlxuOCxyW3QrNV09cyxzPXM+Pjgsclt0KzRdPXM7bGV0IG89TnVtYmVyKGU+PkJpZ0ludCgzMikmQmlnSW50KDQyOTQ5NjcyOTUpKTtyZXR1cm4gclt0K1xuM109byxvPW8+Pjgsclt0KzJdPW8sbz1vPj44LHJbdCsxXT1vLG89bz4+OCxyW3RdPW8sdCs4fWEocW4sXCJ3cnRCaWdVSW50NjRCRVwiKTtmLlxucHJvdG90eXBlLndyaXRlQmlnVUludDY0TEU9bWUoYShmdW5jdGlvbihlLHQ9MCl7cmV0dXJuIFVuKHRoaXMsZSx0LEJpZ0ludCgwKSxCaWdJbnQoXG5cIjB4ZmZmZmZmZmZmZmZmZmZmZlwiKSl9LFwid3JpdGVCaWdVSW50NjRMRVwiKSk7Zi5wcm90b3R5cGUud3JpdGVCaWdVSW50NjRCRT1tZShhKGZ1bmN0aW9uKGUsdD0wKXtcbnJldHVybiBxbih0aGlzLGUsdCxCaWdJbnQoMCksQmlnSW50KFwiMHhmZmZmZmZmZmZmZmZmZmZmXCIpKX0sXCJ3cml0ZUJpZ1VJbnQ2NEJFXCIpKTtcbmYucHJvdG90eXBlLndyaXRlSW50TEU9YShmdW5jdGlvbihlLHQsbixpKXtpZihlPStlLHQ9dD4+PjAsIWkpe2xldCBjPU1hdGgucG93KDIsXG44Km4tMSk7eih0aGlzLGUsdCxuLGMtMSwtYyl9bGV0IHM9MCxvPTEsdT0wO2Zvcih0aGlzW3RdPWUmMjU1OysrczxuJiYobyo9MjU2KTspZTxcbjAmJnU9PT0wJiZ0aGlzW3Qrcy0xXSE9PTAmJih1PTEpLHRoaXNbdCtzXT0oZS9vPj4wKS11JjI1NTtyZXR1cm4gdCtufSxcIndyaXRlSW50TFxcXG5FXCIpO2YucHJvdG90eXBlLndyaXRlSW50QkU9YShmdW5jdGlvbihlLHQsbixpKXtpZihlPStlLHQ9dD4+PjAsIWkpe2xldCBjPU1hdGgucG93KFxuMiw4Km4tMSk7eih0aGlzLGUsdCxuLGMtMSwtYyl9bGV0IHM9bi0xLG89MSx1PTA7Zm9yKHRoaXNbdCtzXT1lJjI1NTstLXM+PTAmJihvKj1cbjI1Nik7KWU8MCYmdT09PTAmJnRoaXNbdCtzKzFdIT09MCYmKHU9MSksdGhpc1t0K3NdPShlL28+PjApLXUmMjU1O3JldHVybiB0K259LFwid1xcXG5yaXRlSW50QkVcIik7Zi5wcm90b3R5cGUud3JpdGVJbnQ4PWEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlPStlLHQ9dD4+PjAsbnx8eih0aGlzLFxuZSx0LDEsMTI3LC0xMjgpLGU8MCYmKGU9MjU1K2UrMSksdGhpc1t0XT1lJjI1NSx0KzF9LFwid3JpdGVJbnQ4XCIpO2YucHJvdG90eXBlLndyaXRlSW50MTZMRT1cbmEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiBlPStlLHQ9dD4+PjAsbnx8eih0aGlzLGUsdCwyLDMyNzY3LC0zMjc2OCksdGhpc1t0XT1lJjI1NSxcbnRoaXNbdCsxXT1lPj4+OCx0KzJ9LFwid3JpdGVJbnQxNkxFXCIpO2YucHJvdG90eXBlLndyaXRlSW50MTZCRT1hKGZ1bmN0aW9uKGUsdCxuKXtcbnJldHVybiBlPStlLHQ9dD4+PjAsbnx8eih0aGlzLGUsdCwyLDMyNzY3LC0zMjc2OCksdGhpc1t0XT1lPj4+OCx0aGlzW3QrMV09ZSYyNTUsXG50KzJ9LFwid3JpdGVJbnQxNkJFXCIpO2YucHJvdG90eXBlLndyaXRlSW50MzJMRT1hKGZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gZT0rZSx0PXQ+Pj5cbjAsbnx8eih0aGlzLGUsdCw0LDIxNDc0ODM2NDcsLTIxNDc0ODM2NDgpLHRoaXNbdF09ZSYyNTUsdGhpc1t0KzFdPWU+Pj44LHRoaXNbdCsyXT1cbmU+Pj4xNix0aGlzW3QrM109ZT4+PjI0LHQrNH0sXCJ3cml0ZUludDMyTEVcIik7Zi5wcm90b3R5cGUud3JpdGVJbnQzMkJFPWEoZnVuY3Rpb24oZSx0LG4pe1xucmV0dXJuIGU9K2UsdD10Pj4+MCxufHx6KHRoaXMsZSx0LDQsMjE0NzQ4MzY0NywtMjE0NzQ4MzY0OCksZTwwJiYoZT00Mjk0OTY3Mjk1K2UrXG4xKSx0aGlzW3RdPWU+Pj4yNCx0aGlzW3QrMV09ZT4+PjE2LHRoaXNbdCsyXT1lPj4+OCx0aGlzW3QrM109ZSYyNTUsdCs0fSxcIndyaXRlSW5cXFxudDMyQkVcIik7Zi5wcm90b3R5cGUud3JpdGVCaWdJbnQ2NExFPW1lKGEoZnVuY3Rpb24oZSx0PTApe3JldHVybiBVbih0aGlzLGUsdCwtQmlnSW50KFxuXCIweDgwMDAwMDAwMDAwMDAwMDBcIiksQmlnSW50KFwiMHg3ZmZmZmZmZmZmZmZmZmZmXCIpKX0sXCJ3cml0ZUJpZ0ludDY0TEVcIikpO2YucHJvdG90eXBlLlxud3JpdGVCaWdJbnQ2NEJFPW1lKGEoZnVuY3Rpb24oZSx0PTApe3JldHVybiBxbih0aGlzLGUsdCwtQmlnSW50KFwiMHg4MDAwMDAwMDAwMDAwXFxcbjAwMFwiKSxCaWdJbnQoXCIweDdmZmZmZmZmZmZmZmZmZmZcIikpfSxcIndyaXRlQmlnSW50NjRCRVwiKSk7ZnVuY3Rpb24gTm4ocixlLHQsbixpLHMpe1xuaWYodCtuPnIubGVuZ3RoKXRocm93IG5ldyBSYW5nZUVycm9yKFwiSW5kZXggb3V0IG9mIHJhbmdlXCIpO2lmKHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcblwiSW5kZXggb3V0IG9mIHJhbmdlXCIpfWEoTm4sXCJjaGVja0lFRUU3NTRcIik7ZnVuY3Rpb24gUW4ocixlLHQsbixpKXtyZXR1cm4gZT0rZSx0PVxudD4+PjAsaXx8Tm4ocixlLHQsNCwzNDAyODIzNDY2Mzg1Mjg4NmUyMiwtMzQwMjgyMzQ2NjM4NTI4ODZlMjIpLFBlLndyaXRlKHIsZSx0LG4sXG4yMyw0KSx0KzR9YShRbixcIndyaXRlRmxvYXRcIik7Zi5wcm90b3R5cGUud3JpdGVGbG9hdExFPWEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiBRbihcbnRoaXMsZSx0LCEwLG4pfSxcIndyaXRlRmxvYXRMRVwiKTtmLnByb3RvdHlwZS53cml0ZUZsb2F0QkU9YShmdW5jdGlvbihlLHQsbil7cmV0dXJuIFFuKFxudGhpcyxlLHQsITEsbil9LFwid3JpdGVGbG9hdEJFXCIpO2Z1bmN0aW9uIFduKHIsZSx0LG4saSl7cmV0dXJuIGU9K2UsdD10Pj4+MCxpfHxObihcbnIsZSx0LDgsMTc5NzY5MzEzNDg2MjMxNTdlMjkyLC0xNzk3NjkzMTM0ODYyMzE1N2UyOTIpLFBlLndyaXRlKHIsZSx0LG4sNTIsOCksdCs4fVxuYShXbixcIndyaXRlRG91YmxlXCIpO2YucHJvdG90eXBlLndyaXRlRG91YmxlTEU9YShmdW5jdGlvbihlLHQsbil7cmV0dXJuIFduKHRoaXMsZSxcbnQsITAsbil9LFwid3JpdGVEb3VibGVMRVwiKTtmLnByb3RvdHlwZS53cml0ZURvdWJsZUJFPWEoZnVuY3Rpb24oZSx0LG4pe3JldHVybiBXbihcbnRoaXMsZSx0LCExLG4pfSxcIndyaXRlRG91YmxlQkVcIik7Zi5wcm90b3R5cGUuY29weT1hKGZ1bmN0aW9uKGUsdCxuLGkpe2lmKCFmLmlzQnVmZmVyKFxuZSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcImFyZ3VtZW50IHNob3VsZCBiZSBhIEJ1ZmZlclwiKTtpZihufHwobj0wKSwhaSYmaSE9PTAmJihpPVxudGhpcy5sZW5ndGgpLHQ+PWUubGVuZ3RoJiYodD1lLmxlbmd0aCksdHx8KHQ9MCksaT4wJiZpPG4mJihpPW4pLGk9PT1ufHxlLmxlbmd0aD09PVxuMHx8dGhpcy5sZW5ndGg9PT0wKXJldHVybiAwO2lmKHQ8MCl0aHJvdyBuZXcgUmFuZ2VFcnJvcihcInRhcmdldFN0YXJ0IG91dCBvZiBib3VuXFxcbmRzXCIpO2lmKG48MHx8bj49dGhpcy5sZW5ndGgpdGhyb3cgbmV3IFJhbmdlRXJyb3IoXCJJbmRleCBvdXQgb2YgcmFuZ2VcIik7aWYoaTwwKXRocm93IG5ldyBSYW5nZUVycm9yKFxuXCJzb3VyY2VFbmQgb3V0IG9mIGJvdW5kc1wiKTtpPnRoaXMubGVuZ3RoJiYoaT10aGlzLmxlbmd0aCksZS5sZW5ndGgtdDxpLW4mJihpPWUubGVuZ3RoLVxudCtuKTtsZXQgcz1pLW47cmV0dXJuIHRoaXM9PT1lJiZ0eXBlb2YgVWludDhBcnJheS5wcm90b3R5cGUuY29weVdpdGhpbj09XCJmdW5jdGlvXFxcbm5cIj90aGlzLmNvcHlXaXRoaW4odCxuLGkpOlVpbnQ4QXJyYXkucHJvdG90eXBlLnNldC5jYWxsKGUsdGhpcy5zdWJhcnJheShuLGkpLHQpLFxuc30sXCJjb3B5XCIpO2YucHJvdG90eXBlLmZpbGw9YShmdW5jdGlvbihlLHQsbixpKXtpZih0eXBlb2YgZT09XCJzdHJpbmdcIil7aWYodHlwZW9mIHQ9PVxuXCJzdHJpbmdcIj8oaT10LHQ9MCxuPXRoaXMubGVuZ3RoKTp0eXBlb2Ygbj09XCJzdHJpbmdcIiYmKGk9bixuPXRoaXMubGVuZ3RoKSxpIT09dm9pZCAwJiZcbnR5cGVvZiBpIT1cInN0cmluZ1wiKXRocm93IG5ldyBUeXBlRXJyb3IoXCJlbmNvZGluZyBtdXN0IGJlIGEgc3RyaW5nXCIpO2lmKHR5cGVvZiBpPT1cblwic3RyaW5nXCImJiFmLmlzRW5jb2RpbmcoaSkpdGhyb3cgbmV3IFR5cGVFcnJvcihcIlVua25vd24gZW5jb2Rpbmc6IFwiK2kpO2lmKGUubGVuZ3RoPT09XG4xKXtsZXQgbz1lLmNoYXJDb2RlQXQoMCk7KGk9PT1cInV0ZjhcIiYmbzwxMjh8fGk9PT1cImxhdGluMVwiKSYmKGU9byl9fWVsc2UgdHlwZW9mIGU9PVxuXCJudW1iZXJcIj9lPWUmMjU1OnR5cGVvZiBlPT1cImJvb2xlYW5cIiYmKGU9TnVtYmVyKGUpKTtpZih0PDB8fHRoaXMubGVuZ3RoPHR8fHRoaXMuXG5sZW5ndGg8bil0aHJvdyBuZXcgUmFuZ2VFcnJvcihcIk91dCBvZiByYW5nZSBpbmRleFwiKTtpZihuPD10KXJldHVybiB0aGlzO3Q9dD4+PjAsXG5uPW49PT12b2lkIDA/dGhpcy5sZW5ndGg6bj4+PjAsZXx8KGU9MCk7bGV0IHM7aWYodHlwZW9mIGU9PVwibnVtYmVyXCIpZm9yKHM9dDtzPG47KytzKVxudGhpc1tzXT1lO2Vsc2V7bGV0IG89Zi5pc0J1ZmZlcihlKT9lOmYuZnJvbShlLGkpLHU9by5sZW5ndGg7aWYodT09PTApdGhyb3cgbmV3IFR5cGVFcnJvcihcbidUaGUgdmFsdWUgXCInK2UrJ1wiIGlzIGludmFsaWQgZm9yIGFyZ3VtZW50IFwidmFsdWVcIicpO2ZvcihzPTA7czxuLXQ7KytzKXRoaXNbcyt0XT1cbm9bcyV1XX1yZXR1cm4gdGhpc30sXCJmaWxsXCIpO3ZhciBUZT17fTtmdW5jdGlvbiBEdChyLGUsdCl7dmFyIG47VGVbcl09KG49Y2xhc3MgZXh0ZW5kcyB0e2NvbnN0cnVjdG9yKCl7XG5zdXBlcigpLE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwibWVzc2FnZVwiLHt2YWx1ZTplLmFwcGx5KHRoaXMsYXJndW1lbnRzKSx3cml0YWJsZTohMCxcbmNvbmZpZ3VyYWJsZTohMH0pLHRoaXMubmFtZT1gJHt0aGlzLm5hbWV9IFske3J9XWAsdGhpcy5zdGFjayxkZWxldGUgdGhpcy5uYW1lfWdldCBjb2RlKCl7XG5yZXR1cm4gcn1zZXQgY29kZShzKXtPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcImNvZGVcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITAsXG52YWx1ZTpzLHdyaXRhYmxlOiEwfSl9dG9TdHJpbmcoKXtyZXR1cm5gJHt0aGlzLm5hbWV9IFske3J9XTogJHt0aGlzLm1lc3NhZ2V9YH19LFxuYShuLFwiTm9kZUVycm9yXCIpLG4pfWEoRHQsXCJFXCIpO0R0KFwiRVJSX0JVRkZFUl9PVVRfT0ZfQk9VTkRTXCIsZnVuY3Rpb24ocil7cmV0dXJuIHI/XG5gJHtyfSBpcyBvdXRzaWRlIG9mIGJ1ZmZlciBib3VuZHNgOlwiQXR0ZW1wdCB0byBhY2Nlc3MgbWVtb3J5IG91dHNpZGUgYnVmZmVyIGJvdW5cXFxuZHNcIn0sUmFuZ2VFcnJvcik7RHQoXCJFUlJfSU5WQUxJRF9BUkdfVFlQRVwiLGZ1bmN0aW9uKHIsZSl7cmV0dXJuYFRoZSBcIiR7cn1cIiBhcmd1bVxcXG5lbnQgbXVzdCBiZSBvZiB0eXBlIG51bWJlci4gUmVjZWl2ZWQgdHlwZSAke3R5cGVvZiBlfWB9LFR5cGVFcnJvcik7RHQoXCJFUlJfT1VUX09cXFxuRl9SQU5HRVwiLGZ1bmN0aW9uKHIsZSx0KXtsZXQgbj1gVGhlIHZhbHVlIG9mIFwiJHtyfVwiIGlzIG91dCBvZiByYW5nZS5gLGk9dDtyZXR1cm4gTnVtYmVyLlxuaXNJbnRlZ2VyKHQpJiZNYXRoLmFicyh0KT4yKiozMj9pPVJuKFN0cmluZyh0KSk6dHlwZW9mIHQ9PVwiYmlnaW50XCImJihpPVN0cmluZyh0KSxcbih0PkJpZ0ludCgyKSoqQmlnSW50KDMyKXx8dDwtKEJpZ0ludCgyKSoqQmlnSW50KDMyKSkpJiYoaT1SbihpKSksaSs9XCJuXCIpLG4rPWAgSXRcXFxuIG11c3QgYmUgJHtlfS4gUmVjZWl2ZWQgJHtpfWAsbn0sUmFuZ2VFcnJvcik7ZnVuY3Rpb24gUm4ocil7bGV0IGU9XCJcIix0PXIubGVuZ3RoLFxubj1yWzBdPT09XCItXCI/MTowO2Zvcig7dD49bis0O3QtPTMpZT1gXyR7ci5zbGljZSh0LTMsdCl9JHtlfWA7cmV0dXJuYCR7ci5zbGljZSgwLFxudCl9JHtlfWB9YShSbixcImFkZE51bWVyaWNhbFNlcGFyYXRvclwiKTtmdW5jdGlvbiBMbyhyLGUsdCl7QmUoZSxcIm9mZnNldFwiKSwocltlXT09PVxudm9pZCAwfHxyW2UrdF09PT12b2lkIDApJiZqZShlLHIubGVuZ3RoLSh0KzEpKX1hKExvLFwiY2hlY2tCb3VuZHNcIik7ZnVuY3Rpb24gam4ocixlLHQsbixpLHMpe1xuaWYocj50fHxyPGUpe2xldCBvPXR5cGVvZiBlPT1cImJpZ2ludFwiP1wiblwiOlwiXCIsdTt0aHJvdyBzPjM/ZT09PTB8fGU9PT1CaWdJbnQoMCk/dT1cbmA+PSAwJHtvfSBhbmQgPCAyJHtvfSAqKiAkeyhzKzEpKjh9JHtvfWA6dT1gPj0gLSgyJHtvfSAqKiAkeyhzKzEpKjgtMX0ke299KSBhbmQgXFxcbjwgMiAqKiAkeyhzKzEpKjgtMX0ke299YDp1PWA+PSAke2V9JHtvfSBhbmQgPD0gJHt0fSR7b31gLG5ldyBUZS5FUlJfT1VUX09GX1JBTkdFKFxuXCJ2YWx1ZVwiLHUscil9TG8obixpLHMpfWEoam4sXCJjaGVja0ludEJJXCIpO2Z1bmN0aW9uIEJlKHIsZSl7aWYodHlwZW9mIHIhPVwibnVtYmVyXCIpXG50aHJvdyBuZXcgVGUuRVJSX0lOVkFMSURfQVJHX1RZUEUoZSxcIm51bWJlclwiLHIpfWEoQmUsXCJ2YWxpZGF0ZU51bWJlclwiKTtmdW5jdGlvbiBqZShyLGUsdCl7XG50aHJvdyBNYXRoLmZsb29yKHIpIT09cj8oQmUocix0KSxuZXcgVGUuRVJSX09VVF9PRl9SQU5HRSh0fHxcIm9mZnNldFwiLFwiYW4gaW50ZWdlclwiLFxucikpOmU8MD9uZXcgVGUuRVJSX0JVRkZFUl9PVVRfT0ZfQk9VTkRTOm5ldyBUZS5FUlJfT1VUX09GX1JBTkdFKHR8fFwib2Zmc2V0XCIsYD49ICR7dD9cbjE6MH0gYW5kIDw9ICR7ZX1gLHIpfWEoamUsXCJib3VuZHNFcnJvclwiKTt2YXIgUm89L1teKy8wLTlBLVphLXotX10vZztmdW5jdGlvbiBGbyhyKXtcbmlmKHI9ci5zcGxpdChcIj1cIilbMF0scj1yLnRyaW0oKS5yZXBsYWNlKFJvLFwiXCIpLHIubGVuZ3RoPDIpcmV0dXJuXCJcIjtmb3IoO3IubGVuZ3RoJVxuNCE9PTA7KXI9citcIj1cIjtyZXR1cm4gcn1hKEZvLFwiYmFzZTY0Y2xlYW5cIik7ZnVuY3Rpb24gUnQocixlKXtlPWV8fDEvMDtsZXQgdCxuPXIuXG5sZW5ndGgsaT1udWxsLHM9W107Zm9yKGxldCBvPTA7bzxuOysrbyl7aWYodD1yLmNoYXJDb2RlQXQobyksdD41NTI5NSYmdDw1NzM0NCl7aWYoIWkpe1xuaWYodD41NjMxOSl7KGUtPTMpPi0xJiZzLnB1c2goMjM5LDE5MSwxODkpO2NvbnRpbnVlfWVsc2UgaWYobysxPT09bil7KGUtPTMpPi0xJiZcbnMucHVzaCgyMzksMTkxLDE4OSk7Y29udGludWV9aT10O2NvbnRpbnVlfWlmKHQ8NTYzMjApeyhlLT0zKT4tMSYmcy5wdXNoKDIzOSwxOTEsXG4xODkpLGk9dDtjb250aW51ZX10PShpLTU1Mjk2PDwxMHx0LTU2MzIwKSs2NTUzNn1lbHNlIGkmJihlLT0zKT4tMSYmcy5wdXNoKDIzOSwxOTEsXG4xODkpO2lmKGk9bnVsbCx0PDEyOCl7aWYoKGUtPTEpPDApYnJlYWs7cy5wdXNoKHQpfWVsc2UgaWYodDwyMDQ4KXtpZigoZS09Mik8MClicmVhaztcbnMucHVzaCh0Pj42fDE5Mix0JjYzfDEyOCl9ZWxzZSBpZih0PDY1NTM2KXtpZigoZS09Myk8MClicmVhaztzLnB1c2godD4+MTJ8MjI0LHQ+PlxuNiY2M3wxMjgsdCY2M3wxMjgpfWVsc2UgaWYodDwxMTE0MTEyKXtpZigoZS09NCk8MClicmVhaztzLnB1c2godD4+MTh8MjQwLHQ+PjEyJjYzfFxuMTI4LHQ+PjYmNjN8MTI4LHQmNjN8MTI4KX1lbHNlIHRocm93IG5ldyBFcnJvcihcIkludmFsaWQgY29kZSBwb2ludFwiKX1yZXR1cm4gc31hKFxuUnQsXCJ1dGY4VG9CeXRlc1wiKTtmdW5jdGlvbiBNbyhyKXtsZXQgZT1bXTtmb3IobGV0IHQ9MDt0PHIubGVuZ3RoOysrdCllLnB1c2goci5jaGFyQ29kZUF0KFxudCkmMjU1KTtyZXR1cm4gZX1hKE1vLFwiYXNjaWlUb0J5dGVzXCIpO2Z1bmN0aW9uIERvKHIsZSl7bGV0IHQsbixpLHM9W107Zm9yKGxldCBvPTA7bzxcbnIubGVuZ3RoJiYhKChlLT0yKTwwKTsrK28pdD1yLmNoYXJDb2RlQXQobyksbj10Pj44LGk9dCUyNTYscy5wdXNoKGkpLHMucHVzaChuKTtyZXR1cm4gc31cbmEoRG8sXCJ1dGYxNmxlVG9CeXRlc1wiKTtmdW5jdGlvbiBIbihyKXtyZXR1cm4gUHQudG9CeXRlQXJyYXkoRm8ocikpfWEoSG4sXCJiYXNlNjRUXFxcbm9CeXRlc1wiKTtmdW5jdGlvbiBvdChyLGUsdCxuKXtsZXQgaTtmb3IoaT0wO2k8biYmIShpK3Q+PWUubGVuZ3RofHxpPj1yLmxlbmd0aCk7KytpKVxuZVtpK3RdPXJbaV07cmV0dXJuIGl9YShvdCxcImJsaXRCdWZmZXJcIik7ZnVuY3Rpb24gYWUocixlKXtyZXR1cm4gciBpbnN0YW5jZW9mIGV8fFxuciE9bnVsbCYmci5jb25zdHJ1Y3RvciE9bnVsbCYmci5jb25zdHJ1Y3Rvci5uYW1lIT1udWxsJiZyLmNvbnN0cnVjdG9yLm5hbWU9PT1lLm5hbWV9XG5hKGFlLFwiaXNJbnN0YW5jZVwiKTtmdW5jdGlvbiBPdChyKXtyZXR1cm4gciE9PXJ9YShPdCxcIm51bWJlcklzTmFOXCIpO3ZhciBPbz1mdW5jdGlvbigpe1xubGV0IHI9XCIwMTIzNDU2Nzg5YWJjZGVmXCIsZT1uZXcgQXJyYXkoMjU2KTtmb3IobGV0IHQ9MDt0PDE2OysrdCl7bGV0IG49dCoxNjtmb3IobGV0IGk9MDtpPFxuMTY7KytpKWVbbitpXT1yW3RdK3JbaV19cmV0dXJuIGV9KCk7ZnVuY3Rpb24gbWUocil7cmV0dXJuIHR5cGVvZiBCaWdJbnQ+XCJ1XCI/a286cn1cbmEobWUsXCJkZWZpbmVCaWdJbnRNZXRob2RcIik7ZnVuY3Rpb24ga28oKXt0aHJvdyBuZXcgRXJyb3IoXCJCaWdJbnQgbm90IHN1cHBvcnRlZFwiKX1cbmEoa28sXCJCdWZmZXJCaWdJbnROb3REZWZpbmVkXCIpfSk7dmFyIGIsUyx2LHcsZCxtLHA9SygoKT0+e1widXNlIHN0cmljdFwiO2I9Z2xvYmFsVGhpcyxTPWdsb2JhbFRoaXMuc2V0SW1tZWRpYXRlPz8ocj0+c2V0VGltZW91dChcbnIsMCkpLHY9Z2xvYmFsVGhpcy5jbGVhckltbWVkaWF0ZT8/KHI9PmNsZWFyVGltZW91dChyKSksdz1nbG9iYWxUaGlzLmNyeXB0bz8/e307XG53LnN1YnRsZT8/KHcuc3VidGxlPXt9KTtkPXR5cGVvZiBnbG9iYWxUaGlzLkJ1ZmZlcj09XCJmdW5jdGlvblwiJiZ0eXBlb2YgZ2xvYmFsVGhpcy5cbkJ1ZmZlci5hbGxvY1Vuc2FmZT09XCJmdW5jdGlvblwiP2dsb2JhbFRoaXMuQnVmZmVyOkduKCkuQnVmZmVyLG09Z2xvYmFsVGhpcy5wcm9jZXNzPz9cbnt9O20uZW52Pz8obS5lbnY9e30pO3RyeXttLm5leHRUaWNrKCgpPT57fSl9Y2F0Y2h7bGV0IGU9UHJvbWlzZS5yZXNvbHZlKCk7bS5uZXh0VGljaz1cbmUudGhlbi5iaW5kKGUpfX0pO3ZhciBnZT1JKChKYyxrdCk9PntcInVzZSBzdHJpY3RcIjtwKCk7dmFyIFJlPXR5cGVvZiBSZWZsZWN0PT1cIm9iamVjdFwiP1JlZmxlY3Q6bnVsbCxcbiRuPVJlJiZ0eXBlb2YgUmUuYXBwbHk9PVwiZnVuY3Rpb25cIj9SZS5hcHBseTphKGZ1bmN0aW9uKGUsdCxuKXtyZXR1cm4gRnVuY3Rpb24ucHJvdG90eXBlLlxuYXBwbHkuY2FsbChlLHQsbil9LFwiUmVmbGVjdEFwcGx5XCIpLGF0O1JlJiZ0eXBlb2YgUmUub3duS2V5cz09XCJmdW5jdGlvblwiP2F0PVJlLm93bktleXM6XG5PYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzP2F0PWEoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKFxuZSkuY29uY2F0KE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMoZSkpfSxcIlJlZmxlY3RPd25LZXlzXCIpOmF0PWEoZnVuY3Rpb24oZSl7cmV0dXJuIE9iamVjdC5cbmdldE93blByb3BlcnR5TmFtZXMoZSl9LFwiUmVmbGVjdE93bktleXNcIik7ZnVuY3Rpb24gVW8ocil7Y29uc29sZSYmY29uc29sZS53YXJuJiZcbmNvbnNvbGUud2FybihyKX1hKFVvLFwiUHJvY2Vzc0VtaXRXYXJuaW5nXCIpO3ZhciBWbj1OdW1iZXIuaXNOYU58fGEoZnVuY3Rpb24oZSl7cmV0dXJuIGUhPT1cbmV9LFwiTnVtYmVySXNOYU5cIik7ZnVuY3Rpb24gQigpe0IuaW5pdC5jYWxsKHRoaXMpfWEoQixcIkV2ZW50RW1pdHRlclwiKTtrdC5leHBvcnRzPVxuQjtrdC5leHBvcnRzLm9uY2U9V287Qi5FdmVudEVtaXR0ZXI9QjtCLnByb3RvdHlwZS5fZXZlbnRzPXZvaWQgMDtCLnByb3RvdHlwZS5fZXZlbnRzQ291bnQ9XG4wO0IucHJvdG90eXBlLl9tYXhMaXN0ZW5lcnM9dm9pZCAwO3ZhciBLbj0xMDtmdW5jdGlvbiB1dChyKXtpZih0eXBlb2YgciE9XCJmdW5jdGlcXFxub25cIil0aHJvdyBuZXcgVHlwZUVycm9yKCdUaGUgXCJsaXN0ZW5lclwiIGFyZ3VtZW50IG11c3QgYmUgb2YgdHlwZSBGdW5jdGlvbi4gUmVjZWlcXFxudmVkIHR5cGUgJyt0eXBlb2Ygcil9YSh1dCxcImNoZWNrTGlzdGVuZXJcIik7T2JqZWN0LmRlZmluZVByb3BlcnR5KEIsXCJkZWZhdWx0TWF4TGlcXFxuc3RlbmVyc1wiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiBLbn0sc2V0OmZ1bmN0aW9uKHIpe2lmKHR5cGVvZiByIT1cIlxcXG5udW1iZXJcInx8cjwwfHxWbihyKSl0aHJvdyBuZXcgUmFuZ2VFcnJvcignVGhlIHZhbHVlIG9mIFwiZGVmYXVsdE1heExpc3RlbmVyc1wiIGlzIFxcXG5vdXQgb2YgcmFuZ2UuIEl0IG11c3QgYmUgYSBub24tbmVnYXRpdmUgbnVtYmVyLiBSZWNlaXZlZCAnK3IrXCIuXCIpO0tuPXJ9fSk7Qi5pbml0PVxuZnVuY3Rpb24oKXsodGhpcy5fZXZlbnRzPT09dm9pZCAwfHx0aGlzLl9ldmVudHM9PT1PYmplY3QuZ2V0UHJvdG90eXBlT2YodGhpcykuX2V2ZW50cykmJlxuKHRoaXMuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHRoaXMuX2V2ZW50c0NvdW50PTApLHRoaXMuX21heExpc3RlbmVycz10aGlzLl9tYXhMaXN0ZW5lcnN8fFxudm9pZCAwfTtCLnByb3RvdHlwZS5zZXRNYXhMaXN0ZW5lcnM9YShmdW5jdGlvbihlKXtpZih0eXBlb2YgZSE9XCJudW1iZXJcInx8ZTwwfHxWbihcbmUpKXRocm93IG5ldyBSYW5nZUVycm9yKCdUaGUgdmFsdWUgb2YgXCJuXCIgaXMgb3V0IG9mIHJhbmdlLiBJdCBtdXN0IGJlIGEgbm9uLW5lZ2FcXFxudGl2ZSBudW1iZXIuIFJlY2VpdmVkICcrZStcIi5cIik7cmV0dXJuIHRoaXMuX21heExpc3RlbmVycz1lLHRoaXN9LFwic2V0TWF4TGlzdGVuZXJcXFxuc1wiKTtmdW5jdGlvbiB6bihyKXtyZXR1cm4gci5fbWF4TGlzdGVuZXJzPT09dm9pZCAwP0IuZGVmYXVsdE1heExpc3RlbmVyczpyLl9tYXhMaXN0ZW5lcnN9XG5hKHpuLFwiX2dldE1heExpc3RlbmVyc1wiKTtCLnByb3RvdHlwZS5nZXRNYXhMaXN0ZW5lcnM9YShmdW5jdGlvbigpe3JldHVybiB6bih0aGlzKX0sXG5cImdldE1heExpc3RlbmVyc1wiKTtCLnByb3RvdHlwZS5lbWl0PWEoZnVuY3Rpb24oZSl7Zm9yKHZhciB0PVtdLG49MTtuPGFyZ3VtZW50cy5sZW5ndGg7bisrKVxudC5wdXNoKGFyZ3VtZW50c1tuXSk7dmFyIGk9ZT09PVwiZXJyb3JcIixzPXRoaXMuX2V2ZW50cztpZihzIT09dm9pZCAwKWk9aSYmcy5lcnJvcj09PVxudm9pZCAwO2Vsc2UgaWYoIWkpcmV0dXJuITE7aWYoaSl7dmFyIG87aWYodC5sZW5ndGg+MCYmKG89dFswXSksbyBpbnN0YW5jZW9mIEVycm9yKVxudGhyb3cgbzt2YXIgdT1uZXcgRXJyb3IoXCJVbmhhbmRsZWQgZXJyb3IuXCIrKG8/XCIgKFwiK28ubWVzc2FnZStcIilcIjpcIlwiKSk7dGhyb3cgdS5jb250ZXh0PVxubyx1fXZhciBjPXNbZV07aWYoYz09PXZvaWQgMClyZXR1cm4hMTtpZih0eXBlb2YgYz09XCJmdW5jdGlvblwiKSRuKGMsdGhpcyx0KTtlbHNlIGZvcih2YXIgaD1jLlxubGVuZ3RoLGw9ZWkoYyxoKSxuPTA7bjxoOysrbikkbihsW25dLHRoaXMsdCk7cmV0dXJuITB9LFwiZW1pdFwiKTtmdW5jdGlvbiBZbihyLGUsdCxuKXtcbnZhciBpLHMsbztpZih1dCh0KSxzPXIuX2V2ZW50cyxzPT09dm9pZCAwPyhzPXIuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpLHIuX2V2ZW50c0NvdW50PVxuMCk6KHMubmV3TGlzdGVuZXIhPT12b2lkIDAmJihyLmVtaXQoXCJuZXdMaXN0ZW5lclwiLGUsdC5saXN0ZW5lcj90Lmxpc3RlbmVyOnQpLHM9ci5cbl9ldmVudHMpLG89c1tlXSksbz09PXZvaWQgMClvPXNbZV09dCwrK3IuX2V2ZW50c0NvdW50O2Vsc2UgaWYodHlwZW9mIG89PVwiZnVuY3Rpb1xcXG5uXCI/bz1zW2VdPW4/W3Qsb106W28sdF06bj9vLnVuc2hpZnQodCk6by5wdXNoKHQpLGk9em4ociksaT4wJiZvLmxlbmd0aD5pJiYhby53YXJuZWQpe1xuby53YXJuZWQ9ITA7dmFyIHU9bmV3IEVycm9yKFwiUG9zc2libGUgRXZlbnRFbWl0dGVyIG1lbW9yeSBsZWFrIGRldGVjdGVkLiBcIitvLmxlbmd0aCtcblwiIFwiK1N0cmluZyhlKStcIiBsaXN0ZW5lcnMgYWRkZWQuIFVzZSBlbWl0dGVyLnNldE1heExpc3RlbmVycygpIHRvIGluY3JlYXNlIGxpbWl0XCIpO1xudS5uYW1lPVwiTWF4TGlzdGVuZXJzRXhjZWVkZWRXYXJuaW5nXCIsdS5lbWl0dGVyPXIsdS50eXBlPWUsdS5jb3VudD1vLmxlbmd0aCxVbyh1KX1cbnJldHVybiByfWEoWW4sXCJfYWRkTGlzdGVuZXJcIik7Qi5wcm90b3R5cGUuYWRkTGlzdGVuZXI9YShmdW5jdGlvbihlLHQpe3JldHVybiBZbihcbnRoaXMsZSx0LCExKX0sXCJhZGRMaXN0ZW5lclwiKTtCLnByb3RvdHlwZS5vbj1CLnByb3RvdHlwZS5hZGRMaXN0ZW5lcjtCLnByb3RvdHlwZS5cbnByZXBlbmRMaXN0ZW5lcj1hKGZ1bmN0aW9uKGUsdCl7cmV0dXJuIFluKHRoaXMsZSx0LCEwKX0sXCJwcmVwZW5kTGlzdGVuZXJcIik7ZnVuY3Rpb24gcW8oKXtcbmlmKCF0aGlzLmZpcmVkKXJldHVybiB0aGlzLnRhcmdldC5yZW1vdmVMaXN0ZW5lcih0aGlzLnR5cGUsdGhpcy53cmFwRm4pLHRoaXMuZmlyZWQ9XG4hMCxhcmd1bWVudHMubGVuZ3RoPT09MD90aGlzLmxpc3RlbmVyLmNhbGwodGhpcy50YXJnZXQpOnRoaXMubGlzdGVuZXIuYXBwbHkodGhpcy5cbnRhcmdldCxhcmd1bWVudHMpfWEocW8sXCJvbmNlV3JhcHBlclwiKTtmdW5jdGlvbiBabihyLGUsdCl7dmFyIG49e2ZpcmVkOiExLHdyYXBGbjp2b2lkIDAsXG50YXJnZXQ6cix0eXBlOmUsbGlzdGVuZXI6dH0saT1xby5iaW5kKG4pO3JldHVybiBpLmxpc3RlbmVyPXQsbi53cmFwRm49aSxpfWEoWm4sXCJcXFxuX29uY2VXcmFwXCIpO0IucHJvdG90eXBlLm9uY2U9YShmdW5jdGlvbihlLHQpe3JldHVybiB1dCh0KSx0aGlzLm9uKGUsWm4odGhpcyxlLHQpKSxcbnRoaXN9LFwib25jZVwiKTtCLnByb3RvdHlwZS5wcmVwZW5kT25jZUxpc3RlbmVyPWEoZnVuY3Rpb24oZSx0KXtyZXR1cm4gdXQodCksdGhpcy5cbnByZXBlbmRMaXN0ZW5lcihlLFpuKHRoaXMsZSx0KSksdGhpc30sXCJwcmVwZW5kT25jZUxpc3RlbmVyXCIpO0IucHJvdG90eXBlLnJlbW92ZUxpc3RlbmVyPVxuYShmdW5jdGlvbihlLHQpe3ZhciBuLGkscyxvLHU7aWYodXQodCksaT10aGlzLl9ldmVudHMsaT09PXZvaWQgMClyZXR1cm4gdGhpcztpZihuPVxuaVtlXSxuPT09dm9pZCAwKXJldHVybiB0aGlzO2lmKG49PT10fHxuLmxpc3RlbmVyPT09dCktLXRoaXMuX2V2ZW50c0NvdW50PT09MD90aGlzLlxuX2V2ZW50cz1PYmplY3QuY3JlYXRlKG51bGwpOihkZWxldGUgaVtlXSxpLnJlbW92ZUxpc3RlbmVyJiZ0aGlzLmVtaXQoXCJyZW1vdmVMaXN0XFxcbmVuZXJcIixlLG4ubGlzdGVuZXJ8fHQpKTtlbHNlIGlmKHR5cGVvZiBuIT1cImZ1bmN0aW9uXCIpe2ZvcihzPS0xLG89bi5sZW5ndGgtMTtvPj0wO28tLSlcbmlmKG5bb109PT10fHxuW29dLmxpc3RlbmVyPT09dCl7dT1uW29dLmxpc3RlbmVyLHM9bzticmVha31pZihzPDApcmV0dXJuIHRoaXM7cz09PVxuMD9uLnNoaWZ0KCk6Tm8obixzKSxuLmxlbmd0aD09PTEmJihpW2VdPW5bMF0pLGkucmVtb3ZlTGlzdGVuZXIhPT12b2lkIDAmJnRoaXMuZW1pdChcblwicmVtb3ZlTGlzdGVuZXJcIixlLHV8fHQpfXJldHVybiB0aGlzfSxcInJlbW92ZUxpc3RlbmVyXCIpO0IucHJvdG90eXBlLm9mZj1CLnByb3RvdHlwZS5cbnJlbW92ZUxpc3RlbmVyO0IucHJvdG90eXBlLnJlbW92ZUFsbExpc3RlbmVycz1hKGZ1bmN0aW9uKGUpe3ZhciB0LG4saTtpZihuPXRoaXMuXG5fZXZlbnRzLG49PT12b2lkIDApcmV0dXJuIHRoaXM7aWYobi5yZW1vdmVMaXN0ZW5lcj09PXZvaWQgMClyZXR1cm4gYXJndW1lbnRzLmxlbmd0aD09PVxuMD8odGhpcy5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCksdGhpcy5fZXZlbnRzQ291bnQ9MCk6bltlXSE9PXZvaWQgMCYmKC0tdGhpcy5cbl9ldmVudHNDb3VudD09PTA/dGhpcy5fZXZlbnRzPU9iamVjdC5jcmVhdGUobnVsbCk6ZGVsZXRlIG5bZV0pLHRoaXM7aWYoYXJndW1lbnRzLlxubGVuZ3RoPT09MCl7dmFyIHM9T2JqZWN0LmtleXMobiksbztmb3IoaT0wO2k8cy5sZW5ndGg7KytpKW89c1tpXSxvIT09XCJyZW1vdmVMaXN0XFxcbmVuZXJcIiYmdGhpcy5yZW1vdmVBbGxMaXN0ZW5lcnMobyk7cmV0dXJuIHRoaXMucmVtb3ZlQWxsTGlzdGVuZXJzKFwicmVtb3ZlTGlzdGVuZXJcIiksXG50aGlzLl9ldmVudHM9T2JqZWN0LmNyZWF0ZShudWxsKSx0aGlzLl9ldmVudHNDb3VudD0wLHRoaXN9aWYodD1uW2VdLHR5cGVvZiB0PT1cImZcXFxudW5jdGlvblwiKXRoaXMucmVtb3ZlTGlzdGVuZXIoZSx0KTtlbHNlIGlmKHQhPT12b2lkIDApZm9yKGk9dC5sZW5ndGgtMTtpPj0wO2ktLSl0aGlzLlxucmVtb3ZlTGlzdGVuZXIoZSx0W2ldKTtyZXR1cm4gdGhpc30sXCJyZW1vdmVBbGxMaXN0ZW5lcnNcIik7ZnVuY3Rpb24gSm4ocixlLHQpe3ZhciBuPXIuXG5fZXZlbnRzO2lmKG49PT12b2lkIDApcmV0dXJuW107dmFyIGk9bltlXTtyZXR1cm4gaT09PXZvaWQgMD9bXTp0eXBlb2YgaT09XCJmdW5jdGlcXFxub25cIj90P1tpLmxpc3RlbmVyfHxpXTpbaV06dD9RbyhpKTplaShpLGkubGVuZ3RoKX1hKEpuLFwiX2xpc3RlbmVyc1wiKTtCLnByb3RvdHlwZS5cbmxpc3RlbmVycz1hKGZ1bmN0aW9uKGUpe3JldHVybiBKbih0aGlzLGUsITApfSxcImxpc3RlbmVyc1wiKTtCLnByb3RvdHlwZS5yYXdMaXN0ZW5lcnM9XG5hKGZ1bmN0aW9uKGUpe3JldHVybiBKbih0aGlzLGUsITEpfSxcInJhd0xpc3RlbmVyc1wiKTtCLmxpc3RlbmVyQ291bnQ9ZnVuY3Rpb24ocixlKXtcbnJldHVybiB0eXBlb2Ygci5saXN0ZW5lckNvdW50PT1cImZ1bmN0aW9uXCI/ci5saXN0ZW5lckNvdW50KGUpOlhuLmNhbGwocixlKX07Qi5wcm90b3R5cGUuXG5saXN0ZW5lckNvdW50PVhuO2Z1bmN0aW9uIFhuKHIpe3ZhciBlPXRoaXMuX2V2ZW50cztpZihlIT09dm9pZCAwKXt2YXIgdD1lW3JdO2lmKHR5cGVvZiB0PT1cblwiZnVuY3Rpb25cIilyZXR1cm4gMTtpZih0IT09dm9pZCAwKXJldHVybiB0Lmxlbmd0aH1yZXR1cm4gMH1hKFhuLFwibGlzdGVuZXJDb3VudFwiKTtcbkIucHJvdG90eXBlLmV2ZW50TmFtZXM9YShmdW5jdGlvbigpe3JldHVybiB0aGlzLl9ldmVudHNDb3VudD4wP2F0KHRoaXMuX2V2ZW50cyk6XG5bXX0sXCJldmVudE5hbWVzXCIpO2Z1bmN0aW9uIGVpKHIsZSl7Zm9yKHZhciB0PW5ldyBBcnJheShlKSxuPTA7bjxlOysrbil0W25dPXJbbl07XG5yZXR1cm4gdH1hKGVpLFwiYXJyYXlDbG9uZVwiKTtmdW5jdGlvbiBObyhyLGUpe2Zvcig7ZSsxPHIubGVuZ3RoO2UrKylyW2VdPXJbZSsxXTtyLlxucG9wKCl9YShObyxcInNwbGljZU9uZVwiKTtmdW5jdGlvbiBRbyhyKXtmb3IodmFyIGU9bmV3IEFycmF5KHIubGVuZ3RoKSx0PTA7dDxlLmxlbmd0aDsrK3QpXG5lW3RdPXJbdF0ubGlzdGVuZXJ8fHJbdF07cmV0dXJuIGV9YShRbyxcInVud3JhcExpc3RlbmVyc1wiKTtmdW5jdGlvbiBXbyhyLGUpe3JldHVybiBuZXcgUHJvbWlzZShcbmZ1bmN0aW9uKHQsbil7ZnVuY3Rpb24gaShvKXtyLnJlbW92ZUxpc3RlbmVyKGUscyksbihvKX1hKGksXCJlcnJvckxpc3RlbmVyXCIpO2Z1bmN0aW9uIHMoKXtcbnR5cGVvZiByLnJlbW92ZUxpc3RlbmVyPT1cImZ1bmN0aW9uXCImJnIucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLGkpLHQoW10uc2xpY2UuY2FsbChcbmFyZ3VtZW50cykpfWEocyxcInJlc29sdmVyXCIpLHRpKHIsZSxzLHtvbmNlOiEwfSksZSE9PVwiZXJyb3JcIiYmam8ocixpLHtvbmNlOiEwfSl9KX1cbmEoV28sXCJvbmNlXCIpO2Z1bmN0aW9uIGpvKHIsZSx0KXt0eXBlb2Ygci5vbj09XCJmdW5jdGlvblwiJiZ0aShyLFwiZXJyb3JcIixlLHQpfWEoam8sXG5cImFkZEVycm9ySGFuZGxlcklmRXZlbnRFbWl0dGVyXCIpO2Z1bmN0aW9uIHRpKHIsZSx0LG4pe2lmKHR5cGVvZiByLm9uPT1cImZ1bmN0aW9uXCIpXG5uLm9uY2U/ci5vbmNlKGUsdCk6ci5vbihlLHQpO2Vsc2UgaWYodHlwZW9mIHIuYWRkRXZlbnRMaXN0ZW5lcj09XCJmdW5jdGlvblwiKXIuYWRkRXZlbnRMaXN0ZW5lcihcbmUsYShmdW5jdGlvbiBpKHMpe24ub25jZSYmci5yZW1vdmVFdmVudExpc3RlbmVyKGUsaSksdChzKX0sXCJ3cmFwTGlzdGVuZXJcIikpO2Vsc2VcbnRocm93IG5ldyBUeXBlRXJyb3IoJ1RoZSBcImVtaXR0ZXJcIiBhcmd1bWVudCBtdXN0IGJlIG9mIHR5cGUgRXZlbnRFbWl0dGVyLiBSZWNlaXZcXFxuZWQgdHlwZSAnK3R5cGVvZiByKX1hKHRpLFwiZXZlbnRUYXJnZXRBZ25vc3RpY0FkZExpc3RlbmVyXCIpfSk7dmFyIEhlPXt9O1goSGUse2RlZmF1bHQ6KCk9PkhvfSk7dmFyIEhvLEdlPUsoKCk9PntcInVzZSBzdHJpY3RcIjtwKCk7SG89e319KTtmdW5jdGlvbiAkZShyKXtsZXQgZT0xNzc5MDMzNzAzLHQ9MzE0NDEzNDI3NyxuPTEwMTM5MDQyNDIsaT0yNzczNDgwNzYyLHM9MTM1OTg5MzExOSxcbm89MjYwMDgyMjkyNCx1PTUyODczNDYzNSxjPTE1NDE0NTkyMjUsaD0wLGw9MCx5PVsxMTE2MzUyNDA4LDE4OTk0NDc0NDEsMzA0OTMyMzQ3MSxcbjM5MjEwMDk1NzMsOTYxOTg3MTYzLDE1MDg5NzA5OTMsMjQ1MzYzNTc0OCwyODcwNzYzMjIxLDM2MjQzODEwODAsMzEwNTk4NDAxLDYwNzIyNTI3OCxcbjE0MjY4ODE5ODcsMTkyNTA3ODM4OCwyMTYyMDc4MjA2LDI2MTQ4ODgxMDMsMzI0ODIyMjU4MCwzODM1MzkwNDAxLDQwMjIyMjQ3NzQsMjY0MzQ3MDc4LFxuNjA0ODA3NjI4LDc3MDI1NTk4MywxMjQ5MTUwMTIyLDE1NTUwODE2OTIsMTk5NjA2NDk4NiwyNTU0MjIwODgyLDI4MjE4MzQzNDksMjk1Mjk5NjgwOCxcbjMyMTAzMTM2NzEsMzMzNjU3MTg5MSwzNTg0NTI4NzExLDExMzkyNjk5MywzMzgyNDE4OTUsNjY2MzA3MjA1LDc3MzUyOTkxMiwxMjk0NzU3MzcyLFxuMTM5NjE4MjI5MSwxNjk1MTgzNzAwLDE5ODY2NjEwNTEsMjE3NzAyNjM1MCwyNDU2OTU2MDM3LDI3MzA0ODU5MjEsMjgyMDMwMjQxMSwzMjU5NzMwODAwLFxuMzM0NTc2NDc3MSwzNTE2MDY1ODE3LDM2MDAzNTI4MDQsNDA5NDU3MTkwOSwyNzU0MjMzNDQsNDMwMjI3NzM0LDUwNjk0ODYxNiw2NTkwNjA1NTYsXG44ODM5OTc4NzcsOTU4MTM5NTcxLDEzMjI4MjIyMTgsMTUzNzAwMjA2MywxNzQ3ODczNzc5LDE5NTU1NjIyMjIsMjAyNDEwNDgxNSwyMjI3NzMwNDUyLFxuMjM2MTg1MjQyNCwyNDI4NDM2NDc0LDI3NTY3MzQxODcsMzIwNDAzMTQ3OSwzMzI5MzI1Mjk4XSxFPWEoKEEsZyk9PkE+Pj5nfEE8PDMyLWcsXG5cInJyb3RcIiksXz1uZXcgVWludDMyQXJyYXkoNjQpLFA9bmV3IFVpbnQ4QXJyYXkoNjQpLE49YSgoKT0+e2ZvcihsZXQgTD0wLEc9MDtMPDE2O0wrKyxcbkcrPTQpX1tMXT1QW0ddPDwyNHxQW0crMV08PDE2fFBbRysyXTw8OHxQW0crM107Zm9yKGxldCBMPTE2O0w8NjQ7TCsrKXtsZXQgRz1FKF9bTC1cbjE1XSw3KV5FKF9bTC0xNV0sMTgpXl9bTC0xNV0+Pj4zLGNlPUUoX1tMLTJdLDE3KV5FKF9bTC0yXSwxOSleX1tMLTJdPj4+MTA7X1tMXT1fW0wtXG4xNl0rRytfW0wtN10rY2V8MH1sZXQgQT1lLGc9dCxEPW4sSD1pLFE9cyxXPW8sdWU9dSxkZT1jO2ZvcihsZXQgTD0wO0w8NjQ7TCsrKXtsZXQgRz1FKFxuUSw2KV5FKFEsMTEpXkUoUSwyNSksY2U9USZXXn5RJnVlLHllPWRlK0crY2UreVtMXStfW0xdfDAseGU9RShBLDIpXkUoQSwxMyleRShBLDIyKSxcbmhlPUEmZ15BJkReZyZELGllPXhlK2hlfDA7ZGU9dWUsdWU9VyxXPVEsUT1IK3llfDAsSD1ELEQ9ZyxnPUEsQT15ZStpZXwwfWU9ZStBfDAsXG50PXQrZ3wwLG49bitEfDAsaT1pK0h8MCxzPXMrUXwwLG89bytXfDAsdT11K3VlfDAsYz1jK2RlfDAsbD0wfSxcInByb2Nlc3NcIiksSj1hKEE9PntcbnR5cGVvZiBBPT1cInN0cmluZ1wiJiYoQT1uZXcgVGV4dEVuY29kZXIoKS5lbmNvZGUoQSkpO2ZvcihsZXQgZz0wO2c8QS5sZW5ndGg7ZysrKVBbbCsrXT1cbkFbZ10sbD09PTY0JiZOKCk7aCs9QS5sZW5ndGh9LFwiYWRkXCIpLHBlPWEoKCk9PntpZihQW2wrK109MTI4LGw9PTY0JiZOKCksbCs4PjY0KXtcbmZvcig7bDw2NDspUFtsKytdPTA7TigpfWZvcig7bDw1ODspUFtsKytdPTA7bGV0IEE9aCo4O1BbbCsrXT1BLzEwOTk1MTE2Mjc3NzYmMjU1LFxuUFtsKytdPUEvNDI5NDk2NzI5NiYyNTUsUFtsKytdPUE+Pj4yNCxQW2wrK109QT4+PjE2JjI1NSxQW2wrK109QT4+PjgmMjU1LFBbbCsrXT1cbkEmMjU1LE4oKTtsZXQgZz1uZXcgVWludDhBcnJheSgzMik7cmV0dXJuIGdbMF09ZT4+PjI0LGdbMV09ZT4+PjE2JjI1NSxnWzJdPWU+Pj44JlxuMjU1LGdbM109ZSYyNTUsZ1s0XT10Pj4+MjQsZ1s1XT10Pj4+MTYmMjU1LGdbNl09dD4+PjgmMjU1LGdbN109dCYyNTUsZ1s4XT1uPj4+MjQsXG5nWzldPW4+Pj4xNiYyNTUsZ1sxMF09bj4+PjgmMjU1LGdbMTFdPW4mMjU1LGdbMTJdPWk+Pj4yNCxnWzEzXT1pPj4+MTYmMjU1LGdbMTRdPVxuaT4+PjgmMjU1LGdbMTVdPWkmMjU1LGdbMTZdPXM+Pj4yNCxnWzE3XT1zPj4+MTYmMjU1LGdbMThdPXM+Pj44JjI1NSxnWzE5XT1zJjI1NSxcbmdbMjBdPW8+Pj4yNCxnWzIxXT1vPj4+MTYmMjU1LGdbMjJdPW8+Pj44JjI1NSxnWzIzXT1vJjI1NSxnWzI0XT11Pj4+MjQsZ1syNV09dT4+PlxuMTYmMjU1LGdbMjZdPXU+Pj44JjI1NSxnWzI3XT11JjI1NSxnWzI4XT1jPj4+MjQsZ1syOV09Yz4+PjE2JjI1NSxnWzMwXT1jPj4+OCYyNTUsXG5nWzMxXT1jJjI1NSxnfSxcImRpZ2VzdFwiKTtyZXR1cm4gcj09PXZvaWQgMD97YWRkOkosZGlnZXN0OnBlfTooSihyKSxwZSgpKX12YXIgcmk9SyhcbigpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO2EoJGUsXCJzaGEyNTZcIil9KTt2YXIgTyxLZSxuaT1LKCgpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO089Y2xhc3MgT3tjb25zdHJ1Y3Rvcigpe1QodGhpcyxcIl9kYXRhTGVuZ3RoXCIsXG4wKTtUKHRoaXMsXCJfYnVmZmVyTGVuZ3RoXCIsMCk7VCh0aGlzLFwiX3N0YXRlXCIsbmV3IEludDMyQXJyYXkoNCkpO1QodGhpcyxcIl9idWZmZXJcIixcbm5ldyBBcnJheUJ1ZmZlcig2OCkpO1QodGhpcyxcIl9idWZmZXI4XCIpO1QodGhpcyxcIl9idWZmZXIzMlwiKTt0aGlzLl9idWZmZXI4PW5ldyBVaW50OEFycmF5KFxudGhpcy5fYnVmZmVyLDAsNjgpLHRoaXMuX2J1ZmZlcjMyPW5ldyBVaW50MzJBcnJheSh0aGlzLl9idWZmZXIsMCwxNyksdGhpcy5zdGFydCgpfXN0YXRpYyBoYXNoQnl0ZUFycmF5KGUsdD0hMSl7XG5yZXR1cm4gdGhpcy5vbmVQYXNzSGFzaGVyLnN0YXJ0KCkuYXBwZW5kQnl0ZUFycmF5KGUpLmVuZCh0KX1zdGF0aWMgaGFzaFN0cihlLHQ9ITEpe1xucmV0dXJuIHRoaXMub25lUGFzc0hhc2hlci5zdGFydCgpLmFwcGVuZFN0cihlKS5lbmQodCl9c3RhdGljIGhhc2hBc2NpaVN0cihlLHQ9ITEpe1xucmV0dXJuIHRoaXMub25lUGFzc0hhc2hlci5zdGFydCgpLmFwcGVuZEFzY2lpU3RyKGUpLmVuZCh0KX1zdGF0aWMgX2hleChlKXtsZXQgdD1PLlxuaGV4Q2hhcnMsbj1PLmhleE91dCxpLHMsbyx1O2Zvcih1PTA7dTw0O3UrPTEpZm9yKHM9dSo4LGk9ZVt1XSxvPTA7bzw4O28rPTIpbltzKzErXG5vXT10LmNoYXJBdChpJjE1KSxpPj4+PTQsbltzKzArb109dC5jaGFyQXQoaSYxNSksaT4+Pj00O3JldHVybiBuLmpvaW4oXCJcIil9c3RhdGljIF9tZDVjeWNsZShlLHQpe1xubGV0IG49ZVswXSxpPWVbMV0scz1lWzJdLG89ZVszXTtuKz0oaSZzfH5pJm8pK3RbMF0tNjgwODc2OTM2fDAsbj0objw8N3xuPj4+MjUpK2l8XG4wLG8rPShuJml8fm4mcykrdFsxXS0zODk1NjQ1ODZ8MCxvPShvPDwxMnxvPj4+MjApK258MCxzKz0obyZufH5vJmkpK3RbMl0rNjA2MTA1ODE5fFxuMCxzPShzPDwxN3xzPj4+MTUpK298MCxpKz0ocyZvfH5zJm4pK3RbM10tMTA0NDUyNTMzMHwwLGk9KGk8PDIyfGk+Pj4xMCkrc3wwLG4rPShpJlxuc3x+aSZvKSt0WzRdLTE3NjQxODg5N3wwLG49KG48PDd8bj4+PjI1KStpfDAsbys9KG4maXx+biZzKSt0WzVdKzEyMDAwODA0MjZ8MCxvPShvPDxcbjEyfG8+Pj4yMCkrbnwwLHMrPShvJm58fm8maSkrdFs2XS0xNDczMjMxMzQxfDAscz0oczw8MTd8cz4+PjE1KStvfDAsaSs9KHMmb3x+cyZuKStcbnRbN10tNDU3MDU5ODN8MCxpPShpPDwyMnxpPj4+MTApK3N8MCxuKz0oaSZzfH5pJm8pK3RbOF0rMTc3MDAzNTQxNnwwLG49KG48PDd8bj4+PlxuMjUpK2l8MCxvKz0obiZpfH5uJnMpK3RbOV0tMTk1ODQxNDQxN3wwLG89KG88PDEyfG8+Pj4yMCkrbnwwLHMrPShvJm58fm8maSkrdFsxMF0tXG40MjA2M3wwLHM9KHM8PDE3fHM+Pj4xNSkrb3wwLGkrPShzJm98fnMmbikrdFsxMV0tMTk5MDQwNDE2MnwwLGk9KGk8PDIyfGk+Pj4xMCkrc3xcbjAsbis9KGkmc3x+aSZvKSt0WzEyXSsxODA0NjAzNjgyfDAsbj0objw8N3xuPj4+MjUpK2l8MCxvKz0obiZpfH5uJnMpK3RbMTNdLTQwMzQxMTAxfFxuMCxvPShvPDwxMnxvPj4+MjApK258MCxzKz0obyZufH5vJmkpK3RbMTRdLTE1MDIwMDIyOTB8MCxzPShzPDwxN3xzPj4+MTUpK298MCxpKz1cbihzJm98fnMmbikrdFsxNV0rMTIzNjUzNTMyOXwwLGk9KGk8PDIyfGk+Pj4xMCkrc3wwLG4rPShpJm98cyZ+bykrdFsxXS0xNjU3OTY1MTB8XG4wLG49KG48PDV8bj4+PjI3KStpfDAsbys9KG4mc3xpJn5zKSt0WzZdLTEwNjk1MDE2MzJ8MCxvPShvPDw5fG8+Pj4yMykrbnwwLHMrPShvJlxuaXxuJn5pKSt0WzExXSs2NDM3MTc3MTN8MCxzPShzPDwxNHxzPj4+MTgpK298MCxpKz0ocyZufG8mfm4pK3RbMF0tMzczODk3MzAyfDAsaT1cbihpPDwyMHxpPj4+MTIpK3N8MCxuKz0oaSZvfHMmfm8pK3RbNV0tNzAxNTU4NjkxfDAsbj0objw8NXxuPj4+MjcpK2l8MCxvKz0obiZzfGkmXG5+cykrdFsxMF0rMzgwMTYwODN8MCxvPShvPDw5fG8+Pj4yMykrbnwwLHMrPShvJml8biZ+aSkrdFsxNV0tNjYwNDc4MzM1fDAscz0oczw8MTR8XG5zPj4+MTgpK298MCxpKz0ocyZufG8mfm4pK3RbNF0tNDA1NTM3ODQ4fDAsaT0oaTw8MjB8aT4+PjEyKStzfDAsbis9KGkmb3xzJn5vKSt0WzldK1xuNTY4NDQ2NDM4fDAsbj0objw8NXxuPj4+MjcpK2l8MCxvKz0obiZzfGkmfnMpK3RbMTRdLTEwMTk4MDM2OTB8MCxvPShvPDw5fG8+Pj4yMykrXG5ufDAscys9KG8maXxuJn5pKSt0WzNdLTE4NzM2Mzk2MXwwLHM9KHM8PDE0fHM+Pj4xOCkrb3wwLGkrPShzJm58byZ+bikrdFs4XSsxMTYzNTMxNTAxfFxuMCxpPShpPDwyMHxpPj4+MTIpK3N8MCxuKz0oaSZvfHMmfm8pK3RbMTNdLTE0NDQ2ODE0Njd8MCxuPShuPDw1fG4+Pj4yNykraXwwLG8rPShuJlxuc3xpJn5zKSt0WzJdLTUxNDAzNzg0fDAsbz0obzw8OXxvPj4+MjMpK258MCxzKz0obyZpfG4mfmkpK3RbN10rMTczNTMyODQ3M3wwLHM9KHM8PFxuMTR8cz4+PjE4KStvfDAsaSs9KHMmbnxvJn5uKSt0WzEyXS0xOTI2NjA3NzM0fDAsaT0oaTw8MjB8aT4+PjEyKStzfDAsbis9KGlec15vKStcbnRbNV0tMzc4NTU4fDAsbj0objw8NHxuPj4+MjgpK2l8MCxvKz0obl5pXnMpK3RbOF0tMjAyMjU3NDQ2M3wwLG89KG88PDExfG8+Pj4yMSkrXG5ufDAscys9KG9ebl5pKSt0WzExXSsxODM5MDMwNTYyfDAscz0oczw8MTZ8cz4+PjE2KStvfDAsaSs9KHNeb15uKSt0WzE0XS0zNTMwOTU1NnxcbjAsaT0oaTw8MjN8aT4+PjkpK3N8MCxuKz0oaV5zXm8pK3RbMV0tMTUzMDk5MjA2MHwwLG49KG48PDR8bj4+PjI4KStpfDAsbys9KG5eaV5zKStcbnRbNF0rMTI3Mjg5MzM1M3wwLG89KG88PDExfG8+Pj4yMSkrbnwwLHMrPShvXm5eaSkrdFs3XS0xNTU0OTc2MzJ8MCxzPShzPDwxNnxzPj4+XG4xNikrb3wwLGkrPShzXm9ebikrdFsxMF0tMTA5NDczMDY0MHwwLGk9KGk8PDIzfGk+Pj45KStzfDAsbis9KGlec15vKSt0WzEzXSs2ODEyNzkxNzR8XG4wLG49KG48PDR8bj4+PjI4KStpfDAsbys9KG5eaV5zKSt0WzBdLTM1ODUzNzIyMnwwLG89KG88PDExfG8+Pj4yMSkrbnwwLHMrPShvXm5eaSkrXG50WzNdLTcyMjUyMTk3OXwwLHM9KHM8PDE2fHM+Pj4xNikrb3wwLGkrPShzXm9ebikrdFs2XSs3NjAyOTE4OXwwLGk9KGk8PDIzfGk+Pj45KStcbnN8MCxuKz0oaV5zXm8pK3RbOV0tNjQwMzY0NDg3fDAsbj0objw8NHxuPj4+MjgpK2l8MCxvKz0obl5pXnMpK3RbMTJdLTQyMTgxNTgzNXwwLFxubz0obzw8MTF8bz4+PjIxKStufDAscys9KG9ebl5pKSt0WzE1XSs1MzA3NDI1MjB8MCxzPShzPDwxNnxzPj4+MTYpK298MCxpKz0oc15vXm4pK1xudFsyXS05OTUzMzg2NTF8MCxpPShpPDwyM3xpPj4+OSkrc3wwLG4rPShzXihpfH5vKSkrdFswXS0xOTg2MzA4NDR8MCxuPShuPDw2fG4+Pj5cbjI2KStpfDAsbys9KGleKG58fnMpKSt0WzddKzExMjY4OTE0MTV8MCxvPShvPDwxMHxvPj4+MjIpK258MCxzKz0obl4ob3x+aSkpK3RbMTRdLVxuMTQxNjM1NDkwNXwwLHM9KHM8PDE1fHM+Pj4xNykrb3wwLGkrPShvXihzfH5uKSkrdFs1XS01NzQzNDA1NXwwLGk9KGk8PDIxfGk+Pj4xMSkrXG5zfDAsbis9KHNeKGl8fm8pKSt0WzEyXSsxNzAwNDg1NTcxfDAsbj0objw8NnxuPj4+MjYpK2l8MCxvKz0oaV4obnx+cykpK3RbM10tMTg5NDk4NjYwNnxcbjAsbz0obzw8MTB8bz4+PjIyKStufDAscys9KG5eKG98fmkpKSt0WzEwXS0xMDUxNTIzfDAscz0oczw8MTV8cz4+PjE3KStvfDAsaSs9KG9eXG4oc3x+bikpK3RbMV0tMjA1NDkyMjc5OXwwLGk9KGk8PDIxfGk+Pj4xMSkrc3wwLG4rPShzXihpfH5vKSkrdFs4XSsxODczMzEzMzU5fDAsbj1cbihuPDw2fG4+Pj4yNikraXwwLG8rPShpXihufH5zKSkrdFsxNV0tMzA2MTE3NDR8MCxvPShvPDwxMHxvPj4+MjIpK258MCxzKz0obl4ob3x+aSkpK1xudFs2XS0xNTYwMTk4MzgwfDAscz0oczw8MTV8cz4+PjE3KStvfDAsaSs9KG9eKHN8fm4pKSt0WzEzXSsxMzA5MTUxNjQ5fDAsaT0oaTw8MjF8XG5pPj4+MTEpK3N8MCxuKz0oc14oaXx+bykpK3RbNF0tMTQ1NTIzMDcwfDAsbj0objw8NnxuPj4+MjYpK2l8MCxvKz0oaV4obnx+cykpK3RbMTFdLVxuMTEyMDIxMDM3OXwwLG89KG88PDEwfG8+Pj4yMikrbnwwLHMrPShuXihvfH5pKSkrdFsyXSs3MTg3ODcyNTl8MCxzPShzPDwxNXxzPj4+MTcpK1xub3wwLGkrPShvXihzfH5uKSkrdFs5XS0zNDM0ODU1NTF8MCxpPShpPDwyMXxpPj4+MTEpK3N8MCxlWzBdPW4rZVswXXwwLGVbMV09aStlWzFdfFxuMCxlWzJdPXMrZVsyXXwwLGVbM109bytlWzNdfDB9c3RhcnQoKXtyZXR1cm4gdGhpcy5fZGF0YUxlbmd0aD0wLHRoaXMuX2J1ZmZlckxlbmd0aD1cbjAsdGhpcy5fc3RhdGUuc2V0KE8uc3RhdGVJZGVudGl0eSksdGhpc31hcHBlbmRTdHIoZSl7bGV0IHQ9dGhpcy5fYnVmZmVyOCxuPXRoaXMuXG5fYnVmZmVyMzIsaT10aGlzLl9idWZmZXJMZW5ndGgscyxvO2ZvcihvPTA7bzxlLmxlbmd0aDtvKz0xKXtpZihzPWUuY2hhckNvZGVBdChvKSxcbnM8MTI4KXRbaSsrXT1zO2Vsc2UgaWYoczwyMDQ4KXRbaSsrXT0ocz4+PjYpKzE5Mix0W2krK109cyY2M3wxMjg7ZWxzZSBpZihzPDU1Mjk2fHxcbnM+NTYzMTkpdFtpKytdPShzPj4+MTIpKzIyNCx0W2krK109cz4+PjYmNjN8MTI4LHRbaSsrXT1zJjYzfDEyODtlbHNle2lmKHM9KHMtNTUyOTYpKlxuMTAyNCsoZS5jaGFyQ29kZUF0KCsrbyktNTYzMjApKzY1NTM2LHM+MTExNDExMSl0aHJvdyBuZXcgRXJyb3IoXCJVbmljb2RlIHN0YW5kYXJkXFxcbiBzdXBwb3J0cyBjb2RlIHBvaW50cyB1cCB0byBVKzEwRkZGRlwiKTt0W2krK109KHM+Pj4xOCkrMjQwLHRbaSsrXT1zPj4+MTImNjN8MTI4LFxudFtpKytdPXM+Pj42JjYzfDEyOCx0W2krK109cyY2M3wxMjh9aT49NjQmJih0aGlzLl9kYXRhTGVuZ3RoKz02NCxPLl9tZDVjeWNsZSh0aGlzLlxuX3N0YXRlLG4pLGktPTY0LG5bMF09blsxNl0pfXJldHVybiB0aGlzLl9idWZmZXJMZW5ndGg9aSx0aGlzfWFwcGVuZEFzY2lpU3RyKGUpe2xldCB0PXRoaXMuXG5fYnVmZmVyOCxuPXRoaXMuX2J1ZmZlcjMyLGk9dGhpcy5fYnVmZmVyTGVuZ3RoLHMsbz0wO2Zvcig7Oyl7Zm9yKHM9TWF0aC5taW4oZS5sZW5ndGgtXG5vLDY0LWkpO3MtLTspdFtpKytdPWUuY2hhckNvZGVBdChvKyspO2lmKGk8NjQpYnJlYWs7dGhpcy5fZGF0YUxlbmd0aCs9NjQsTy5fbWQ1Y3ljbGUoXG50aGlzLl9zdGF0ZSxuKSxpPTB9cmV0dXJuIHRoaXMuX2J1ZmZlckxlbmd0aD1pLHRoaXN9YXBwZW5kQnl0ZUFycmF5KGUpe2xldCB0PXRoaXMuXG5fYnVmZmVyOCxuPXRoaXMuX2J1ZmZlcjMyLGk9dGhpcy5fYnVmZmVyTGVuZ3RoLHMsbz0wO2Zvcig7Oyl7Zm9yKHM9TWF0aC5taW4oZS5sZW5ndGgtXG5vLDY0LWkpO3MtLTspdFtpKytdPWVbbysrXTtpZihpPDY0KWJyZWFrO3RoaXMuX2RhdGFMZW5ndGgrPTY0LE8uX21kNWN5Y2xlKHRoaXMuX3N0YXRlLFxubiksaT0wfXJldHVybiB0aGlzLl9idWZmZXJMZW5ndGg9aSx0aGlzfWdldFN0YXRlKCl7bGV0IGU9dGhpcy5fc3RhdGU7cmV0dXJue2J1ZmZlcjpTdHJpbmcuXG5mcm9tQ2hhckNvZGUuYXBwbHkobnVsbCxBcnJheS5mcm9tKHRoaXMuX2J1ZmZlcjgpKSxidWZsZW46dGhpcy5fYnVmZmVyTGVuZ3RoLGxlbmd0aDp0aGlzLlxuX2RhdGFMZW5ndGgsc3RhdGU6W2VbMF0sZVsxXSxlWzJdLGVbM11dfX1zZXRTdGF0ZShlKXtsZXQgdD1lLmJ1ZmZlcixuPWUuc3RhdGUsaT10aGlzLlxuX3N0YXRlLHM7Zm9yKHRoaXMuX2RhdGFMZW5ndGg9ZS5sZW5ndGgsdGhpcy5fYnVmZmVyTGVuZ3RoPWUuYnVmbGVuLGlbMF09blswXSxpWzFdPVxublsxXSxpWzJdPW5bMl0saVszXT1uWzNdLHM9MDtzPHQubGVuZ3RoO3MrPTEpdGhpcy5fYnVmZmVyOFtzXT10LmNoYXJDb2RlQXQocyl9ZW5kKGU9ITEpe1xubGV0IHQ9dGhpcy5fYnVmZmVyTGVuZ3RoLG49dGhpcy5fYnVmZmVyOCxpPXRoaXMuX2J1ZmZlcjMyLHM9KHQ+PjIpKzE7dGhpcy5fZGF0YUxlbmd0aCs9XG50O2xldCBvPXRoaXMuX2RhdGFMZW5ndGgqODtpZihuW3RdPTEyOCxuW3QrMV09blt0KzJdPW5bdCszXT0wLGkuc2V0KE8uYnVmZmVyMzJJZGVudGl0eS5cbnN1YmFycmF5KHMpLHMpLHQ+NTUmJihPLl9tZDVjeWNsZSh0aGlzLl9zdGF0ZSxpKSxpLnNldChPLmJ1ZmZlcjMySWRlbnRpdHkpKSxvPD00Mjk0OTY3Mjk1KVxuaVsxNF09bztlbHNle2xldCB1PW8udG9TdHJpbmcoMTYpLm1hdGNoKC8oLio/KSguezAsOH0pJC8pO2lmKHU9PT1udWxsKXJldHVybjtsZXQgYz1wYXJzZUludChcbnVbMl0sMTYpLGg9cGFyc2VJbnQodVsxXSwxNil8fDA7aVsxNF09YyxpWzE1XT1ofXJldHVybiBPLl9tZDVjeWNsZSh0aGlzLl9zdGF0ZSxpKSxcbmU/dGhpcy5fc3RhdGU6Ty5faGV4KHRoaXMuX3N0YXRlKX19O2EoTyxcIk1kNVwiKSxUKE8sXCJzdGF0ZUlkZW50aXR5XCIsbmV3IEludDMyQXJyYXkoXG5bMTczMjU4NDE5MywtMjcxNzMzODc5LC0xNzMyNTg0MTk0LDI3MTczMzg3OF0pKSxUKE8sXCJidWZmZXIzMklkZW50aXR5XCIsbmV3IEludDMyQXJyYXkoXG5bMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMCwwLDAsMF0pKSxUKE8sXCJoZXhDaGFyc1wiLFwiMDEyMzQ1Njc4OWFiY2RlZlwiKSxUKE8sXCJoZXhPXFxcbnV0XCIsW10pLFQoTyxcIm9uZVBhc3NIYXNoZXJcIixuZXcgTyk7S2U9T30pO3ZhciBVdD17fTtYKFV0LHtjcmVhdGVIYXNoOigpPT4kbyxjcmVhdGVIbWFjOigpPT5LbyxyYW5kb21CeXRlczooKT0+R299KTtmdW5jdGlvbiBHbyhyKXtcbnJldHVybiB3LmdldFJhbmRvbVZhbHVlcyhkLmFsbG9jKHIpKX1mdW5jdGlvbiAkbyhyKXtpZihyPT09XCJzaGEyNTZcIilyZXR1cm57dXBkYXRlOmZ1bmN0aW9uKGUpe1xucmV0dXJue2RpZ2VzdDpmdW5jdGlvbigpe3JldHVybiBkLmZyb20oJGUoZSkpfX19fTtpZihyPT09XCJtZDVcIilyZXR1cm57dXBkYXRlOmZ1bmN0aW9uKGUpe1xucmV0dXJue2RpZ2VzdDpmdW5jdGlvbigpe3JldHVybiB0eXBlb2YgZT09XCJzdHJpbmdcIj9LZS5oYXNoU3RyKGUpOktlLmhhc2hCeXRlQXJyYXkoXG5lKX19fX07dGhyb3cgbmV3IEVycm9yKGBIYXNoIHR5cGUgJyR7cn0nIG5vdCBzdXBwb3J0ZWRgKX1mdW5jdGlvbiBLbyhyLGUpe2lmKHIhPT1cblwic2hhMjU2XCIpdGhyb3cgbmV3IEVycm9yKGBPbmx5IHNoYTI1NiBpcyBzdXBwb3J0ZWQgKHJlcXVlc3RlZDogJyR7cn0nKWApO3JldHVybntcbnVwZGF0ZTpmdW5jdGlvbih0KXtyZXR1cm57ZGlnZXN0OmZ1bmN0aW9uKCl7dHlwZW9mIGU9PVwic3RyaW5nXCImJihlPW5ldyBUZXh0RW5jb2RlcigpLlxuZW5jb2RlKGUpKSx0eXBlb2YgdD09XCJzdHJpbmdcIiYmKHQ9bmV3IFRleHRFbmNvZGVyKCkuZW5jb2RlKHQpKTtsZXQgbj1lLmxlbmd0aDtpZihuPlxuNjQpZT0kZShlKTtlbHNlIGlmKG48NjQpe2xldCBjPW5ldyBVaW50OEFycmF5KDY0KTtjLnNldChlKSxlPWN9bGV0IGk9bmV3IFVpbnQ4QXJyYXkoXG42NCkscz1uZXcgVWludDhBcnJheSg2NCk7Zm9yKGxldCBjPTA7Yzw2NDtjKyspaVtjXT01NF5lW2NdLHNbY109OTJeZVtjXTtsZXQgbz1uZXcgVWludDhBcnJheShcbnQubGVuZ3RoKzY0KTtvLnNldChpLDApLG8uc2V0KHQsNjQpO2xldCB1PW5ldyBVaW50OEFycmF5KDk2KTtyZXR1cm4gdS5zZXQocywwKSx1Llxuc2V0KCRlKG8pLDY0KSxkLmZyb20oJGUodSkpfX19fX12YXIgcXQ9SygoKT0+e1widXNlIHN0cmljdFwiO3AoKTtyaSgpO25pKCk7YShHbyxcInJcXFxuYW5kb21CeXRlc1wiKTthKCRvLFwiY3JlYXRlSGFzaFwiKTthKEtvLFwiY3JlYXRlSG1hY1wiKX0pO3ZhciBRdD1JKGlpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO2lpLnBhcnNlPWZ1bmN0aW9uKHIsZSl7cmV0dXJuIG5ldyBOdChyLGUpLnBhcnNlKCl9O1xudmFyIGN0PWNsYXNzIGN0e2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5zb3VyY2U9ZSx0aGlzLnRyYW5zZm9ybT10fHxWbyx0aGlzLnBvc2l0aW9uPVxuMCx0aGlzLmVudHJpZXM9W10sdGhpcy5yZWNvcmRlZD1bXSx0aGlzLmRpbWVuc2lvbj0wfWlzRW9mKCl7cmV0dXJuIHRoaXMucG9zaXRpb24+PVxudGhpcy5zb3VyY2UubGVuZ3RofW5leHRDaGFyYWN0ZXIoKXt2YXIgZT10aGlzLnNvdXJjZVt0aGlzLnBvc2l0aW9uKytdO3JldHVybiBlPT09XG5cIlxcXFxcIj97dmFsdWU6dGhpcy5zb3VyY2VbdGhpcy5wb3NpdGlvbisrXSxlc2NhcGVkOiEwfTp7dmFsdWU6ZSxlc2NhcGVkOiExfX1yZWNvcmQoZSl7XG50aGlzLnJlY29yZGVkLnB1c2goZSl9bmV3RW50cnkoZSl7dmFyIHQ7KHRoaXMucmVjb3JkZWQubGVuZ3RoPjB8fGUpJiYodD10aGlzLnJlY29yZGVkLlxuam9pbihcIlwiKSx0PT09XCJOVUxMXCImJiFlJiYodD1udWxsKSx0IT09bnVsbCYmKHQ9dGhpcy50cmFuc2Zvcm0odCkpLHRoaXMuZW50cmllcy5wdXNoKFxudCksdGhpcy5yZWNvcmRlZD1bXSl9Y29uc3VtZURpbWVuc2lvbnMoKXtpZih0aGlzLnNvdXJjZVswXT09PVwiW1wiKWZvcig7IXRoaXMuaXNFb2YoKTspe1xudmFyIGU9dGhpcy5uZXh0Q2hhcmFjdGVyKCk7aWYoZS52YWx1ZT09PVwiPVwiKWJyZWFrfX1wYXJzZShlKXt2YXIgdCxuLGk7Zm9yKHRoaXMuY29uc3VtZURpbWVuc2lvbnMoKTshdGhpcy5cbmlzRW9mKCk7KWlmKHQ9dGhpcy5uZXh0Q2hhcmFjdGVyKCksdC52YWx1ZT09PVwie1wiJiYhaSl0aGlzLmRpbWVuc2lvbisrLHRoaXMuZGltZW5zaW9uPlxuMSYmKG49bmV3IGN0KHRoaXMuc291cmNlLnN1YnN0cih0aGlzLnBvc2l0aW9uLTEpLHRoaXMudHJhbnNmb3JtKSx0aGlzLmVudHJpZXMucHVzaChcbm4ucGFyc2UoITApKSx0aGlzLnBvc2l0aW9uKz1uLnBvc2l0aW9uLTIpO2Vsc2UgaWYodC52YWx1ZT09PVwifVwiJiYhaSl7aWYodGhpcy5kaW1lbnNpb24tLSxcbiF0aGlzLmRpbWVuc2lvbiYmKHRoaXMubmV3RW50cnkoKSxlKSlyZXR1cm4gdGhpcy5lbnRyaWVzfWVsc2UgdC52YWx1ZT09PSdcIicmJiF0LlxuZXNjYXBlZD8oaSYmdGhpcy5uZXdFbnRyeSghMCksaT0haSk6dC52YWx1ZT09PVwiLFwiJiYhaT90aGlzLm5ld0VudHJ5KCk6dGhpcy5yZWNvcmQoXG50LnZhbHVlKTtpZih0aGlzLmRpbWVuc2lvbiE9PTApdGhyb3cgbmV3IEVycm9yKFwiYXJyYXkgZGltZW5zaW9uIG5vdCBiYWxhbmNlZFwiKTtyZXR1cm4gdGhpcy5cbmVudHJpZXN9fTthKGN0LFwiQXJyYXlQYXJzZXJcIik7dmFyIE50PWN0O2Z1bmN0aW9uIFZvKHIpe3JldHVybiByfWEoVm8sXCJpZGVudGl0eVwiKX0pO3ZhciBXdD1JKCh5aCxzaSk9PntwKCk7dmFyIHpvPVF0KCk7c2kuZXhwb3J0cz17Y3JlYXRlOmZ1bmN0aW9uKHIsZSl7cmV0dXJue3BhcnNlOmZ1bmN0aW9uKCl7XG5yZXR1cm4gem8ucGFyc2UocixlKX19fX19KTt2YXIgdWk9SSgoZ2gsYWkpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3ZhciBZbz0vKFxcZHsxLH0pLShcXGR7Mn0pLShcXGR7Mn0pIChcXGR7Mn0pOihcXGR7Mn0pOihcXGR7Mn0pKFxcLlxcZHsxLH0pPy4qPyggQkMpPyQvLFxuWm89L14oXFxkezEsfSktKFxcZHsyfSktKFxcZHsyfSkoIEJDKT8kLyxKbz0vKFtaKy1dKShcXGR7Mn0pPzo/KFxcZHsyfSk/Oj8oXFxkezJ9KT8vLFhvPS9eLT9pbmZpbml0eSQvO1xuYWkuZXhwb3J0cz1hKGZ1bmN0aW9uKGUpe2lmKFhvLnRlc3QoZSkpcmV0dXJuIE51bWJlcihlLnJlcGxhY2UoXCJpXCIsXCJJXCIpKTt2YXIgdD1Zby5cbmV4ZWMoZSk7aWYoIXQpcmV0dXJuIGVhKGUpfHxudWxsO3ZhciBuPSEhdFs4XSxpPXBhcnNlSW50KHRbMV0sMTApO24mJihpPW9pKGkpKTt2YXIgcz1wYXJzZUludChcbnRbMl0sMTApLTEsbz10WzNdLHU9cGFyc2VJbnQodFs0XSwxMCksYz1wYXJzZUludCh0WzVdLDEwKSxoPXBhcnNlSW50KHRbNl0sMTApLGw9dFs3XTtcbmw9bD8xZTMqcGFyc2VGbG9hdChsKTowO3ZhciB5LEU9dGEoZSk7cmV0dXJuIEUhPW51bGw/KHk9bmV3IERhdGUoRGF0ZS5VVEMoaSxzLG8sXG51LGMsaCxsKSksanQoaSkmJnkuc2V0VVRDRnVsbFllYXIoaSksRSE9PTAmJnkuc2V0VGltZSh5LmdldFRpbWUoKS1FKSk6KHk9bmV3IERhdGUoXG5pLHMsbyx1LGMsaCxsKSxqdChpKSYmeS5zZXRGdWxsWWVhcihpKSkseX0sXCJwYXJzZURhdGVcIik7ZnVuY3Rpb24gZWEocil7dmFyIGU9Wm8uXG5leGVjKHIpO2lmKGUpe3ZhciB0PXBhcnNlSW50KGVbMV0sMTApLG49ISFlWzRdO24mJih0PW9pKHQpKTt2YXIgaT1wYXJzZUludChlWzJdLFxuMTApLTEscz1lWzNdLG89bmV3IERhdGUodCxpLHMpO3JldHVybiBqdCh0KSYmby5zZXRGdWxsWWVhcih0KSxvfX1hKGVhLFwiZ2V0RGF0ZVwiKTtcbmZ1bmN0aW9uIHRhKHIpe2lmKHIuZW5kc1dpdGgoXCIrMDBcIikpcmV0dXJuIDA7dmFyIGU9Sm8uZXhlYyhyLnNwbGl0KFwiIFwiKVsxXSk7aWYoZSl7XG52YXIgdD1lWzFdO2lmKHQ9PT1cIlpcIilyZXR1cm4gMDt2YXIgbj10PT09XCItXCI/LTE6MSxpPXBhcnNlSW50KGVbMl0sMTApKjM2MDArcGFyc2VJbnQoXG5lWzNdfHwwLDEwKSo2MCtwYXJzZUludChlWzRdfHwwLDEwKTtyZXR1cm4gaSpuKjFlM319YSh0YSxcInRpbWVab25lT2Zmc2V0XCIpO2Z1bmN0aW9uIG9pKHIpe1xucmV0dXJuLShyLTEpfWEob2ksXCJiY1llYXJUb05lZ2F0aXZlWWVhclwiKTtmdW5jdGlvbiBqdChyKXtyZXR1cm4gcj49MCYmcjwxMDB9YShqdCxcblwiaXMwVG85OVwiKX0pO3ZhciBoaT1JKChTaCxjaSk9PntwKCk7Y2kuZXhwb3J0cz1uYTt2YXIgcmE9T2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eTtmdW5jdGlvbiBuYShyKXtcbmZvcih2YXIgZT0xO2U8YXJndW1lbnRzLmxlbmd0aDtlKyspe3ZhciB0PWFyZ3VtZW50c1tlXTtmb3IodmFyIG4gaW4gdClyYS5jYWxsKHQsXG5uKSYmKHJbbl09dFtuXSl9cmV0dXJuIHJ9YShuYSxcImV4dGVuZFwiKX0pO3ZhciBwaT1JKCh2aCxmaSk9PntcInVzZSBzdHJpY3RcIjtwKCk7dmFyIGlhPWhpKCk7ZmkuZXhwb3J0cz1GZTtmdW5jdGlvbiBGZShyKXtpZighKHRoaXMgaW5zdGFuY2VvZlxuRmUpKXJldHVybiBuZXcgRmUocik7aWEodGhpcyxtYShyKSl9YShGZSxcIlBvc3RncmVzSW50ZXJ2YWxcIik7dmFyIHNhPVtcInNlY29uZHNcIixcIlxcXG5taW51dGVzXCIsXCJob3Vyc1wiLFwiZGF5c1wiLFwibW9udGhzXCIsXCJ5ZWFyc1wiXTtGZS5wcm90b3R5cGUudG9Qb3N0Z3Jlcz1mdW5jdGlvbigpe3ZhciByPXNhLlxuZmlsdGVyKHRoaXMuaGFzT3duUHJvcGVydHksdGhpcyk7cmV0dXJuIHRoaXMubWlsbGlzZWNvbmRzJiZyLmluZGV4T2YoXCJzZWNvbmRzXCIpPFxuMCYmci5wdXNoKFwic2Vjb25kc1wiKSxyLmxlbmd0aD09PTA/XCIwXCI6ci5tYXAoZnVuY3Rpb24oZSl7dmFyIHQ9dGhpc1tlXXx8MDtyZXR1cm4gZT09PVxuXCJzZWNvbmRzXCImJnRoaXMubWlsbGlzZWNvbmRzJiYodD0odCt0aGlzLm1pbGxpc2Vjb25kcy8xZTMpLnRvRml4ZWQoNikucmVwbGFjZSgvXFwuPzArJC8sXG5cIlwiKSksdCtcIiBcIitlfSx0aGlzKS5qb2luKFwiIFwiKX07dmFyIG9hPXt5ZWFyczpcIllcIixtb250aHM6XCJNXCIsZGF5czpcIkRcIixob3VyczpcIkhcIixtaW51dGVzOlwiXFxcbk1cIixzZWNvbmRzOlwiU1wifSxhYT1bXCJ5ZWFyc1wiLFwibW9udGhzXCIsXCJkYXlzXCJdLHVhPVtcImhvdXJzXCIsXCJtaW51dGVzXCIsXCJzZWNvbmRzXCJdO0ZlLlxucHJvdG90eXBlLnRvSVNPU3RyaW5nPUZlLnByb3RvdHlwZS50b0lTTz1mdW5jdGlvbigpe3ZhciByPWFhLm1hcCh0LHRoaXMpLmpvaW4oXCJcIiksXG5lPXVhLm1hcCh0LHRoaXMpLmpvaW4oXCJcIik7cmV0dXJuXCJQXCIrcitcIlRcIitlO2Z1bmN0aW9uIHQobil7dmFyIGk9dGhpc1tuXXx8MDtyZXR1cm4gbj09PVxuXCJzZWNvbmRzXCImJnRoaXMubWlsbGlzZWNvbmRzJiYoaT0oaSt0aGlzLm1pbGxpc2Vjb25kcy8xZTMpLnRvRml4ZWQoNikucmVwbGFjZSgvMCskLyxcblwiXCIpKSxpK29hW25dfX07dmFyIEh0PVwiKFsrLV0/XFxcXGQrKVwiLGNhPUh0K1wiXFxcXHMreWVhcnM/XCIsaGE9SHQrXCJcXFxccyttb25zP1wiLGxhPUh0K1wiXFxcblxcXFxzK2RheXM/XCIsZmE9XCIoWystXSk/KFtcXFxcZF0qKTooXFxcXGRcXFxcZCk6KFxcXFxkXFxcXGQpXFxcXC4/KFxcXFxkezEsNn0pP1wiLHBhPW5ldyBSZWdFeHAoW1xuY2EsaGEsbGEsZmFdLm1hcChmdW5jdGlvbihyKXtyZXR1cm5cIihcIityK1wiKT9cIn0pLmpvaW4oXCJcXFxccypcIikpLGxpPXt5ZWFyczoyLG1vbnRoczo0LFxuZGF5czo2LGhvdXJzOjksbWludXRlczoxMCxzZWNvbmRzOjExLG1pbGxpc2Vjb25kczoxMn0sZGE9W1wiaG91cnNcIixcIm1pbnV0ZXNcIixcInNlY1xcXG5vbmRzXCIsXCJtaWxsaXNlY29uZHNcIl07ZnVuY3Rpb24geWEocil7dmFyIGU9citcIjAwMDAwMFwiLnNsaWNlKHIubGVuZ3RoKTtyZXR1cm4gcGFyc2VJbnQoXG5lLDEwKS8xZTN9YSh5YSxcInBhcnNlTWlsbGlzZWNvbmRzXCIpO2Z1bmN0aW9uIG1hKHIpe2lmKCFyKXJldHVybnt9O3ZhciBlPXBhLmV4ZWMoXG5yKSx0PWVbOF09PT1cIi1cIjtyZXR1cm4gT2JqZWN0LmtleXMobGkpLnJlZHVjZShmdW5jdGlvbihuLGkpe3ZhciBzPWxpW2ldLG89ZVtzXTtyZXR1cm4hb3x8XG4obz1pPT09XCJtaWxsaXNlY29uZHNcIj95YShvKTpwYXJzZUludChvLDEwKSwhbyl8fCh0JiZ+ZGEuaW5kZXhPZihpKSYmKG8qPS0xKSxuW2ldPVxubyksbn0se30pfWEobWEsXCJwYXJzZVwiKX0pO3ZhciB5aT1JKChDaCxkaSk9PntcInVzZSBzdHJpY3RcIjtwKCk7ZGkuZXhwb3J0cz1hKGZ1bmN0aW9uKGUpe2lmKC9eXFxcXHgvLnRlc3QoZSkpcmV0dXJuIG5ldyBkKFxuZS5zdWJzdHIoMiksXCJoZXhcIik7Zm9yKHZhciB0PVwiXCIsbj0wO248ZS5sZW5ndGg7KWlmKGVbbl0hPT1cIlxcXFxcIil0Kz1lW25dLCsrbjtlbHNlIGlmKC9bMC03XXszfS8uXG50ZXN0KGUuc3Vic3RyKG4rMSwzKSkpdCs9U3RyaW5nLmZyb21DaGFyQ29kZShwYXJzZUludChlLnN1YnN0cihuKzEsMyksOCkpLG4rPTQ7ZWxzZXtcbmZvcih2YXIgaT0xO24raTxlLmxlbmd0aCYmZVtuK2ldPT09XCJcXFxcXCI7KWkrKztmb3IodmFyIHM9MDtzPE1hdGguZmxvb3IoaS8yKTsrK3MpdCs9XG5cIlxcXFxcIjtuKz1NYXRoLmZsb29yKGkvMikqMn1yZXR1cm4gbmV3IGQodCxcImJpbmFyeVwiKX0sXCJwYXJzZUJ5dGVhXCIpfSk7dmFyIEVpPUkoKFBoLHhpKT0+e3AoKTt2YXIgVmU9UXQoKSx6ZT1XdCgpLGh0PXVpKCksZ2k9cGkoKSx3aT15aSgpO2Z1bmN0aW9uIGx0KHIpe1xucmV0dXJuIGEoZnVuY3Rpb24odCl7cmV0dXJuIHQ9PT1udWxsP3Q6cih0KX0sXCJudWxsQWxsb3dlZFwiKX1hKGx0LFwiYWxsb3dOdWxsXCIpO2Z1bmN0aW9uIGJpKHIpe1xucmV0dXJuIHI9PT1udWxsP3I6cj09PVwiVFJVRVwifHxyPT09XCJ0XCJ8fHI9PT1cInRydWVcInx8cj09PVwieVwifHxyPT09XCJ5ZXNcInx8cj09PVwib25cInx8XG5yPT09XCIxXCJ9YShiaSxcInBhcnNlQm9vbFwiKTtmdW5jdGlvbiBnYShyKXtyZXR1cm4gcj9WZS5wYXJzZShyLGJpKTpudWxsfWEoZ2EsXCJwYXJzXFxcbmVCb29sQXJyYXlcIik7ZnVuY3Rpb24gd2Eocil7cmV0dXJuIHBhcnNlSW50KHIsMTApfWEod2EsXCJwYXJzZUJhc2VUZW5JbnRcIik7ZnVuY3Rpb24gR3Qocil7XG5yZXR1cm4gcj9WZS5wYXJzZShyLGx0KHdhKSk6bnVsbH1hKEd0LFwicGFyc2VJbnRlZ2VyQXJyYXlcIik7ZnVuY3Rpb24gYmEocil7cmV0dXJuIHI/XG5WZS5wYXJzZShyLGx0KGZ1bmN0aW9uKGUpe3JldHVybiBTaShlKS50cmltKCl9KSk6bnVsbH1hKGJhLFwicGFyc2VCaWdJbnRlZ2VyQXJyYXlcIik7XG52YXIgU2E9YShmdW5jdGlvbihyKXtpZighcilyZXR1cm4gbnVsbDt2YXIgZT16ZS5jcmVhdGUocixmdW5jdGlvbih0KXtyZXR1cm4gdCE9PVxubnVsbCYmKHQ9enQodCkpLHR9KTtyZXR1cm4gZS5wYXJzZSgpfSxcInBhcnNlUG9pbnRBcnJheVwiKSwkdD1hKGZ1bmN0aW9uKHIpe2lmKCFyKVxucmV0dXJuIG51bGw7dmFyIGU9emUuY3JlYXRlKHIsZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1udWxsJiYodD1wYXJzZUZsb2F0KHQpKSx0fSk7XG5yZXR1cm4gZS5wYXJzZSgpfSxcInBhcnNlRmxvYXRBcnJheVwiKSx0ZT1hKGZ1bmN0aW9uKHIpe2lmKCFyKXJldHVybiBudWxsO3ZhciBlPXplLlxuY3JlYXRlKHIpO3JldHVybiBlLnBhcnNlKCl9LFwicGFyc2VTdHJpbmdBcnJheVwiKSxLdD1hKGZ1bmN0aW9uKHIpe2lmKCFyKXJldHVybiBudWxsO1xudmFyIGU9emUuY3JlYXRlKHIsZnVuY3Rpb24odCl7cmV0dXJuIHQhPT1udWxsJiYodD1odCh0KSksdH0pO3JldHVybiBlLnBhcnNlKCl9LFwiXFxcbnBhcnNlRGF0ZUFycmF5XCIpLHhhPWEoZnVuY3Rpb24ocil7aWYoIXIpcmV0dXJuIG51bGw7dmFyIGU9emUuY3JlYXRlKHIsZnVuY3Rpb24odCl7XG5yZXR1cm4gdCE9PW51bGwmJih0PWdpKHQpKSx0fSk7cmV0dXJuIGUucGFyc2UoKX0sXCJwYXJzZUludGVydmFsQXJyYXlcIiksRWE9YShmdW5jdGlvbihyKXtcbnJldHVybiByP1ZlLnBhcnNlKHIsbHQod2kpKTpudWxsfSxcInBhcnNlQnl0ZUFBcnJheVwiKSxWdD1hKGZ1bmN0aW9uKHIpe3JldHVybiBwYXJzZUludChcbnIsMTApfSxcInBhcnNlSW50ZWdlclwiKSxTaT1hKGZ1bmN0aW9uKHIpe3ZhciBlPVN0cmluZyhyKTtyZXR1cm4vXlxcZCskLy50ZXN0KGUpP2U6XG5yfSxcInBhcnNlQmlnSW50ZWdlclwiKSxtaT1hKGZ1bmN0aW9uKHIpe3JldHVybiByP1ZlLnBhcnNlKHIsbHQoSlNPTi5wYXJzZSkpOm51bGx9LFxuXCJwYXJzZUpzb25BcnJheVwiKSx6dD1hKGZ1bmN0aW9uKHIpe3JldHVybiByWzBdIT09XCIoXCI/bnVsbDoocj1yLnN1YnN0cmluZygxLHIubGVuZ3RoLVxuMSkuc3BsaXQoXCIsXCIpLHt4OnBhcnNlRmxvYXQoclswXSkseTpwYXJzZUZsb2F0KHJbMV0pfSl9LFwicGFyc2VQb2ludFwiKSx2YT1hKGZ1bmN0aW9uKHIpe1xuaWYoclswXSE9PVwiPFwiJiZyWzFdIT09XCIoXCIpcmV0dXJuIG51bGw7Zm9yKHZhciBlPVwiKFwiLHQ9XCJcIixuPSExLGk9MjtpPHIubGVuZ3RoLTE7aSsrKXtcbmlmKG58fChlKz1yW2ldKSxyW2ldPT09XCIpXCIpe249ITA7Y29udGludWV9ZWxzZSBpZighbiljb250aW51ZTtyW2ldIT09XCIsXCImJih0Kz1yW2ldKX1cbnZhciBzPXp0KGUpO3JldHVybiBzLnJhZGl1cz1wYXJzZUZsb2F0KHQpLHN9LFwicGFyc2VDaXJjbGVcIiksX2E9YShmdW5jdGlvbihyKXtyKDIwLFxuU2kpLHIoMjEsVnQpLHIoMjMsVnQpLHIoMjYsVnQpLHIoNzAwLHBhcnNlRmxvYXQpLHIoNzAxLHBhcnNlRmxvYXQpLHIoMTYsYmkpLHIoMTA4Mixcbmh0KSxyKDExMTQsaHQpLHIoMTE4NCxodCkscig2MDAsenQpLHIoNjUxLHRlKSxyKDcxOCx2YSkscigxZTMsZ2EpLHIoMTAwMSxFYSkscigxMDA1LFxuR3QpLHIoMTAwNyxHdCkscigxMDI4LEd0KSxyKDEwMTYsYmEpLHIoMTAxNyxTYSkscigxMDIxLCR0KSxyKDEwMjIsJHQpLHIoMTIzMSwkdCksXG5yKDEwMTQsdGUpLHIoMTAxNSx0ZSkscigxMDA4LHRlKSxyKDEwMDksdGUpLHIoMTA0MCx0ZSkscigxMDQxLHRlKSxyKDExMTUsS3QpLHIoMTE4Mixcbkt0KSxyKDExODUsS3QpLHIoMTE4NixnaSkscigxMTg3LHhhKSxyKDE3LHdpKSxyKDExNCxKU09OLnBhcnNlLmJpbmQoSlNPTikpLHIoMzgwMixcbkpTT04ucGFyc2UuYmluZChKU09OKSkscigxOTksbWkpLHIoMzgwNyxtaSkscigzOTA3LHRlKSxyKDI5NTEsdGUpLHIoNzkxLHRlKSxyKDExODMsXG50ZSkscigxMjcwLHRlKX0sXCJpbml0XCIpO3hpLmV4cG9ydHM9e2luaXQ6X2F9fSk7dmFyIF9pPUkoKFJoLHZpKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXIgWT0xZTY7ZnVuY3Rpb24gQWEocil7dmFyIGU9ci5yZWFkSW50MzJCRShcbjApLHQ9ci5yZWFkVUludDMyQkUoNCksbj1cIlwiO2U8MCYmKGU9fmUrKHQ9PT0wKSx0PX50KzE+Pj4wLG49XCItXCIpO3ZhciBpPVwiXCIscyxvLHUsXG5jLGgsbDt7aWYocz1lJVksZT1lL1k+Pj4wLG89NDI5NDk2NzI5NipzK3QsdD1vL1k+Pj4wLHU9XCJcIisoby1ZKnQpLHQ9PT0wJiZlPT09MClyZXR1cm4gbitcbnUraTtmb3IoYz1cIlwiLGg9Ni11Lmxlbmd0aCxsPTA7bDxoO2wrKyljKz1cIjBcIjtpPWMrdStpfXtpZihzPWUlWSxlPWUvWT4+PjAsbz00Mjk0OTY3Mjk2Klxucyt0LHQ9by9ZPj4+MCx1PVwiXCIrKG8tWSp0KSx0PT09MCYmZT09PTApcmV0dXJuIG4rdStpO2ZvcihjPVwiXCIsaD02LXUubGVuZ3RoLGw9MDtsPFxuaDtsKyspYys9XCIwXCI7aT1jK3UraX17aWYocz1lJVksZT1lL1k+Pj4wLG89NDI5NDk2NzI5NipzK3QsdD1vL1k+Pj4wLHU9XCJcIisoby1ZKnQpLFxudD09PTAmJmU9PT0wKXJldHVybiBuK3UraTtmb3IoYz1cIlwiLGg9Ni11Lmxlbmd0aCxsPTA7bDxoO2wrKyljKz1cIjBcIjtpPWMrdStpfXJldHVybiBzPVxuZSVZLG89NDI5NDk2NzI5NipzK3QsdT1cIlwiK28lWSxuK3UraX1hKEFhLFwicmVhZEludDhcIik7dmkuZXhwb3J0cz1BYX0pO3ZhciBQaT1JKChEaCxUaSk9PntwKCk7dmFyIENhPV9pKCksUj1hKGZ1bmN0aW9uKHIsZSx0LG4saSl7dD10fHwwLG49bnx8ITEsaT1pfHxmdW5jdGlvbihfLFAsTil7XG5yZXR1cm4gXypNYXRoLnBvdygyLE4pK1B9O3ZhciBzPXQ+PjMsbz1hKGZ1bmN0aW9uKF8pe3JldHVybiBuP35fJjI1NTpffSxcImludlwiKSx1PTI1NSxcbmM9OC10JTg7ZTxjJiYodT0yNTU8PDgtZSYyNTUsYz1lKSx0JiYodT11Pj50JTgpO3ZhciBoPTA7dCU4K2U+PTgmJihoPWkoMCxvKHJbc10pJlxudSxjKSk7Zm9yKHZhciBsPWUrdD4+Myx5PXMrMTt5PGw7eSsrKWg9aShoLG8oclt5XSksOCk7dmFyIEU9KGUrdCklODtyZXR1cm4gRT4wJiZcbihoPWkoaCxvKHJbbF0pPj44LUUsRSkpLGh9LFwicGFyc2VCaXRzXCIpLElpPWEoZnVuY3Rpb24ocixlLHQpe3ZhciBuPU1hdGgucG93KDIsdC1cbjEpLTEsaT1SKHIsMSkscz1SKHIsdCwxKTtpZihzPT09MClyZXR1cm4gMDt2YXIgbz0xLHU9YShmdW5jdGlvbihoLGwseSl7aD09PTAmJihoPVxuMSk7Zm9yKHZhciBFPTE7RTw9eTtFKyspby89MiwobCYxPDx5LUUpPjAmJihoKz1vKTtyZXR1cm4gaH0sXCJwYXJzZVByZWNpc2lvbkJpdHNcIiksXG5jPVIocixlLHQrMSwhMSx1KTtyZXR1cm4gcz09TWF0aC5wb3coMix0KzEpLTE/Yz09PTA/aT09PTA/MS8wOi0xLzA6TmFOOihpPT09MD8xOlxuLTEpKk1hdGgucG93KDIscy1uKSpjfSxcInBhcnNlRmxvYXRGcm9tQml0c1wiKSxJYT1hKGZ1bmN0aW9uKHIpe3JldHVybiBSKHIsMSk9PTE/LTEqXG4oUihyLDE1LDEsITApKzEpOlIociwxNSwxKX0sXCJwYXJzZUludDE2XCIpLEFpPWEoZnVuY3Rpb24ocil7cmV0dXJuIFIociwxKT09MT8tMSooUihcbnIsMzEsMSwhMCkrMSk6UihyLDMxLDEpfSxcInBhcnNlSW50MzJcIiksVGE9YShmdW5jdGlvbihyKXtyZXR1cm4gSWkociwyMyw4KX0sXCJwYXJzXFxcbmVGbG9hdDMyXCIpLFBhPWEoZnVuY3Rpb24ocil7cmV0dXJuIElpKHIsNTIsMTEpfSxcInBhcnNlRmxvYXQ2NFwiKSxCYT1hKGZ1bmN0aW9uKHIpe1xudmFyIGU9UihyLDE2LDMyKTtpZihlPT00OTE1MilyZXR1cm4gTmFOO2Zvcih2YXIgdD1NYXRoLnBvdygxZTQsUihyLDE2LDE2KSksbj0wLGk9W10sXG5zPVIociwxNiksbz0wO288cztvKyspbis9UihyLDE2LDY0KzE2Km8pKnQsdC89MWU0O3ZhciB1PU1hdGgucG93KDEwLFIociwxNiw0OCkpO1xucmV0dXJuKGU9PT0wPzE6LTEpKk1hdGgucm91bmQobip1KS91fSxcInBhcnNlTnVtZXJpY1wiKSxDaT1hKGZ1bmN0aW9uKHIsZSl7dmFyIHQ9UihcbmUsMSksbj1SKGUsNjMsMSksaT1uZXcgRGF0ZSgodD09PTA/MTotMSkqbi8xZTMrOTQ2Njg0OGU1KTtyZXR1cm4gcnx8aS5zZXRUaW1lKGkuXG5nZXRUaW1lKCkraS5nZXRUaW1lem9uZU9mZnNldCgpKjZlNCksaS51c2VjPW4lMWUzLGkuZ2V0TWljcm9TZWNvbmRzPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuXG51c2VjfSxpLnNldE1pY3JvU2Vjb25kcz1mdW5jdGlvbihzKXt0aGlzLnVzZWM9c30saS5nZXRVVENNaWNyb1NlY29uZHM9ZnVuY3Rpb24oKXtcbnJldHVybiB0aGlzLnVzZWN9LGl9LFwicGFyc2VEYXRlXCIpLFllPWEoZnVuY3Rpb24ocil7Zm9yKHZhciBlPVIociwzMiksdD1SKHIsMzIsMzIpLFxubj1SKHIsMzIsNjQpLGk9OTYscz1bXSxvPTA7bzxlO28rKylzW29dPVIociwzMixpKSxpKz0zMixpKz0zMjt2YXIgdT1hKGZ1bmN0aW9uKGgpe1xudmFyIGw9UihyLDMyLGkpO2lmKGkrPTMyLGw9PTQyOTQ5NjcyOTUpcmV0dXJuIG51bGw7dmFyIHk7aWYoaD09MjN8fGg9PTIwKXJldHVybiB5PVxuUihyLGwqOCxpKSxpKz1sKjgseTtpZihoPT0yNSlyZXR1cm4geT1yLnRvU3RyaW5nKHRoaXMuZW5jb2RpbmcsaT4+MywoaSs9bDw8Myk+PjMpLFxueTtjb25zb2xlLmxvZyhcIkVSUk9SOiBFbGVtZW50VHlwZSBub3QgaW1wbGVtZW50ZWQ6IFwiK2gpfSxcInBhcnNlRWxlbWVudFwiKSxjPWEoZnVuY3Rpb24oaCxsKXtcbnZhciB5PVtdLEU7aWYoaC5sZW5ndGg+MSl7dmFyIF89aC5zaGlmdCgpO2ZvcihFPTA7RTxfO0UrKyl5W0VdPWMoaCxsKTtoLnVuc2hpZnQoXG5fKX1lbHNlIGZvcihFPTA7RTxoWzBdO0UrKyl5W0VdPXUobCk7cmV0dXJuIHl9LFwicGFyc2VcIik7cmV0dXJuIGMocyxuKX0sXCJwYXJzZUFyclxcXG5heVwiKSxMYT1hKGZ1bmN0aW9uKHIpe3JldHVybiByLnRvU3RyaW5nKFwidXRmOFwiKX0sXCJwYXJzZVRleHRcIiksUmE9YShmdW5jdGlvbihyKXtyZXR1cm4gcj09PVxubnVsbD9udWxsOlIociw4KT4wfSxcInBhcnNlQm9vbFwiKSxGYT1hKGZ1bmN0aW9uKHIpe3IoMjAsQ2EpLHIoMjEsSWEpLHIoMjMsQWkpLHIoMjYsXG5BaSkscigxNzAwLEJhKSxyKDcwMCxUYSkscig3MDEsUGEpLHIoMTYsUmEpLHIoMTExNCxDaS5iaW5kKG51bGwsITEpKSxyKDExODQsQ2kuYmluZChcbm51bGwsITApKSxyKDFlMyxZZSkscigxMDA3LFllKSxyKDEwMTYsWWUpLHIoMTAwOCxZZSkscigxMDA5LFllKSxyKDI1LExhKX0sXCJpbml0XCIpO1xuVGkuZXhwb3J0cz17aW5pdDpGYX19KTt2YXIgTGk9SSgoVWgsQmkpPT57cCgpO0JpLmV4cG9ydHM9e0JPT0w6MTYsQllURUE6MTcsQ0hBUjoxOCxJTlQ4OjIwLElOVDI6MjEsSU5UNDoyMyxcblJFR1BST0M6MjQsVEVYVDoyNSxPSUQ6MjYsVElEOjI3LFhJRDoyOCxDSUQ6MjksSlNPTjoxMTQsWE1MOjE0MixQR19OT0RFX1RSRUU6MTk0LFxuU01HUjoyMTAsUEFUSDo2MDIsUE9MWUdPTjo2MDQsQ0lEUjo2NTAsRkxPQVQ0OjcwMCxGTE9BVDg6NzAxLEFCU1RJTUU6NzAyLFJFTFRJTUU6NzAzLFxuVElOVEVSVkFMOjcwNCxDSVJDTEU6NzE4LE1BQ0FERFI4Ojc3NCxNT05FWTo3OTAsTUFDQUREUjo4MjksSU5FVDo4NjksQUNMSVRFTToxMDMzLFxuQlBDSEFSOjEwNDIsVkFSQ0hBUjoxMDQzLERBVEU6MTA4MixUSU1FOjEwODMsVElNRVNUQU1QOjExMTQsVElNRVNUQU1QVFo6MTE4NCxJTlRFUlZBTDoxMTg2LFxuVElNRVRaOjEyNjYsQklUOjE1NjAsVkFSQklUOjE1NjIsTlVNRVJJQzoxNzAwLFJFRkNVUlNPUjoxNzkwLFJFR1BST0NFRFVSRToyMjAyLFJFR09QRVI6MjIwMyxcblJFR09QRVJBVE9SOjIyMDQsUkVHQ0xBU1M6MjIwNSxSRUdUWVBFOjIyMDYsVVVJRDoyOTUwLFRYSURfU05BUFNIT1Q6Mjk3MCxQR19MU046MzIyMCxcblBHX05ESVNUSU5DVDozMzYxLFBHX0RFUEVOREVOQ0lFUzozNDAyLFRTVkVDVE9SOjM2MTQsVFNRVUVSWTozNjE1LEdUU1ZFQ1RPUjozNjQyLFxuUkVHQ09ORklHOjM3MzQsUkVHRElDVElPTkFSWTozNzY5LEpTT05COjM4MDIsUkVHTkFNRVNQQUNFOjQwODksUkVHUk9MRTo0MDk2fX0pO3ZhciBYZT1JKEplPT57cCgpO3ZhciBNYT1FaSgpLERhPVBpKCksT2E9V3QoKSxrYT1MaSgpO0plLmdldFR5cGVQYXJzZXI9VWE7SmUuc2V0VHlwZVBhcnNlcj1cbnFhO0plLmFycmF5UGFyc2VyPU9hO0plLmJ1aWx0aW5zPWthO3ZhciBaZT17dGV4dDp7fSxiaW5hcnk6e319O2Z1bmN0aW9uIFJpKHIpe3JldHVybiBTdHJpbmcoXG5yKX1hKFJpLFwibm9QYXJzZVwiKTtmdW5jdGlvbiBVYShyLGUpe3JldHVybiBlPWV8fFwidGV4dFwiLFplW2VdJiZaZVtlXVtyXXx8Uml9YShVYSxcblwiZ2V0VHlwZVBhcnNlclwiKTtmdW5jdGlvbiBxYShyLGUsdCl7dHlwZW9mIGU9PVwiZnVuY3Rpb25cIiYmKHQ9ZSxlPVwidGV4dFwiKSxaZVtlXVtyXT1cbnR9YShxYSxcInNldFR5cGVQYXJzZXJcIik7TWEuaW5pdChmdW5jdGlvbihyLGUpe1plLnRleHRbcl09ZX0pO0RhLmluaXQoZnVuY3Rpb24ocixlKXtcblplLmJpbmFyeVtyXT1lfSl9KTt2YXIgZXQ9SSgoamgsWXQpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO1l0LmV4cG9ydHM9e2hvc3Q6XCJsb2NhbGhvc3RcIix1c2VyOm0ucGxhdGZvcm09PT1cblwid2luMzJcIj9tLmVudi5VU0VSTkFNRTptLmVudi5VU0VSLGRhdGFiYXNlOnZvaWQgMCxwYXNzd29yZDpudWxsLGNvbm5lY3Rpb25TdHJpbmc6dm9pZCAwLFxucG9ydDo1NDMyLHJvd3M6MCxiaW5hcnk6ITEsbWF4OjEwLGlkbGVUaW1lb3V0TWlsbGlzOjNlNCxjbGllbnRfZW5jb2Rpbmc6XCJcIixzc2w6ITEsXG5hcHBsaWNhdGlvbl9uYW1lOnZvaWQgMCxmYWxsYmFja19hcHBsaWNhdGlvbl9uYW1lOnZvaWQgMCxvcHRpb25zOnZvaWQgMCxwYXJzZUlucHV0RGF0ZXNBc1VUQzohMSxcbnN0YXRlbWVudF90aW1lb3V0OiExLGxvY2tfdGltZW91dDohMSxpZGxlX2luX3RyYW5zYWN0aW9uX3Nlc3Npb25fdGltZW91dDohMSxxdWVyeV90aW1lb3V0OiExLFxuY29ubmVjdF90aW1lb3V0OjAsa2VlcGFsaXZlczoxLGtlZXBhbGl2ZXNfaWRsZTowfTt2YXIgTWU9WGUoKSxOYT1NZS5nZXRUeXBlUGFyc2VyKFxuMjAsXCJ0ZXh0XCIpLFFhPU1lLmdldFR5cGVQYXJzZXIoMTAxNixcInRleHRcIik7WXQuZXhwb3J0cy5fX2RlZmluZVNldHRlcl9fKFwicGFyc2VJblxcXG50OFwiLGZ1bmN0aW9uKHIpe01lLnNldFR5cGVQYXJzZXIoMjAsXCJ0ZXh0XCIscj9NZS5nZXRUeXBlUGFyc2VyKDIzLFwidGV4dFwiKTpOYSksTWUuXG5zZXRUeXBlUGFyc2VyKDEwMTYsXCJ0ZXh0XCIscj9NZS5nZXRUeXBlUGFyc2VyKDEwMDcsXCJ0ZXh0XCIpOlFhKX0pfSk7dmFyIHR0PUkoKEdoLE1pKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXIgV2E9KHF0KCksayhVdCkpLGphPWV0KCk7ZnVuY3Rpb24gSGEocil7dmFyIGU9ci5cbnJlcGxhY2UoL1xcXFwvZyxcIlxcXFxcXFxcXCIpLnJlcGxhY2UoL1wiL2csJ1xcXFxcIicpO3JldHVybidcIicrZSsnXCInfWEoSGEsXCJlc2NhcGVFbGVtZW50XCIpO1xuZnVuY3Rpb24gRmkocil7Zm9yKHZhciBlPVwie1wiLHQ9MDt0PHIubGVuZ3RoO3QrKyl0PjAmJihlPWUrXCIsXCIpLHJbdF09PT1udWxsfHx0eXBlb2Ygclt0XT5cblwidVwiP2U9ZStcIk5VTExcIjpBcnJheS5pc0FycmF5KHJbdF0pP2U9ZStGaShyW3RdKTpyW3RdaW5zdGFuY2VvZiBkP2UrPVwiXFxcXFxcXFx4XCIrclt0XS5cbnRvU3RyaW5nKFwiaGV4XCIpOmUrPUhhKGZ0KHJbdF0pKTtyZXR1cm4gZT1lK1wifVwiLGV9YShGaSxcImFycmF5U3RyaW5nXCIpO3ZhciBmdD1hKGZ1bmN0aW9uKHIsZSl7XG5pZihyPT1udWxsKXJldHVybiBudWxsO2lmKHIgaW5zdGFuY2VvZiBkKXJldHVybiByO2lmKEFycmF5QnVmZmVyLmlzVmlldyhyKSl7dmFyIHQ9ZC5cbmZyb20oci5idWZmZXIsci5ieXRlT2Zmc2V0LHIuYnl0ZUxlbmd0aCk7cmV0dXJuIHQubGVuZ3RoPT09ci5ieXRlTGVuZ3RoP3Q6dC5zbGljZShcbnIuYnl0ZU9mZnNldCxyLmJ5dGVPZmZzZXQrci5ieXRlTGVuZ3RoKX1yZXR1cm4gciBpbnN0YW5jZW9mIERhdGU/amEucGFyc2VJbnB1dERhdGVzQXNVVEM/XG5LYShyKTokYShyKTpBcnJheS5pc0FycmF5KHIpP0ZpKHIpOnR5cGVvZiByPT1cIm9iamVjdFwiP0dhKHIsZSk6ci50b1N0cmluZygpfSxcInByZVxcXG5wYXJlVmFsdWVcIik7ZnVuY3Rpb24gR2EocixlKXtpZihyJiZ0eXBlb2Ygci50b1Bvc3RncmVzPT1cImZ1bmN0aW9uXCIpe2lmKGU9ZXx8W10sZS5cbmluZGV4T2YocikhPT0tMSl0aHJvdyBuZXcgRXJyb3IoJ2NpcmN1bGFyIHJlZmVyZW5jZSBkZXRlY3RlZCB3aGlsZSBwcmVwYXJpbmcgXCInK1xucisnXCIgZm9yIHF1ZXJ5Jyk7cmV0dXJuIGUucHVzaChyKSxmdChyLnRvUG9zdGdyZXMoZnQpLGUpfXJldHVybiBKU09OLnN0cmluZ2lmeShyKX1cbmEoR2EsXCJwcmVwYXJlT2JqZWN0XCIpO2Z1bmN0aW9uIGoocixlKXtmb3Iocj1cIlwiK3I7ci5sZW5ndGg8ZTspcj1cIjBcIityO3JldHVybiByfWEoXG5qLFwicGFkXCIpO2Z1bmN0aW9uICRhKHIpe3ZhciBlPS1yLmdldFRpbWV6b25lT2Zmc2V0KCksdD1yLmdldEZ1bGxZZWFyKCksbj10PDE7biYmXG4odD1NYXRoLmFicyh0KSsxKTt2YXIgaT1qKHQsNCkrXCItXCIraihyLmdldE1vbnRoKCkrMSwyKStcIi1cIitqKHIuZ2V0RGF0ZSgpLDIpK1wiVFwiK1xuaihyLmdldEhvdXJzKCksMikrXCI6XCIraihyLmdldE1pbnV0ZXMoKSwyKStcIjpcIitqKHIuZ2V0U2Vjb25kcygpLDIpK1wiLlwiK2ooci5nZXRNaWxsaXNlY29uZHMoKSxcbjMpO3JldHVybiBlPDA/KGkrPVwiLVwiLGUqPS0xKTppKz1cIitcIixpKz1qKE1hdGguZmxvb3IoZS82MCksMikrXCI6XCIraihlJTYwLDIpLG4mJihpKz1cblwiIEJDXCIpLGl9YSgkYSxcImRhdGVUb1N0cmluZ1wiKTtmdW5jdGlvbiBLYShyKXt2YXIgZT1yLmdldFVUQ0Z1bGxZZWFyKCksdD1lPDE7dCYmKGU9XG5NYXRoLmFicyhlKSsxKTt2YXIgbj1qKGUsNCkrXCItXCIraihyLmdldFVUQ01vbnRoKCkrMSwyKStcIi1cIitqKHIuZ2V0VVRDRGF0ZSgpLDIpK1wiXFxcblRcIitqKHIuZ2V0VVRDSG91cnMoKSwyKStcIjpcIitqKHIuZ2V0VVRDTWludXRlcygpLDIpK1wiOlwiK2ooci5nZXRVVENTZWNvbmRzKCksMikrXCIuXCIrXG5qKHIuZ2V0VVRDTWlsbGlzZWNvbmRzKCksMyk7cmV0dXJuIG4rPVwiKzAwOjAwXCIsdCYmKG4rPVwiIEJDXCIpLG59YShLYSxcImRhdGVUb1N0cmluXFxcbmdVVENcIik7ZnVuY3Rpb24gVmEocixlLHQpe3JldHVybiByPXR5cGVvZiByPT1cInN0cmluZ1wiP3t0ZXh0OnJ9OnIsZSYmKHR5cGVvZiBlPT1cIlxcXG5mdW5jdGlvblwiP3IuY2FsbGJhY2s9ZTpyLnZhbHVlcz1lKSx0JiYoci5jYWxsYmFjaz10KSxyfWEoVmEsXCJub3JtYWxpemVRdWVyeUNvbmZpXFxcbmdcIik7dmFyIFp0PWEoZnVuY3Rpb24ocil7cmV0dXJuIFdhLmNyZWF0ZUhhc2goXCJtZDVcIikudXBkYXRlKHIsXCJ1dGYtOFwiKS5kaWdlc3QoXCJoXFxcbmV4XCIpfSxcIm1kNVwiKSx6YT1hKGZ1bmN0aW9uKHIsZSx0KXt2YXIgbj1adChlK3IpLGk9WnQoZC5jb25jYXQoW2QuZnJvbShuKSx0XSkpO3JldHVyblwiXFxcbm1kNVwiK2l9LFwicG9zdGdyZXNNZDVQYXNzd29yZEhhc2hcIik7TWkuZXhwb3J0cz17cHJlcGFyZVZhbHVlOmEoZnVuY3Rpb24oZSl7cmV0dXJuIGZ0KFxuZSl9LFwicHJlcGFyZVZhbHVlV3JhcHBlclwiKSxub3JtYWxpemVRdWVyeUNvbmZpZzpWYSxwb3N0Z3Jlc01kNVBhc3N3b3JkSGFzaDp6YSxtZDU6WnR9fSk7dmFyIHFpPUkoKFZoLFVpKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXIgSnQ9KHF0KCksayhVdCkpO2Z1bmN0aW9uIFlhKHIpe2lmKHIuaW5kZXhPZihcblwiU0NSQU0tU0hBLTI1NlwiKT09PS0xKXRocm93IG5ldyBFcnJvcihcIlNBU0w6IE9ubHkgbWVjaGFuaXNtIFNDUkFNLVNIQS0yNTYgaXMgY3VyXFxcbnJlbnRseSBzdXBwb3J0ZWRcIik7bGV0IGU9SnQucmFuZG9tQnl0ZXMoMTgpLnRvU3RyaW5nKFwiYmFzZTY0XCIpO3JldHVybnttZWNoYW5pc206XCJcXFxuU0NSQU0tU0hBLTI1NlwiLGNsaWVudE5vbmNlOmUscmVzcG9uc2U6XCJuLCxuPSoscj1cIitlLG1lc3NhZ2U6XCJTQVNMSW5pdGlhbFJlc3BvbnNlXCJ9fVxuYShZYSxcInN0YXJ0U2Vzc2lvblwiKTtmdW5jdGlvbiBaYShyLGUsdCl7aWYoci5tZXNzYWdlIT09XCJTQVNMSW5pdGlhbFJlc3BvbnNlXCIpdGhyb3cgbmV3IEVycm9yKFxuXCJTQVNMOiBMYXN0IG1lc3NhZ2Ugd2FzIG5vdCBTQVNMSW5pdGlhbFJlc3BvbnNlXCIpO2lmKHR5cGVvZiBlIT1cInN0cmluZ1wiKXRocm93IG5ldyBFcnJvcihcblwiU0FTTDogU0NSQU0tU0VSVkVSLUZJUlNULU1FU1NBR0U6IGNsaWVudCBwYXNzd29yZCBtdXN0IGJlIGEgc3RyaW5nXCIpO2lmKHR5cGVvZiB0IT1cblwic3RyaW5nXCIpdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU0NSQU0tU0VSVkVSLUZJUlNULU1FU1NBR0U6IHNlcnZlckRhdGEgbXVzdCBiZSBhXFxcbiBzdHJpbmdcIik7bGV0IG49ZXUodCk7aWYobi5ub25jZS5zdGFydHNXaXRoKHIuY2xpZW50Tm9uY2UpKXtpZihuLm5vbmNlLmxlbmd0aD09PVxuci5jbGllbnROb25jZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU0NSQU0tU0VSVkVSLUZJUlNULU1FU1NBR0U6IHNlcnZlciBuXFxcbm9uY2UgaXMgdG9vIHNob3J0XCIpfWVsc2UgdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU0NSQU0tU0VSVkVSLUZJUlNULU1FU1NBR0U6IHNlcnZcXFxuZXIgbm9uY2UgZG9lcyBub3Qgc3RhcnQgd2l0aCBjbGllbnQgbm9uY2VcIik7dmFyIGk9ZC5mcm9tKG4uc2FsdCxcImJhc2U2NFwiKSxzPW51KGUsXG5pLG4uaXRlcmF0aW9uKSxvPURlKHMsXCJDbGllbnQgS2V5XCIpLHU9cnUobyksYz1cIm49KixyPVwiK3IuY2xpZW50Tm9uY2UsaD1cInI9XCIrbi5ub25jZStcblwiLHM9XCIrbi5zYWx0K1wiLGk9XCIrbi5pdGVyYXRpb24sbD1cImM9Yml3cyxyPVwiK24ubm9uY2UseT1jK1wiLFwiK2grXCIsXCIrbCxFPURlKHUseSksXz1raShcbm8sRSksUD1fLnRvU3RyaW5nKFwiYmFzZTY0XCIpLE49RGUocyxcIlNlcnZlciBLZXlcIiksSj1EZShOLHkpO3IubWVzc2FnZT1cIlNBU0xSZXNwb25cXFxuc2VcIixyLnNlcnZlclNpZ25hdHVyZT1KLnRvU3RyaW5nKFwiYmFzZTY0XCIpLHIucmVzcG9uc2U9bCtcIixwPVwiK1B9YShaYSxcImNvbnRpbnVlU2VcXFxuc3Npb25cIik7ZnVuY3Rpb24gSmEocixlKXtpZihyLm1lc3NhZ2UhPT1cIlNBU0xSZXNwb25zZVwiKXRocm93IG5ldyBFcnJvcihcIlNBU0w6IExhXFxcbnN0IG1lc3NhZ2Ugd2FzIG5vdCBTQVNMUmVzcG9uc2VcIik7aWYodHlwZW9mIGUhPVwic3RyaW5nXCIpdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU1xcXG5DUkFNLVNFUlZFUi1GSU5BTC1NRVNTQUdFOiBzZXJ2ZXJEYXRhIG11c3QgYmUgYSBzdHJpbmdcIik7bGV0e3NlcnZlclNpZ25hdHVyZTp0fT10dShcbmUpO2lmKHQhPT1yLnNlcnZlclNpZ25hdHVyZSl0aHJvdyBuZXcgRXJyb3IoXCJTQVNMOiBTQ1JBTS1TRVJWRVItRklOQUwtTUVTU0FHRTogc1xcXG5lcnZlciBzaWduYXR1cmUgZG9lcyBub3QgbWF0Y2hcIil9YShKYSxcImZpbmFsaXplU2Vzc2lvblwiKTtmdW5jdGlvbiBYYShyKXtpZih0eXBlb2YgciE9XG5cInN0cmluZ1wiKXRocm93IG5ldyBUeXBlRXJyb3IoXCJTQVNMOiB0ZXh0IG11c3QgYmUgYSBzdHJpbmdcIik7cmV0dXJuIHIuc3BsaXQoXCJcIikubWFwKFxuKGUsdCk9PnIuY2hhckNvZGVBdCh0KSkuZXZlcnkoZT0+ZT49MzMmJmU8PTQzfHxlPj00NSYmZTw9MTI2KX1hKFhhLFwiaXNQcmludGFibGVDXFxcbmhhcnNcIik7ZnVuY3Rpb24gRGkocil7cmV0dXJuL14oPzpbYS16QS1aMC05Ky9dezR9KSooPzpbYS16QS1aMC05Ky9dezJ9PT18W2EtekEtWjAtOSsvXXszfT0pPyQvLlxudGVzdChyKX1hKERpLFwiaXNCYXNlNjRcIik7ZnVuY3Rpb24gT2kocil7aWYodHlwZW9mIHIhPVwic3RyaW5nXCIpdGhyb3cgbmV3IFR5cGVFcnJvcihcblwiU0FTTDogYXR0cmlidXRlIHBhaXJzIHRleHQgbXVzdCBiZSBhIHN0cmluZ1wiKTtyZXR1cm4gbmV3IE1hcChyLnNwbGl0KFwiLFwiKS5tYXAoZT0+e1xuaWYoIS9eLj0vLnRlc3QoZSkpdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogSW52YWxpZCBhdHRyaWJ1dGUgcGFpciBlbnRyeVwiKTtsZXQgdD1lWzBdLFxubj1lLnN1YnN0cmluZygyKTtyZXR1cm5bdCxuXX0pKX1hKE9pLFwicGFyc2VBdHRyaWJ1dGVQYWlyc1wiKTtmdW5jdGlvbiBldShyKXtsZXQgZT1PaShcbnIpLHQ9ZS5nZXQoXCJyXCIpO2lmKHQpe2lmKCFYYSh0KSl0aHJvdyBuZXcgRXJyb3IoXCJTQVNMOiBTQ1JBTS1TRVJWRVItRklSU1QtTUVTU0FHXFxcbkU6IG5vbmNlIG11c3Qgb25seSBjb250YWluIHByaW50YWJsZSBjaGFyYWN0ZXJzXCIpfWVsc2UgdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU0NcXFxuUkFNLVNFUlZFUi1GSVJTVC1NRVNTQUdFOiBub25jZSBtaXNzaW5nXCIpO2xldCBuPWUuZ2V0KFwic1wiKTtpZihuKXtpZighRGkobikpdGhyb3cgbmV3IEVycm9yKFxuXCJTQVNMOiBTQ1JBTS1TRVJWRVItRklSU1QtTUVTU0FHRTogc2FsdCBtdXN0IGJlIGJhc2U2NFwiKX1lbHNlIHRocm93IG5ldyBFcnJvcihcIlNcXFxuQVNMOiBTQ1JBTS1TRVJWRVItRklSU1QtTUVTU0FHRTogc2FsdCBtaXNzaW5nXCIpO2xldCBpPWUuZ2V0KFwiaVwiKTtpZihpKXtpZighL15bMS05XVswLTldKiQvLlxudGVzdChpKSl0aHJvdyBuZXcgRXJyb3IoXCJTQVNMOiBTQ1JBTS1TRVJWRVItRklSU1QtTUVTU0FHRTogaW52YWxpZCBpdGVyYXRpb24gY291XFxcbm50XCIpfWVsc2UgdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU0NSQU0tU0VSVkVSLUZJUlNULU1FU1NBR0U6IGl0ZXJhdGlvbiBtaXNzaW5nXCIpO1xubGV0IHM9cGFyc2VJbnQoaSwxMCk7cmV0dXJue25vbmNlOnQsc2FsdDpuLGl0ZXJhdGlvbjpzfX1hKGV1LFwicGFyc2VTZXJ2ZXJGaXJzdE1lXFxcbnNzYWdlXCIpO2Z1bmN0aW9uIHR1KHIpe2xldCB0PU9pKHIpLmdldChcInZcIik7aWYodCl7aWYoIURpKHQpKXRocm93IG5ldyBFcnJvcihcIlNBU1xcXG5MOiBTQ1JBTS1TRVJWRVItRklOQUwtTUVTU0FHRTogc2VydmVyIHNpZ25hdHVyZSBtdXN0IGJlIGJhc2U2NFwiKX1lbHNlIHRocm93IG5ldyBFcnJvcihcblwiU0FTTDogU0NSQU0tU0VSVkVSLUZJTkFMLU1FU1NBR0U6IHNlcnZlciBzaWduYXR1cmUgaXMgbWlzc2luZ1wiKTtyZXR1cm57c2VydmVyU2lnbmF0dXJlOnR9fVxuYSh0dSxcInBhcnNlU2VydmVyRmluYWxNZXNzYWdlXCIpO2Z1bmN0aW9uIGtpKHIsZSl7aWYoIWQuaXNCdWZmZXIocikpdGhyb3cgbmV3IFR5cGVFcnJvcihcblwiZmlyc3QgYXJndW1lbnQgbXVzdCBiZSBhIEJ1ZmZlclwiKTtpZighZC5pc0J1ZmZlcihlKSl0aHJvdyBuZXcgVHlwZUVycm9yKFwic2Vjb25kXFxcbiBhcmd1bWVudCBtdXN0IGJlIGEgQnVmZmVyXCIpO2lmKHIubGVuZ3RoIT09ZS5sZW5ndGgpdGhyb3cgbmV3IEVycm9yKFwiQnVmZmVyIGxlbmdcXFxudGhzIG11c3QgbWF0Y2hcIik7aWYoci5sZW5ndGg9PT0wKXRocm93IG5ldyBFcnJvcihcIkJ1ZmZlcnMgY2Fubm90IGJlIGVtcHR5XCIpO3JldHVybiBkLlxuZnJvbShyLm1hcCgodCxuKT0+cltuXV5lW25dKSl9YShraSxcInhvckJ1ZmZlcnNcIik7ZnVuY3Rpb24gcnUocil7cmV0dXJuIEp0LmNyZWF0ZUhhc2goXG5cInNoYTI1NlwiKS51cGRhdGUocikuZGlnZXN0KCl9YShydSxcInNoYTI1NlwiKTtmdW5jdGlvbiBEZShyLGUpe3JldHVybiBKdC5jcmVhdGVIbWFjKFxuXCJzaGEyNTZcIixyKS51cGRhdGUoZSkuZGlnZXN0KCl9YShEZSxcImhtYWNTaGEyNTZcIik7ZnVuY3Rpb24gbnUocixlLHQpe2Zvcih2YXIgbj1EZShcbnIsZC5jb25jYXQoW2UsZC5mcm9tKFswLDAsMCwxXSldKSksaT1uLHM9MDtzPHQtMTtzKyspbj1EZShyLG4pLGk9a2koaSxuKTtyZXR1cm4gaX1cbmEobnUsXCJIaVwiKTtVaS5leHBvcnRzPXtzdGFydFNlc3Npb246WWEsY29udGludWVTZXNzaW9uOlphLGZpbmFsaXplU2Vzc2lvbjpKYX19KTt2YXIgWHQ9e307WChYdCx7am9pbjooKT0+aXV9KTtmdW5jdGlvbiBpdSguLi5yKXtyZXR1cm4gci5qb2luKFwiL1wiKX12YXIgZXI9SygoKT0+e1xuXCJ1c2Ugc3RyaWN0XCI7cCgpO2EoaXUsXCJqb2luXCIpfSk7dmFyIHRyPXt9O1godHIse3N0YXQ6KCk9PnN1fSk7ZnVuY3Rpb24gc3UocixlKXtlKG5ldyBFcnJvcihcIk5vIGZpbGVzeXN0ZW1cIikpfXZhciBycj1LKFxuKCk9PntcInVzZSBzdHJpY3RcIjtwKCk7YShzdSxcInN0YXRcIil9KTt2YXIgbnI9e307WChucix7ZGVmYXVsdDooKT0+b3V9KTt2YXIgb3UsaXI9SygoKT0+e1widXNlIHN0cmljdFwiO3AoKTtvdT17fX0pO3ZhciBOaT17fTtYKE5pLHtTdHJpbmdEZWNvZGVyOigpPT5zcn0pO3ZhciBvcixzcixRaT1LKCgpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO29yPWNsYXNzIG9ye2NvbnN0cnVjdG9yKGUpe1xuVCh0aGlzLFwidGRcIik7dGhpcy50ZD1uZXcgVGV4dERlY29kZXIoZSl9d3JpdGUoZSl7cmV0dXJuIHRoaXMudGQuZGVjb2RlKGUse3N0cmVhbTohMH0pfWVuZChlKXtcbnJldHVybiB0aGlzLnRkLmRlY29kZShlKX19O2Eob3IsXCJTdHJpbmdEZWNvZGVyXCIpO3NyPW9yfSk7dmFyIEdpPUkoKGlsLEhpKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXJ7VHJhbnNmb3JtOmF1fT0oaXIoKSxrKG5yKSkse1N0cmluZ0RlY29kZXI6dXV9PShRaSgpLGsoTmkpKSxcbndlPVN5bWJvbChcImxhc3RcIikscHQ9U3ltYm9sKFwiZGVjb2RlclwiKTtmdW5jdGlvbiBjdShyLGUsdCl7bGV0IG47aWYodGhpcy5vdmVyZmxvdyl7XG5pZihuPXRoaXNbcHRdLndyaXRlKHIpLnNwbGl0KHRoaXMubWF0Y2hlciksbi5sZW5ndGg9PT0xKXJldHVybiB0KCk7bi5zaGlmdCgpLHRoaXMuXG5vdmVyZmxvdz0hMX1lbHNlIHRoaXNbd2VdKz10aGlzW3B0XS53cml0ZShyKSxuPXRoaXNbd2VdLnNwbGl0KHRoaXMubWF0Y2hlcik7dGhpc1t3ZV09XG5uLnBvcCgpO2ZvcihsZXQgaT0wO2k8bi5sZW5ndGg7aSsrKXRyeXtqaSh0aGlzLHRoaXMubWFwcGVyKG5baV0pKX1jYXRjaChzKXtyZXR1cm4gdChcbnMpfWlmKHRoaXMub3ZlcmZsb3c9dGhpc1t3ZV0ubGVuZ3RoPnRoaXMubWF4TGVuZ3RoLHRoaXMub3ZlcmZsb3cmJiF0aGlzLnNraXBPdmVyZmxvdyl7XG50KG5ldyBFcnJvcihcIm1heGltdW0gYnVmZmVyIHJlYWNoZWRcIikpO3JldHVybn10KCl9YShjdSxcInRyYW5zZm9ybVwiKTtmdW5jdGlvbiBodShyKXtcbmlmKHRoaXNbd2VdKz10aGlzW3B0XS5lbmQoKSx0aGlzW3dlXSl0cnl7amkodGhpcyx0aGlzLm1hcHBlcih0aGlzW3dlXSkpfWNhdGNoKGUpe1xucmV0dXJuIHIoZSl9cigpfWEoaHUsXCJmbHVzaFwiKTtmdW5jdGlvbiBqaShyLGUpe2UhPT12b2lkIDAmJnIucHVzaChlKX1hKGppLFwicHVzaFwiKTtcbmZ1bmN0aW9uIFdpKHIpe3JldHVybiByfWEoV2ksXCJub29wXCIpO2Z1bmN0aW9uIGx1KHIsZSx0KXtzd2l0Y2gocj1yfHwvXFxyP1xcbi8sZT1lfHxcbldpLHQ9dHx8e30sYXJndW1lbnRzLmxlbmd0aCl7Y2FzZSAxOnR5cGVvZiByPT1cImZ1bmN0aW9uXCI/KGU9cixyPS9cXHI/XFxuLyk6dHlwZW9mIHI9PVxuXCJvYmplY3RcIiYmIShyIGluc3RhbmNlb2YgUmVnRXhwKSYmIXJbU3ltYm9sLnNwbGl0XSYmKHQ9cixyPS9cXHI/XFxuLyk7YnJlYWs7Y2FzZSAyOlxudHlwZW9mIHI9PVwiZnVuY3Rpb25cIj8odD1lLGU9cixyPS9cXHI/XFxuLyk6dHlwZW9mIGU9PVwib2JqZWN0XCImJih0PWUsZT1XaSl9dD1PYmplY3QuXG5hc3NpZ24oe30sdCksdC5hdXRvRGVzdHJveT0hMCx0LnRyYW5zZm9ybT1jdSx0LmZsdXNoPWh1LHQucmVhZGFibGVPYmplY3RNb2RlPSEwO1xubGV0IG49bmV3IGF1KHQpO3JldHVybiBuW3dlXT1cIlwiLG5bcHRdPW5ldyB1dShcInV0ZjhcIiksbi5tYXRjaGVyPXIsbi5tYXBwZXI9ZSxuLm1heExlbmd0aD1cbnQubWF4TGVuZ3RoLG4uc2tpcE92ZXJmbG93PXQuc2tpcE92ZXJmbG93fHwhMSxuLm92ZXJmbG93PSExLG4uX2Rlc3Ryb3k9ZnVuY3Rpb24oaSxzKXtcbnRoaXMuX3dyaXRhYmxlU3RhdGUuZXJyb3JFbWl0dGVkPSExLHMoaSl9LG59YShsdSxcInNwbGl0XCIpO0hpLmV4cG9ydHM9bHV9KTt2YXIgVmk9SSgoYWwsZmUpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3ZhciAkaT0oZXIoKSxrKFh0KSksZnU9KGlyKCksayhucikpLlN0cmVhbSxwdT1HaSgpLFxuS2k9KEdlKCksayhIZSkpLGR1PTU0MzIsZHQ9bS5wbGF0Zm9ybT09PVwid2luMzJcIixydD1tLnN0ZGVycix5dT01NixtdT03LGd1PTYxNDQwLFxud3U9MzI3Njg7ZnVuY3Rpb24gYnUocil7cmV0dXJuKHImZ3UpPT13dX1hKGJ1LFwiaXNSZWdGaWxlXCIpO3ZhciBPZT1bXCJob3N0XCIsXCJwb3J0XCIsXG5cImRhdGFiYXNlXCIsXCJ1c2VyXCIsXCJwYXNzd29yZFwiXSxhcj1PZS5sZW5ndGgsU3U9T2VbYXItMV07ZnVuY3Rpb24gdXIoKXt2YXIgcj1ydCBpbnN0YW5jZW9mXG5mdSYmcnQud3JpdGFibGU9PT0hMDtpZihyKXt2YXIgZT1BcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChhcmd1bWVudHMpLmNvbmNhdChgXG5gKTtydC53cml0ZShLaS5mb3JtYXQuYXBwbHkoS2ksZSkpfX1hKHVyLFwid2FyblwiKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoZmUuZXhwb3J0cyxcblwiaXNXaW5cIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGR0fSxzZXQ6ZnVuY3Rpb24ocil7ZHQ9cn19KTtmZS5leHBvcnRzLndhcm5Ubz1mdW5jdGlvbihyKXtcbnZhciBlPXJ0O3JldHVybiBydD1yLGV9O2ZlLmV4cG9ydHMuZ2V0RmlsZU5hbWU9ZnVuY3Rpb24ocil7dmFyIGU9cnx8bS5lbnYsdD1lLlBHUEFTU0ZJTEV8fFxuKGR0PyRpLmpvaW4oZS5BUFBEQVRBfHxcIi4vXCIsXCJwb3N0Z3Jlc3FsXCIsXCJwZ3Bhc3MuY29uZlwiKTokaS5qb2luKGUuSE9NRXx8XCIuL1wiLFwiLnBcXFxuZ3Bhc3NcIikpO3JldHVybiB0fTtmZS5leHBvcnRzLnVzZVBnUGFzcz1mdW5jdGlvbihyLGUpe3JldHVybiBPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LlxuY2FsbChtLmVudixcIlBHUEFTU1dPUkRcIik/ITE6ZHQ/ITA6KGU9ZXx8XCI8dW5rbj5cIixidShyLm1vZGUpP3IubW9kZSYoeXV8bXUpPyh1cignXFxcbldBUk5JTkc6IHBhc3N3b3JkIGZpbGUgXCIlc1wiIGhhcyBncm91cCBvciB3b3JsZCBhY2Nlc3M7IHBlcm1pc3Npb25zIHNob3VsZCBiZSB1PXJcXFxudyAoMDYwMCkgb3IgbGVzcycsZSksITEpOiEwOih1cignV0FSTklORzogcGFzc3dvcmQgZmlsZSBcIiVzXCIgaXMgbm90IGEgcGxhaW4gZmlsZScsXG5lKSwhMSkpfTt2YXIgeHU9ZmUuZXhwb3J0cy5tYXRjaD1mdW5jdGlvbihyLGUpe3JldHVybiBPZS5zbGljZSgwLC0xKS5yZWR1Y2UoZnVuY3Rpb24odCxuLGkpe1xucmV0dXJuIGk9PTEmJk51bWJlcihyW25dfHxkdSk9PT1OdW1iZXIoZVtuXSk/dCYmITA6dCYmKGVbbl09PT1cIipcInx8ZVtuXT09PXJbbl0pfSxcbiEwKX07ZmUuZXhwb3J0cy5nZXRQYXNzd29yZD1mdW5jdGlvbihyLGUsdCl7dmFyIG4saT1lLnBpcGUocHUoKSk7ZnVuY3Rpb24gcyhjKXt2YXIgaD1FdShcbmMpO2gmJnZ1KGgpJiZ4dShyLGgpJiYobj1oW1N1XSxpLmVuZCgpKX1hKHMsXCJvbkxpbmVcIik7dmFyIG89YShmdW5jdGlvbigpe2UuZGVzdHJveSgpLFxudChuKX0sXCJvbkVuZFwiKSx1PWEoZnVuY3Rpb24oYyl7ZS5kZXN0cm95KCksdXIoXCJXQVJOSU5HOiBlcnJvciBvbiByZWFkaW5nIGZpbGU6ICVcXFxuc1wiLGMpLHQodm9pZCAwKX0sXCJvbkVyclwiKTtlLm9uKFwiZXJyb3JcIix1KSxpLm9uKFwiZGF0YVwiLHMpLm9uKFwiZW5kXCIsbykub24oXCJlcnJvclwiLFxudSl9O3ZhciBFdT1mZS5leHBvcnRzLnBhcnNlTGluZT1mdW5jdGlvbihyKXtpZihyLmxlbmd0aDwxMXx8ci5tYXRjaCgvXlxccysjLykpcmV0dXJuIG51bGw7XG5mb3IodmFyIGU9XCJcIix0PVwiXCIsbj0wLGk9MCxzPTAsbz17fSx1PSExLGM9YShmdW5jdGlvbihsLHksRSl7dmFyIF89ci5zdWJzdHJpbmcoeSxcbkUpO09iamVjdC5oYXNPd25Qcm9wZXJ0eS5jYWxsKG0uZW52LFwiUEdQQVNTX05PX0RFRVNDQVBFXCIpfHwoXz1fLnJlcGxhY2UoL1xcXFwoWzpcXFxcXSkvZyxcblwiJDFcIikpLG9bT2VbbF1dPV99LFwiYWRkVG9PYmpcIiksaD0wO2g8ci5sZW5ndGgtMTtoKz0xKXtpZihlPXIuY2hhckF0KGgrMSksdD1yLmNoYXJBdChcbmgpLHU9bj09YXItMSx1KXtjKG4saSk7YnJlYWt9aD49MCYmZT09XCI6XCImJnQhPT1cIlxcXFxcIiYmKGMobixpLGgrMSksaT1oKzIsbis9MSl9cmV0dXJuIG89XG5PYmplY3Qua2V5cyhvKS5sZW5ndGg9PT1hcj9vOm51bGwsb30sdnU9ZmUuZXhwb3J0cy5pc1ZhbGlkRW50cnk9ZnVuY3Rpb24ocil7Zm9yKHZhciBlPXtcbjA6ZnVuY3Rpb24obyl7cmV0dXJuIG8ubGVuZ3RoPjB9LDE6ZnVuY3Rpb24obyl7cmV0dXJuIG89PT1cIipcIj8hMDoobz1OdW1iZXIobyksaXNGaW5pdGUoXG5vKSYmbz4wJiZvPDkwMDcxOTkyNTQ3NDA5OTImJk1hdGguZmxvb3Iobyk9PT1vKX0sMjpmdW5jdGlvbihvKXtyZXR1cm4gby5sZW5ndGg+MH0sXG4zOmZ1bmN0aW9uKG8pe3JldHVybiBvLmxlbmd0aD4wfSw0OmZ1bmN0aW9uKG8pe3JldHVybiBvLmxlbmd0aD4wfX0sdD0wO3Q8T2UubGVuZ3RoO3QrPVxuMSl7dmFyIG49ZVt0XSxpPXJbT2VbdF1dfHxcIlwiLHM9bihpKTtpZighcylyZXR1cm4hMX1yZXR1cm4hMH19KTt2YXIgWWk9SSgobGwsY3IpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3ZhciBobD0oZXIoKSxrKFh0KSksemk9KHJyKCksayh0cikpLHl0PVZpKCk7XG5jci5leHBvcnRzPWZ1bmN0aW9uKHIsZSl7dmFyIHQ9eXQuZ2V0RmlsZU5hbWUoKTt6aS5zdGF0KHQsZnVuY3Rpb24obixpKXtpZihufHwheXQuXG51c2VQZ1Bhc3MoaSx0KSlyZXR1cm4gZSh2b2lkIDApO3ZhciBzPXppLmNyZWF0ZVJlYWRTdHJlYW0odCk7eXQuZ2V0UGFzc3dvcmQocixzLFxuZSl9KX07Y3IuZXhwb3J0cy53YXJuVG89eXQud2FyblRvfSk7dmFyIGhyPUkoKHBsLFppKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXIgX3U9WGUoKTtmdW5jdGlvbiBtdChyKXt0aGlzLl90eXBlcz1yfHxfdSxcbnRoaXMudGV4dD17fSx0aGlzLmJpbmFyeT17fX1hKG10LFwiVHlwZU92ZXJyaWRlc1wiKTttdC5wcm90b3R5cGUuZ2V0T3ZlcnJpZGVzPWZ1bmN0aW9uKHIpe1xuc3dpdGNoKHIpe2Nhc2VcInRleHRcIjpyZXR1cm4gdGhpcy50ZXh0O2Nhc2VcImJpbmFyeVwiOnJldHVybiB0aGlzLmJpbmFyeTtkZWZhdWx0OnJldHVybnt9fX07XG5tdC5wcm90b3R5cGUuc2V0VHlwZVBhcnNlcj1mdW5jdGlvbihyLGUsdCl7dHlwZW9mIGU9PVwiZnVuY3Rpb25cIiYmKHQ9ZSxlPVwidGV4dFwiKSxcbnRoaXMuZ2V0T3ZlcnJpZGVzKGUpW3JdPXR9O210LnByb3RvdHlwZS5nZXRUeXBlUGFyc2VyPWZ1bmN0aW9uKHIsZSl7cmV0dXJuIGU9ZXx8XG5cInRleHRcIix0aGlzLmdldE92ZXJyaWRlcyhlKVtyXXx8dGhpcy5fdHlwZXMuZ2V0VHlwZVBhcnNlcihyLGUpfTtaaS5leHBvcnRzPW10fSk7dmFyIEppPXt9O1goSmkse2RlZmF1bHQ6KCk9PkF1fSk7dmFyIEF1LFhpPUsoKCk9PntcInVzZSBzdHJpY3RcIjtwKCk7QXU9e319KTt2YXIgZXM9e307WChlcyx7cGFyc2U6KCk9PmxyfSk7ZnVuY3Rpb24gbHIocixlPSExKXtsZXR7cHJvdG9jb2w6dH09bmV3IFVSTChyKSxuPVwiXFxcbmh0dHA6XCIrci5zdWJzdHJpbmcodC5sZW5ndGgpLHt1c2VybmFtZTppLHBhc3N3b3JkOnMsaG9zdDpvLGhvc3RuYW1lOnUscG9ydDpjLHBhdGhuYW1lOmgsXG5zZWFyY2g6bCxzZWFyY2hQYXJhbXM6eSxoYXNoOkV9PW5ldyBVUkwobik7cz1kZWNvZGVVUklDb21wb25lbnQocyk7bGV0IF89aStcIjpcIitzLFxuUD1lP09iamVjdC5mcm9tRW50cmllcyh5LmVudHJpZXMoKSk6bDtyZXR1cm57aHJlZjpyLHByb3RvY29sOnQsYXV0aDpfLHVzZXJuYW1lOmksXG5wYXNzd29yZDpzLGhvc3Q6byxob3N0bmFtZTp1LHBvcnQ6YyxwYXRobmFtZTpoLHNlYXJjaDpsLHF1ZXJ5OlAsaGFzaDpFfX12YXIgZnI9SyhcbigpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO2EobHIsXCJwYXJzZVwiKX0pO3ZhciBycz1JKChibCx0cyk9PntcInVzZSBzdHJpY3RcIjtwKCk7dmFyIEN1PShmcigpLGsoZXMpKSxwcj0ocnIoKSxrKHRyKSk7ZnVuY3Rpb24gZHIocil7XG5pZihyLmNoYXJBdCgwKT09PVwiL1wiKXt2YXIgdD1yLnNwbGl0KFwiIFwiKTtyZXR1cm57aG9zdDp0WzBdLGRhdGFiYXNlOnRbMV19fXZhciBlPUN1LlxucGFyc2UoLyB8JVteYS1mMC05XXwlW2EtZjAtOV1bXmEtZjAtOV0vaS50ZXN0KHIpP2VuY29kZVVSSShyKS5yZXBsYWNlKC9cXCUyNShcXGRcXGQpL2csXG5cIiUkMVwiKTpyLCEwKSx0PWUucXVlcnk7Zm9yKHZhciBuIGluIHQpQXJyYXkuaXNBcnJheSh0W25dKSYmKHRbbl09dFtuXVt0W25dLmxlbmd0aC1cbjFdKTt2YXIgaT0oZS5hdXRofHxcIjpcIikuc3BsaXQoXCI6XCIpO2lmKHQudXNlcj1pWzBdLHQucGFzc3dvcmQ9aS5zcGxpY2UoMSkuam9pbihcIjpcIiksXG50LnBvcnQ9ZS5wb3J0LGUucHJvdG9jb2w9PVwic29ja2V0OlwiKXJldHVybiB0Lmhvc3Q9ZGVjb2RlVVJJKGUucGF0aG5hbWUpLHQuZGF0YWJhc2U9XG5lLnF1ZXJ5LmRiLHQuY2xpZW50X2VuY29kaW5nPWUucXVlcnkuZW5jb2RpbmcsdDt0Lmhvc3R8fCh0Lmhvc3Q9ZS5ob3N0bmFtZSk7dmFyIHM9ZS5cbnBhdGhuYW1lO2lmKCF0Lmhvc3QmJnMmJi9eJTJmL2kudGVzdChzKSl7dmFyIG89cy5zcGxpdChcIi9cIik7dC5ob3N0PWRlY29kZVVSSUNvbXBvbmVudChcbm9bMF0pLHM9by5zcGxpY2UoMSkuam9pbihcIi9cIil9c3dpdGNoKHMmJnMuY2hhckF0KDApPT09XCIvXCImJihzPXMuc2xpY2UoMSl8fG51bGwpLFxudC5kYXRhYmFzZT1zJiZkZWNvZGVVUkkocyksKHQuc3NsPT09XCJ0cnVlXCJ8fHQuc3NsPT09XCIxXCIpJiYodC5zc2w9ITApLHQuc3NsPT09XCIwXCImJlxuKHQuc3NsPSExKSwodC5zc2xjZXJ0fHx0LnNzbGtleXx8dC5zc2xyb290Y2VydHx8dC5zc2xtb2RlKSYmKHQuc3NsPXt9KSx0LnNzbGNlcnQmJlxuKHQuc3NsLmNlcnQ9cHIucmVhZEZpbGVTeW5jKHQuc3NsY2VydCkudG9TdHJpbmcoKSksdC5zc2xrZXkmJih0LnNzbC5rZXk9cHIucmVhZEZpbGVTeW5jKFxudC5zc2xrZXkpLnRvU3RyaW5nKCkpLHQuc3Nscm9vdGNlcnQmJih0LnNzbC5jYT1wci5yZWFkRmlsZVN5bmModC5zc2xyb290Y2VydCkudG9TdHJpbmcoKSksXG50LnNzbG1vZGUpe2Nhc2VcImRpc2FibGVcIjp7dC5zc2w9ITE7YnJlYWt9Y2FzZVwicHJlZmVyXCI6Y2FzZVwicmVxdWlyZVwiOmNhc2VcInZlcmlmeS1cXFxuY2FcIjpjYXNlXCJ2ZXJpZnktZnVsbFwiOmJyZWFrO2Nhc2VcIm5vLXZlcmlmeVwiOnt0LnNzbC5yZWplY3RVbmF1dGhvcml6ZWQ9ITE7YnJlYWt9fVxucmV0dXJuIHR9YShkcixcInBhcnNlXCIpO3RzLmV4cG9ydHM9ZHI7ZHIucGFyc2U9ZHJ9KTt2YXIgZ3Q9SSgoRWwsc3MpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3ZhciBJdT0oWGkoKSxrKEppKSksaXM9ZXQoKSxucz1ycygpLnBhcnNlLFY9YShcbmZ1bmN0aW9uKHIsZSx0KXtyZXR1cm4gdD09PXZvaWQgMD90PW0uZW52W1wiUEdcIityLnRvVXBwZXJDYXNlKCldOnQ9PT0hMXx8KHQ9bS5lbnZbdF0pLFxuZVtyXXx8dHx8aXNbcl19LFwidmFsXCIpLFR1PWEoZnVuY3Rpb24oKXtzd2l0Y2gobS5lbnYuUEdTU0xNT0RFKXtjYXNlXCJkaXNhYmxlXCI6cmV0dXJuITE7Y2FzZVwiXFxcbnByZWZlclwiOmNhc2VcInJlcXVpcmVcIjpjYXNlXCJ2ZXJpZnktY2FcIjpjYXNlXCJ2ZXJpZnktZnVsbFwiOnJldHVybiEwO2Nhc2VcIm5vLXZlcmlmeVwiOlxucmV0dXJue3JlamVjdFVuYXV0aG9yaXplZDohMX19cmV0dXJuIGlzLnNzbH0sXCJyZWFkU1NMQ29uZmlnRnJvbUVudmlyb25tZW50XCIpLGtlPWEoXG5mdW5jdGlvbihyKXtyZXR1cm5cIidcIisoXCJcIityKS5yZXBsYWNlKC9cXFxcL2csXCJcXFxcXFxcXFwiKS5yZXBsYWNlKC8nL2csXCJcXFxcJ1wiKStcIidcIn0sXCJxdW9cXFxudGVQYXJhbVZhbHVlXCIpLHJlPWEoZnVuY3Rpb24ocixlLHQpe3ZhciBuPWVbdF07biE9bnVsbCYmci5wdXNoKHQrXCI9XCIra2UobikpfSxcImFkXFxcbmRcIiksbXI9Y2xhc3MgbXJ7Y29uc3RydWN0b3IoZSl7ZT10eXBlb2YgZT09XCJzdHJpbmdcIj9ucyhlKTplfHx7fSxlLmNvbm5lY3Rpb25TdHJpbmcmJlxuKGU9T2JqZWN0LmFzc2lnbih7fSxlLG5zKGUuY29ubmVjdGlvblN0cmluZykpKSx0aGlzLnVzZXI9VihcInVzZXJcIixlKSx0aGlzLmRhdGFiYXNlPVxuVihcImRhdGFiYXNlXCIsZSksdGhpcy5kYXRhYmFzZT09PXZvaWQgMCYmKHRoaXMuZGF0YWJhc2U9dGhpcy51c2VyKSx0aGlzLnBvcnQ9cGFyc2VJbnQoXG5WKFwicG9ydFwiLGUpLDEwKSx0aGlzLmhvc3Q9VihcImhvc3RcIixlKSxPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcyxcInBhc3N3b3JkXCIse2NvbmZpZ3VyYWJsZTohMCxcbmVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6VihcInBhc3N3b3JkXCIsZSl9KSx0aGlzLmJpbmFyeT1WKFwiYmluYXJ5XCIsZSksdGhpcy5cbm9wdGlvbnM9VihcIm9wdGlvbnNcIixlKSx0aGlzLnNzbD10eXBlb2YgZS5zc2w+XCJ1XCI/VHUoKTplLnNzbCx0eXBlb2YgdGhpcy5zc2w9PVwic3RcXFxucmluZ1wiJiZ0aGlzLnNzbD09PVwidHJ1ZVwiJiYodGhpcy5zc2w9ITApLHRoaXMuc3NsPT09XCJuby12ZXJpZnlcIiYmKHRoaXMuc3NsPXtyZWplY3RVbmF1dGhvcml6ZWQ6ITF9KSxcbnRoaXMuc3NsJiZ0aGlzLnNzbC5rZXkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLnNzbCxcImtleVwiLHtlbnVtZXJhYmxlOiExfSksdGhpcy5cbmNsaWVudF9lbmNvZGluZz1WKFwiY2xpZW50X2VuY29kaW5nXCIsZSksdGhpcy5yZXBsaWNhdGlvbj1WKFwicmVwbGljYXRpb25cIixlKSx0aGlzLlxuaXNEb21haW5Tb2NrZXQ9ISh0aGlzLmhvc3R8fFwiXCIpLmluZGV4T2YoXCIvXCIpLHRoaXMuYXBwbGljYXRpb25fbmFtZT1WKFwiYXBwbGljYXRpb1xcXG5uX25hbWVcIixlLFwiUEdBUFBOQU1FXCIpLHRoaXMuZmFsbGJhY2tfYXBwbGljYXRpb25fbmFtZT1WKFwiZmFsbGJhY2tfYXBwbGljYXRpb25fbmFcXFxubWVcIixlLCExKSx0aGlzLnN0YXRlbWVudF90aW1lb3V0PVYoXCJzdGF0ZW1lbnRfdGltZW91dFwiLGUsITEpLHRoaXMubG9ja190aW1lb3V0PVYoXG5cImxvY2tfdGltZW91dFwiLGUsITEpLHRoaXMuaWRsZV9pbl90cmFuc2FjdGlvbl9zZXNzaW9uX3RpbWVvdXQ9VihcImlkbGVfaW5fdHJhbnNhY1xcXG50aW9uX3Nlc3Npb25fdGltZW91dFwiLGUsITEpLHRoaXMucXVlcnlfdGltZW91dD1WKFwicXVlcnlfdGltZW91dFwiLGUsITEpLGUuY29ubmVjdGlvblRpbWVvdXRNaWxsaXM9PT1cbnZvaWQgMD90aGlzLmNvbm5lY3RfdGltZW91dD1tLmVudi5QR0NPTk5FQ1RfVElNRU9VVHx8MDp0aGlzLmNvbm5lY3RfdGltZW91dD1NYXRoLlxuZmxvb3IoZS5jb25uZWN0aW9uVGltZW91dE1pbGxpcy8xZTMpLGUua2VlcEFsaXZlPT09ITE/dGhpcy5rZWVwYWxpdmVzPTA6ZS5rZWVwQWxpdmU9PT1cbiEwJiYodGhpcy5rZWVwYWxpdmVzPTEpLHR5cGVvZiBlLmtlZXBBbGl2ZUluaXRpYWxEZWxheU1pbGxpcz09XCJudW1iZXJcIiYmKHRoaXMua2VlcGFsaXZlc19pZGxlPVxuTWF0aC5mbG9vcihlLmtlZXBBbGl2ZUluaXRpYWxEZWxheU1pbGxpcy8xZTMpKX1nZXRMaWJwcUNvbm5lY3Rpb25TdHJpbmcoZSl7dmFyIHQ9W107XG5yZSh0LHRoaXMsXCJ1c2VyXCIpLHJlKHQsdGhpcyxcInBhc3N3b3JkXCIpLHJlKHQsdGhpcyxcInBvcnRcIikscmUodCx0aGlzLFwiYXBwbGljYXRpb25cXFxuX25hbWVcIikscmUodCx0aGlzLFwiZmFsbGJhY2tfYXBwbGljYXRpb25fbmFtZVwiKSxyZSh0LHRoaXMsXCJjb25uZWN0X3RpbWVvdXRcIikscmUodCxcbnRoaXMsXCJvcHRpb25zXCIpO3ZhciBuPXR5cGVvZiB0aGlzLnNzbD09XCJvYmplY3RcIj90aGlzLnNzbDp0aGlzLnNzbD97c3NsbW9kZTp0aGlzLlxuc3NsfTp7fTtpZihyZSh0LG4sXCJzc2xtb2RlXCIpLHJlKHQsbixcInNzbGNhXCIpLHJlKHQsbixcInNzbGtleVwiKSxyZSh0LG4sXCJzc2xjZXJ0XCIpLFxucmUodCxuLFwic3Nscm9vdGNlcnRcIiksdGhpcy5kYXRhYmFzZSYmdC5wdXNoKFwiZGJuYW1lPVwiK2tlKHRoaXMuZGF0YWJhc2UpKSx0aGlzLnJlcGxpY2F0aW9uJiZcbnQucHVzaChcInJlcGxpY2F0aW9uPVwiK2tlKHRoaXMucmVwbGljYXRpb24pKSx0aGlzLmhvc3QmJnQucHVzaChcImhvc3Q9XCIra2UodGhpcy5ob3N0KSksXG50aGlzLmlzRG9tYWluU29ja2V0KXJldHVybiBlKG51bGwsdC5qb2luKFwiIFwiKSk7dGhpcy5jbGllbnRfZW5jb2RpbmcmJnQucHVzaChcImNsaVxcXG5lbnRfZW5jb2Rpbmc9XCIra2UodGhpcy5jbGllbnRfZW5jb2RpbmcpKSxJdS5sb29rdXAodGhpcy5ob3N0LGZ1bmN0aW9uKGkscyl7cmV0dXJuIGk/XG5lKGksbnVsbCk6KHQucHVzaChcImhvc3RhZGRyPVwiK2tlKHMpKSxlKG51bGwsdC5qb2luKFwiIFwiKSkpfSl9fTthKG1yLFwiQ29ubmVjdGlvblBhXFxcbnJhbWV0ZXJzXCIpO3ZhciB5cj1tcjtzcy5leHBvcnRzPXlyfSk7dmFyIHVzPUkoKEFsLGFzKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXIgUHU9WGUoKSxvcz0vXihbQS1aYS16XSspKD86IChcXGQrKSk/KD86IChcXGQrKSk/LyxcbndyPWNsYXNzIHdye2NvbnN0cnVjdG9yKGUsdCl7dGhpcy5jb21tYW5kPW51bGwsdGhpcy5yb3dDb3VudD1udWxsLHRoaXMub2lkPW51bGwsXG50aGlzLnJvd3M9W10sdGhpcy5maWVsZHM9W10sdGhpcy5fcGFyc2Vycz12b2lkIDAsdGhpcy5fdHlwZXM9dCx0aGlzLlJvd0N0b3I9bnVsbCxcbnRoaXMucm93QXNBcnJheT1lPT09XCJhcnJheVwiLHRoaXMucm93QXNBcnJheSYmKHRoaXMucGFyc2VSb3c9dGhpcy5fcGFyc2VSb3dBc0FycmF5KX1hZGRDb21tYW5kQ29tcGxldGUoZSl7XG52YXIgdDtlLnRleHQ/dD1vcy5leGVjKGUudGV4dCk6dD1vcy5leGVjKGUuY29tbWFuZCksdCYmKHRoaXMuY29tbWFuZD10WzFdLHRbM10/KHRoaXMuXG5vaWQ9cGFyc2VJbnQodFsyXSwxMCksdGhpcy5yb3dDb3VudD1wYXJzZUludCh0WzNdLDEwKSk6dFsyXSYmKHRoaXMucm93Q291bnQ9cGFyc2VJbnQoXG50WzJdLDEwKSkpfV9wYXJzZVJvd0FzQXJyYXkoZSl7Zm9yKHZhciB0PW5ldyBBcnJheShlLmxlbmd0aCksbj0wLGk9ZS5sZW5ndGg7bjxpO24rKyl7XG52YXIgcz1lW25dO3MhPT1udWxsP3Rbbl09dGhpcy5fcGFyc2Vyc1tuXShzKTp0W25dPW51bGx9cmV0dXJuIHR9cGFyc2VSb3coZSl7Zm9yKHZhciB0PXt9LFxubj0wLGk9ZS5sZW5ndGg7bjxpO24rKyl7dmFyIHM9ZVtuXSxvPXRoaXMuZmllbGRzW25dLm5hbWU7cyE9PW51bGw/dFtvXT10aGlzLl9wYXJzZXJzW25dKFxucyk6dFtvXT1udWxsfXJldHVybiB0fWFkZFJvdyhlKXt0aGlzLnJvd3MucHVzaChlKX1hZGRGaWVsZHMoZSl7dGhpcy5maWVsZHM9ZSx0aGlzLlxuZmllbGRzLmxlbmd0aCYmKHRoaXMuX3BhcnNlcnM9bmV3IEFycmF5KGUubGVuZ3RoKSk7Zm9yKHZhciB0PTA7dDxlLmxlbmd0aDt0Kyspe3ZhciBuPWVbdF07XG50aGlzLl90eXBlcz90aGlzLl9wYXJzZXJzW3RdPXRoaXMuX3R5cGVzLmdldFR5cGVQYXJzZXIobi5kYXRhVHlwZUlELG4uZm9ybWF0fHxcInRcXFxuZXh0XCIpOnRoaXMuX3BhcnNlcnNbdF09UHUuZ2V0VHlwZVBhcnNlcihuLmRhdGFUeXBlSUQsbi5mb3JtYXR8fFwidGV4dFwiKX19fTthKHdyLFwiXFxcblJlc3VsdFwiKTt2YXIgZ3I9d3I7YXMuZXhwb3J0cz1ncn0pO3ZhciBmcz1JKChUbCxscyk9PntcInVzZSBzdHJpY3RcIjtwKCk7dmFye0V2ZW50RW1pdHRlcjpCdX09Z2UoKSxjcz11cygpLGhzPXR0KCksU3I9Y2xhc3MgU3IgZXh0ZW5kcyBCdXtjb25zdHJ1Y3RvcihlLHQsbil7XG5zdXBlcigpLGU9aHMubm9ybWFsaXplUXVlcnlDb25maWcoZSx0LG4pLHRoaXMudGV4dD1lLnRleHQsdGhpcy52YWx1ZXM9ZS52YWx1ZXMsdGhpcy5cbnJvd3M9ZS5yb3dzLHRoaXMudHlwZXM9ZS50eXBlcyx0aGlzLm5hbWU9ZS5uYW1lLHRoaXMuYmluYXJ5PWUuYmluYXJ5LHRoaXMucG9ydGFsPVxuZS5wb3J0YWx8fFwiXCIsdGhpcy5jYWxsYmFjaz1lLmNhbGxiYWNrLHRoaXMuX3Jvd01vZGU9ZS5yb3dNb2RlLG0uZG9tYWluJiZlLmNhbGxiYWNrJiZcbih0aGlzLmNhbGxiYWNrPW0uZG9tYWluLmJpbmQoZS5jYWxsYmFjaykpLHRoaXMuX3Jlc3VsdD1uZXcgY3ModGhpcy5fcm93TW9kZSx0aGlzLlxudHlwZXMpLHRoaXMuX3Jlc3VsdHM9dGhpcy5fcmVzdWx0LHRoaXMuaXNQcmVwYXJlZFN0YXRlbWVudD0hMSx0aGlzLl9jYW5jZWxlZER1ZVRvRXJyb3I9XG4hMSx0aGlzLl9wcm9taXNlPW51bGx9cmVxdWlyZXNQcmVwYXJhdGlvbigpe3JldHVybiB0aGlzLm5hbWV8fHRoaXMucm93cz8hMDohdGhpcy5cbnRleHR8fCF0aGlzLnZhbHVlcz8hMTp0aGlzLnZhbHVlcy5sZW5ndGg+MH1fY2hlY2tGb3JNdWx0aXJvdygpe3RoaXMuX3Jlc3VsdC5jb21tYW5kJiZcbihBcnJheS5pc0FycmF5KHRoaXMuX3Jlc3VsdHMpfHwodGhpcy5fcmVzdWx0cz1bdGhpcy5fcmVzdWx0XSksdGhpcy5fcmVzdWx0PW5ldyBjcyhcbnRoaXMuX3Jvd01vZGUsdGhpcy50eXBlcyksdGhpcy5fcmVzdWx0cy5wdXNoKHRoaXMuX3Jlc3VsdCkpfWhhbmRsZVJvd0Rlc2NyaXB0aW9uKGUpe1xudGhpcy5fY2hlY2tGb3JNdWx0aXJvdygpLHRoaXMuX3Jlc3VsdC5hZGRGaWVsZHMoZS5maWVsZHMpLHRoaXMuX2FjY3VtdWxhdGVSb3dzPXRoaXMuXG5jYWxsYmFja3x8IXRoaXMubGlzdGVuZXJzKFwicm93XCIpLmxlbmd0aH1oYW5kbGVEYXRhUm93KGUpe2xldCB0O2lmKCF0aGlzLl9jYW5jZWxlZER1ZVRvRXJyb3Ipe1xudHJ5e3Q9dGhpcy5fcmVzdWx0LnBhcnNlUm93KGUuZmllbGRzKX1jYXRjaChuKXt0aGlzLl9jYW5jZWxlZER1ZVRvRXJyb3I9bjtyZXR1cm59XG50aGlzLmVtaXQoXCJyb3dcIix0LHRoaXMuX3Jlc3VsdCksdGhpcy5fYWNjdW11bGF0ZVJvd3MmJnRoaXMuX3Jlc3VsdC5hZGRSb3codCl9fWhhbmRsZUNvbW1hbmRDb21wbGV0ZShlLHQpe1xudGhpcy5fY2hlY2tGb3JNdWx0aXJvdygpLHRoaXMuX3Jlc3VsdC5hZGRDb21tYW5kQ29tcGxldGUoZSksdGhpcy5yb3dzJiZ0LnN5bmMoKX1oYW5kbGVFbXB0eVF1ZXJ5KGUpe1xudGhpcy5yb3dzJiZlLnN5bmMoKX1oYW5kbGVFcnJvcihlLHQpe2lmKHRoaXMuX2NhbmNlbGVkRHVlVG9FcnJvciYmKGU9dGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yLFxudGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yPSExKSx0aGlzLmNhbGxiYWNrKXJldHVybiB0aGlzLmNhbGxiYWNrKGUpO3RoaXMuZW1pdChcImVyXFxcbnJvclwiLGUpfWhhbmRsZVJlYWR5Rm9yUXVlcnkoZSl7aWYodGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yKXJldHVybiB0aGlzLmhhbmRsZUVycm9yKFxudGhpcy5fY2FuY2VsZWREdWVUb0Vycm9yLGUpO2lmKHRoaXMuY2FsbGJhY2spdHJ5e3RoaXMuY2FsbGJhY2sobnVsbCx0aGlzLl9yZXN1bHRzKX1jYXRjaCh0KXtcbm0ubmV4dFRpY2soKCk9Pnt0aHJvdyB0fSl9dGhpcy5lbWl0KFwiZW5kXCIsdGhpcy5fcmVzdWx0cyl9c3VibWl0KGUpe2lmKHR5cGVvZiB0aGlzLlxudGV4dCE9XCJzdHJpbmdcIiYmdHlwZW9mIHRoaXMubmFtZSE9XCJzdHJpbmdcIilyZXR1cm4gbmV3IEVycm9yKFwiQSBxdWVyeSBtdXN0IGhhdmUgZVxcXG5pdGhlciB0ZXh0IG9yIGEgbmFtZS4gU3VwcGx5aW5nIG5laXRoZXIgaXMgdW5zdXBwb3J0ZWQuXCIpO2xldCB0PWUucGFyc2VkU3RhdGVtZW50c1t0aGlzLlxubmFtZV07cmV0dXJuIHRoaXMudGV4dCYmdCYmdGhpcy50ZXh0IT09dD9uZXcgRXJyb3IoYFByZXBhcmVkIHN0YXRlbWVudHMgbXVzdCBiZSBcXFxudW5pcXVlIC0gJyR7dGhpcy5uYW1lfScgd2FzIHVzZWQgZm9yIGEgZGlmZmVyZW50IHN0YXRlbWVudGApOnRoaXMudmFsdWVzJiYhQXJyYXkuXG5pc0FycmF5KHRoaXMudmFsdWVzKT9uZXcgRXJyb3IoXCJRdWVyeSB2YWx1ZXMgbXVzdCBiZSBhbiBhcnJheVwiKToodGhpcy5yZXF1aXJlc1ByZXBhcmF0aW9uKCk/XG50aGlzLnByZXBhcmUoZSk6ZS5xdWVyeSh0aGlzLnRleHQpLG51bGwpfWhhc0JlZW5QYXJzZWQoZSl7cmV0dXJuIHRoaXMubmFtZSYmZS5wYXJzZWRTdGF0ZW1lbnRzW3RoaXMuXG5uYW1lXX1oYW5kbGVQb3J0YWxTdXNwZW5kZWQoZSl7dGhpcy5fZ2V0Um93cyhlLHRoaXMucm93cyl9X2dldFJvd3MoZSx0KXtlLmV4ZWN1dGUoXG57cG9ydGFsOnRoaXMucG9ydGFsLHJvd3M6dH0pLHQ/ZS5mbHVzaCgpOmUuc3luYygpfXByZXBhcmUoZSl7dGhpcy5pc1ByZXBhcmVkU3RhdGVtZW50PVxuITAsdGhpcy5oYXNCZWVuUGFyc2VkKGUpfHxlLnBhcnNlKHt0ZXh0OnRoaXMudGV4dCxuYW1lOnRoaXMubmFtZSx0eXBlczp0aGlzLnR5cGVzfSk7XG50cnl7ZS5iaW5kKHtwb3J0YWw6dGhpcy5wb3J0YWwsc3RhdGVtZW50OnRoaXMubmFtZSx2YWx1ZXM6dGhpcy52YWx1ZXMsYmluYXJ5OnRoaXMuXG5iaW5hcnksdmFsdWVNYXBwZXI6aHMucHJlcGFyZVZhbHVlfSl9Y2F0Y2godCl7dGhpcy5oYW5kbGVFcnJvcih0LGUpO3JldHVybn1lLmRlc2NyaWJlKFxue3R5cGU6XCJQXCIsbmFtZTp0aGlzLnBvcnRhbHx8XCJcIn0pLHRoaXMuX2dldFJvd3MoZSx0aGlzLnJvd3MpfWhhbmRsZUNvcHlJblJlc3BvbnNlKGUpe1xuZS5zZW5kQ29weUZhaWwoXCJObyBzb3VyY2Ugc3RyZWFtIGRlZmluZWRcIil9aGFuZGxlQ29weURhdGEoZSx0KXt9fTthKFNyLFwiUXVlcnlcIik7XG52YXIgYnI9U3I7bHMuZXhwb3J0cz1icn0pO3ZhciBkcz17fTtYKGRzLHtTb2NrZXQ6KCk9Pl9lLGlzSVA6KCk9Pkx1fSk7ZnVuY3Rpb24gTHUocil7cmV0dXJuIDB9dmFyIHBzLHgsX2UsXG53dD1LKCgpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3BzPVdlKGdlKCksMSk7YShMdSxcImlzSVBcIik7eD1jbGFzcyB4IGV4dGVuZHMgcHMuRXZlbnRFbWl0dGVye2NvbnN0cnVjdG9yKCl7XG5zdXBlciguLi5hcmd1bWVudHMpO1QodGhpcyxcIm9wdHNcIix7fSk7VCh0aGlzLFwiY29ubmVjdGluZ1wiLCExKTtUKHRoaXMsXCJwZW5kaW5nXCIsITApO1xuVCh0aGlzLFwid3JpdGFibGVcIiwhMCk7VCh0aGlzLFwiZW5jcnlwdGVkXCIsITEpO1QodGhpcyxcImF1dGhvcml6ZWRcIiwhMSk7VCh0aGlzLFwiZGVzXFxcbnRyb3llZFwiLCExKTtUKHRoaXMsXCJ3c1wiLG51bGwpO1QodGhpcyxcIndyaXRlQnVmZmVyXCIpO1QodGhpcyxcInRsc1N0YXRlXCIsMCk7VCh0aGlzLFxuXCJ0bHNSZWFkXCIpO1QodGhpcyxcInRsc1dyaXRlXCIpfXN0YXRpYyBnZXQgcG9vbFF1ZXJ5VmlhRmV0Y2goKXtyZXR1cm4geC5vcHRzLnBvb2xRdWVyeVZpYUZldGNoPz9cbnguZGVmYXVsdHMucG9vbFF1ZXJ5VmlhRmV0Y2h9c3RhdGljIHNldCBwb29sUXVlcnlWaWFGZXRjaCh0KXt4Lm9wdHMucG9vbFF1ZXJ5VmlhRmV0Y2g9XG50fXN0YXRpYyBnZXQgZmV0Y2hFbmRwb2ludCgpe3JldHVybiB4Lm9wdHMuZmV0Y2hFbmRwb2ludD8/eC5kZWZhdWx0cy5mZXRjaEVuZHBvaW50fXN0YXRpYyBzZXQgZmV0Y2hFbmRwb2ludCh0KXtcbngub3B0cy5mZXRjaEVuZHBvaW50PXR9c3RhdGljIGdldCBmZXRjaENvbm5lY3Rpb25DYWNoZSgpe3JldHVybiB4Lm9wdHMuZmV0Y2hDb25uZWN0aW9uQ2FjaGU/P1xueC5kZWZhdWx0cy5mZXRjaENvbm5lY3Rpb25DYWNoZX1zdGF0aWMgc2V0IGZldGNoQ29ubmVjdGlvbkNhY2hlKHQpe3gub3B0cy5mZXRjaENvbm5lY3Rpb25DYWNoZT1cbnR9c3RhdGljIGdldCBmZXRjaEZ1bmN0aW9uKCl7cmV0dXJuIHgub3B0cy5mZXRjaEZ1bmN0aW9uPz94LmRlZmF1bHRzLmZldGNoRnVuY3Rpb259c3RhdGljIHNldCBmZXRjaEZ1bmN0aW9uKHQpe1xueC5vcHRzLmZldGNoRnVuY3Rpb249dH1zdGF0aWMgZ2V0IHdlYlNvY2tldENvbnN0cnVjdG9yKCl7cmV0dXJuIHgub3B0cy53ZWJTb2NrZXRDb25zdHJ1Y3Rvcj8/XG54LmRlZmF1bHRzLndlYlNvY2tldENvbnN0cnVjdG9yfXN0YXRpYyBzZXQgd2ViU29ja2V0Q29uc3RydWN0b3IodCl7eC5vcHRzLndlYlNvY2tldENvbnN0cnVjdG9yPVxudH1nZXQgd2ViU29ja2V0Q29uc3RydWN0b3IoKXtyZXR1cm4gdGhpcy5vcHRzLndlYlNvY2tldENvbnN0cnVjdG9yPz94LndlYlNvY2tldENvbnN0cnVjdG9yfXNldCB3ZWJTb2NrZXRDb25zdHJ1Y3Rvcih0KXtcbnRoaXMub3B0cy53ZWJTb2NrZXRDb25zdHJ1Y3Rvcj10fXN0YXRpYyBnZXQgd3NQcm94eSgpe3JldHVybiB4Lm9wdHMud3NQcm94eT8/eC5kZWZhdWx0cy5cbndzUHJveHl9c3RhdGljIHNldCB3c1Byb3h5KHQpe3gub3B0cy53c1Byb3h5PXR9Z2V0IHdzUHJveHkoKXtyZXR1cm4gdGhpcy5vcHRzLndzUHJveHk/P1xueC53c1Byb3h5fXNldCB3c1Byb3h5KHQpe3RoaXMub3B0cy53c1Byb3h5PXR9c3RhdGljIGdldCBjb2FsZXNjZVdyaXRlcygpe3JldHVybiB4Llxub3B0cy5jb2FsZXNjZVdyaXRlcz8/eC5kZWZhdWx0cy5jb2FsZXNjZVdyaXRlc31zdGF0aWMgc2V0IGNvYWxlc2NlV3JpdGVzKHQpe3gub3B0cy5cbmNvYWxlc2NlV3JpdGVzPXR9Z2V0IGNvYWxlc2NlV3JpdGVzKCl7cmV0dXJuIHRoaXMub3B0cy5jb2FsZXNjZVdyaXRlcz8/eC5jb2FsZXNjZVdyaXRlc31zZXQgY29hbGVzY2VXcml0ZXModCl7XG50aGlzLm9wdHMuY29hbGVzY2VXcml0ZXM9dH1zdGF0aWMgZ2V0IHVzZVNlY3VyZVdlYlNvY2tldCgpe3JldHVybiB4Lm9wdHMudXNlU2VjdXJlV2ViU29ja2V0Pz9cbnguZGVmYXVsdHMudXNlU2VjdXJlV2ViU29ja2V0fXN0YXRpYyBzZXQgdXNlU2VjdXJlV2ViU29ja2V0KHQpe3gub3B0cy51c2VTZWN1cmVXZWJTb2NrZXQ9XG50fWdldCB1c2VTZWN1cmVXZWJTb2NrZXQoKXtyZXR1cm4gdGhpcy5vcHRzLnVzZVNlY3VyZVdlYlNvY2tldD8/eC51c2VTZWN1cmVXZWJTb2NrZXR9c2V0IHVzZVNlY3VyZVdlYlNvY2tldCh0KXtcbnRoaXMub3B0cy51c2VTZWN1cmVXZWJTb2NrZXQ9dH1zdGF0aWMgZ2V0IGZvcmNlRGlzYWJsZVBnU1NMKCl7cmV0dXJuIHgub3B0cy5mb3JjZURpc2FibGVQZ1NTTD8/XG54LmRlZmF1bHRzLmZvcmNlRGlzYWJsZVBnU1NMfXN0YXRpYyBzZXQgZm9yY2VEaXNhYmxlUGdTU0wodCl7eC5vcHRzLmZvcmNlRGlzYWJsZVBnU1NMPVxudH1nZXQgZm9yY2VEaXNhYmxlUGdTU0woKXtyZXR1cm4gdGhpcy5vcHRzLmZvcmNlRGlzYWJsZVBnU1NMPz94LmZvcmNlRGlzYWJsZVBnU1NMfXNldCBmb3JjZURpc2FibGVQZ1NTTCh0KXtcbnRoaXMub3B0cy5mb3JjZURpc2FibGVQZ1NTTD10fXN0YXRpYyBnZXQgZGlzYWJsZVNOSSgpe3JldHVybiB4Lm9wdHMuZGlzYWJsZVNOST8/XG54LmRlZmF1bHRzLmRpc2FibGVTTkl9c3RhdGljIHNldCBkaXNhYmxlU05JKHQpe3gub3B0cy5kaXNhYmxlU05JPXR9Z2V0IGRpc2FibGVTTkkoKXtcbnJldHVybiB0aGlzLm9wdHMuZGlzYWJsZVNOST8/eC5kaXNhYmxlU05JfXNldCBkaXNhYmxlU05JKHQpe3RoaXMub3B0cy5kaXNhYmxlU05JPVxudH1zdGF0aWMgZ2V0IHBpcGVsaW5lQ29ubmVjdCgpe3JldHVybiB4Lm9wdHMucGlwZWxpbmVDb25uZWN0Pz94LmRlZmF1bHRzLnBpcGVsaW5lQ29ubmVjdH1zdGF0aWMgc2V0IHBpcGVsaW5lQ29ubmVjdCh0KXtcbngub3B0cy5waXBlbGluZUNvbm5lY3Q9dH1nZXQgcGlwZWxpbmVDb25uZWN0KCl7cmV0dXJuIHRoaXMub3B0cy5waXBlbGluZUNvbm5lY3Q/P1xueC5waXBlbGluZUNvbm5lY3R9c2V0IHBpcGVsaW5lQ29ubmVjdCh0KXt0aGlzLm9wdHMucGlwZWxpbmVDb25uZWN0PXR9c3RhdGljIGdldCBzdWJ0bHMoKXtcbnJldHVybiB4Lm9wdHMuc3VidGxzPz94LmRlZmF1bHRzLnN1YnRsc31zdGF0aWMgc2V0IHN1YnRscyh0KXt4Lm9wdHMuc3VidGxzPXR9Z2V0IHN1YnRscygpe1xucmV0dXJuIHRoaXMub3B0cy5zdWJ0bHM/P3guc3VidGxzfXNldCBzdWJ0bHModCl7dGhpcy5vcHRzLnN1YnRscz10fXN0YXRpYyBnZXQgcGlwZWxpbmVUTFMoKXtcbnJldHVybiB4Lm9wdHMucGlwZWxpbmVUTFM/P3guZGVmYXVsdHMucGlwZWxpbmVUTFN9c3RhdGljIHNldCBwaXBlbGluZVRMUyh0KXt4Lm9wdHMuXG5waXBlbGluZVRMUz10fWdldCBwaXBlbGluZVRMUygpe3JldHVybiB0aGlzLm9wdHMucGlwZWxpbmVUTFM/P3gucGlwZWxpbmVUTFN9c2V0IHBpcGVsaW5lVExTKHQpe1xudGhpcy5vcHRzLnBpcGVsaW5lVExTPXR9c3RhdGljIGdldCByb290Q2VydHMoKXtyZXR1cm4geC5vcHRzLnJvb3RDZXJ0cz8/eC5kZWZhdWx0cy5cbnJvb3RDZXJ0c31zdGF0aWMgc2V0IHJvb3RDZXJ0cyh0KXt4Lm9wdHMucm9vdENlcnRzPXR9Z2V0IHJvb3RDZXJ0cygpe3JldHVybiB0aGlzLlxub3B0cy5yb290Q2VydHM/P3gucm9vdENlcnRzfXNldCByb290Q2VydHModCl7dGhpcy5vcHRzLnJvb3RDZXJ0cz10fXdzUHJveHlBZGRyRm9ySG9zdCh0LG4pe1xubGV0IGk9dGhpcy53c1Byb3h5O2lmKGk9PT12b2lkIDApdGhyb3cgbmV3IEVycm9yKFwiTm8gV2ViU29ja2V0IHByb3h5IGlzIGNvbmZpZ3VyXFxcbmVkLiBQbGVhc2Ugc2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9uZW9uZGF0YWJhc2Uvc2VydmVybGVzcy9ibG9iL21haW4vQ09ORklHLm1kI3dzXFxcbnByb3h5LXN0cmluZy0taG9zdC1zdHJpbmctcG9ydC1udW1iZXItLXN0cmluZy0tc3RyaW5nXCIpO3JldHVybiB0eXBlb2YgaT09XCJmdW5jdGlcXFxub25cIj9pKHQsbik6YCR7aX0/YWRkcmVzcz0ke3R9OiR7bn1gfXNldE5vRGVsYXkoKXtyZXR1cm4gdGhpc31zZXRLZWVwQWxpdmUoKXtyZXR1cm4gdGhpc31yZWYoKXtcbnJldHVybiB0aGlzfXVucmVmKCl7cmV0dXJuIHRoaXN9Y29ubmVjdCh0LG4saSl7dGhpcy5jb25uZWN0aW5nPSEwLGkmJnRoaXMub25jZShcIlxcXG5jb25uZWN0XCIsaSk7bGV0IHM9YSgoKT0+e3RoaXMuY29ubmVjdGluZz0hMSx0aGlzLnBlbmRpbmc9ITEsdGhpcy5lbWl0KFwiY29ubmVjdFwiKSxcbnRoaXMuZW1pdChcInJlYWR5XCIpfSxcImhhbmRsZVdlYlNvY2tldE9wZW5cIiksbz1hKChjLGg9ITEpPT57Yy5iaW5hcnlUeXBlPVwiYXJyYXlidWZcXFxuZmVyXCIsYy5hZGRFdmVudExpc3RlbmVyKFwiZXJyb3JcIixsPT57dGhpcy5lbWl0KFwiZXJyb3JcIixsKSx0aGlzLmVtaXQoXCJjbG9zZVwiKX0pLGMuXG5hZGRFdmVudExpc3RlbmVyKFwibWVzc2FnZVwiLGw9PntpZih0aGlzLnRsc1N0YXRlPT09MCl7bGV0IHk9ZC5mcm9tKGwuZGF0YSk7dGhpcy5lbWl0KFxuXCJkYXRhXCIseSl9fSksYy5hZGRFdmVudExpc3RlbmVyKFwiY2xvc2VcIiwoKT0+e3RoaXMuZW1pdChcImNsb3NlXCIpfSksaD9zKCk6Yy5hZGRFdmVudExpc3RlbmVyKFxuXCJvcGVuXCIscyl9LFwiY29uZmlndXJlV2ViU29ja2V0XCIpLHU7dHJ5e3U9dGhpcy53c1Byb3h5QWRkckZvckhvc3Qobix0eXBlb2YgdD09XCJzdFxcXG5yaW5nXCI/cGFyc2VJbnQodCwxMCk6dCl9Y2F0Y2goYyl7dGhpcy5lbWl0KFwiZXJyb3JcIixjKSx0aGlzLmVtaXQoXCJjbG9zZVwiKTtyZXR1cm59XG50cnl7bGV0IGg9KHRoaXMudXNlU2VjdXJlV2ViU29ja2V0P1wid3NzOlwiOlwid3M6XCIpK1wiLy9cIit1O2lmKHRoaXMud2ViU29ja2V0Q29uc3RydWN0b3IhPT1cbnZvaWQgMCl0aGlzLndzPW5ldyB0aGlzLndlYlNvY2tldENvbnN0cnVjdG9yKGgpLG8odGhpcy53cyk7ZWxzZSB0cnl7dGhpcy53cz1uZXcgV2ViU29ja2V0KFxuaCksbyh0aGlzLndzKX1jYXRjaHt0aGlzLndzPW5ldyBfX3Vuc3RhYmxlX1dlYlNvY2tldChoKSxvKHRoaXMud3MpfX1jYXRjaChjKXtsZXQgbD0odGhpcy5cbnVzZVNlY3VyZVdlYlNvY2tldD9cImh0dHBzOlwiOlwiaHR0cDpcIikrXCIvL1wiK3U7ZmV0Y2gobCx7aGVhZGVyczp7VXBncmFkZTpcIndlYnNvY2tldFwifX0pLlxudGhlbih5PT57aWYodGhpcy53cz15LndlYlNvY2tldCx0aGlzLndzPT1udWxsKXRocm93IGM7dGhpcy53cy5hY2NlcHQoKSxvKHRoaXMud3MsXG4hMCl9KS5jYXRjaCh5PT57dGhpcy5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoYEFsbCBhdHRlbXB0cyB0byBvcGVuIGEgV2ViU29ja2V0IHRvXFxcbiBjb25uZWN0IHRvIHRoZSBkYXRhYmFzZSBmYWlsZWQuIFBsZWFzZSByZWZlciB0byBodHRwczovL2dpdGh1Yi5jb20vbmVvbmRhdGFiYXNlXFxcbi9zZXJ2ZXJsZXNzL2Jsb2IvbWFpbi9DT05GSUcubWQjd2Vic29ja2V0Y29uc3RydWN0b3ItdHlwZW9mLXdlYnNvY2tldC0tdW5kZWZpbmVkXFxcbi4gRGV0YWlsczogJHt5Lm1lc3NhZ2V9YCkpLHRoaXMuZW1pdChcImNsb3NlXCIpfSl9fWFzeW5jIHN0YXJ0VGxzKHQpe2lmKHRoaXMuc3VidGxzPT09XG52b2lkIDApdGhyb3cgbmV3IEVycm9yKFwiRm9yIFBvc3RncmVzIFNTTCBjb25uZWN0aW9ucywgeW91IG11c3Qgc2V0IGBuZW9uQ29uZmlnLnNcXFxudWJ0bHNgIHRvIHRoZSBzdWJ0bHMgbGlicmFyeS4gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9uZW9uZGF0YWJhc2Uvc2VydmVybGVzcy9ibG9cXFxuYi9tYWluL0NPTkZJRy5tZCBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cIik7dGhpcy50bHNTdGF0ZT0xO2xldCBuPXRoaXMuc3VidGxzLlRydXN0ZWRDZXJ0LlxuZnJvbVBFTSh0aGlzLnJvb3RDZXJ0cyksaT1uZXcgdGhpcy5zdWJ0bHMuV2ViU29ja2V0UmVhZFF1ZXVlKHRoaXMud3MpLHM9aS5yZWFkLmJpbmQoXG5pKSxvPXRoaXMucmF3V3JpdGUuYmluZCh0aGlzKSxbdSxjXT1hd2FpdCB0aGlzLnN1YnRscy5zdGFydFRscyh0LG4scyxvLHt1c2VTTkk6IXRoaXMuXG5kaXNhYmxlU05JLGV4cGVjdFByZURhdGE6dGhpcy5waXBlbGluZVRMUz9uZXcgVWludDhBcnJheShbODNdKTp2b2lkIDB9KTt0aGlzLnRsc1JlYWQ9XG51LHRoaXMudGxzV3JpdGU9Yyx0aGlzLnRsc1N0YXRlPTIsdGhpcy5lbmNyeXB0ZWQ9ITAsdGhpcy5hdXRob3JpemVkPSEwLHRoaXMuZW1pdChcblwic2VjdXJlQ29ubmVjdGlvblwiLHRoaXMpLHRoaXMudGxzUmVhZExvb3AoKX1hc3luYyB0bHNSZWFkTG9vcCgpe2Zvcig7Oyl7bGV0IHQ9YXdhaXQgdGhpcy5cbnRsc1JlYWQoKTtpZih0PT09dm9pZCAwKWJyZWFrO3tsZXQgbj1kLmZyb20odCk7dGhpcy5lbWl0KFwiZGF0YVwiLG4pfX19cmF3V3JpdGUodCl7XG5pZighdGhpcy5jb2FsZXNjZVdyaXRlcyl7dGhpcy53cy5zZW5kKHQpO3JldHVybn1pZih0aGlzLndyaXRlQnVmZmVyPT09dm9pZCAwKXRoaXMuXG53cml0ZUJ1ZmZlcj10LHNldFRpbWVvdXQoKCk9Pnt0aGlzLndzLnNlbmQodGhpcy53cml0ZUJ1ZmZlciksdGhpcy53cml0ZUJ1ZmZlcj12b2lkIDB9LFxuMCk7ZWxzZXtsZXQgbj1uZXcgVWludDhBcnJheSh0aGlzLndyaXRlQnVmZmVyLmxlbmd0aCt0Lmxlbmd0aCk7bi5zZXQodGhpcy53cml0ZUJ1ZmZlciksXG5uLnNldCh0LHRoaXMud3JpdGVCdWZmZXIubGVuZ3RoKSx0aGlzLndyaXRlQnVmZmVyPW59fXdyaXRlKHQsbj1cInV0ZjhcIixpPXM9Pnt9KXtyZXR1cm4gdC5cbmxlbmd0aD09PTA/KGkoKSwhMCk6KHR5cGVvZiB0PT1cInN0cmluZ1wiJiYodD1kLmZyb20odCxuKSksdGhpcy50bHNTdGF0ZT09PTA/KHRoaXMuXG5yYXdXcml0ZSh0KSxpKCkpOnRoaXMudGxzU3RhdGU9PT0xP3RoaXMub25jZShcInNlY3VyZUNvbm5lY3Rpb25cIiwoKT0+e3RoaXMud3JpdGUoXG50LG4saSl9KToodGhpcy50bHNXcml0ZSh0KSxpKCkpLCEwKX1lbmQodD1kLmFsbG9jKDApLG49XCJ1dGY4XCIsaT0oKT0+e30pe3JldHVybiB0aGlzLlxud3JpdGUodCxuLCgpPT57dGhpcy53cy5jbG9zZSgpLGkoKX0pLHRoaXN9ZGVzdHJveSgpe3JldHVybiB0aGlzLmRlc3Ryb3llZD0hMCx0aGlzLlxuZW5kKCl9fTthKHgsXCJTb2NrZXRcIiksVCh4LFwiZGVmYXVsdHNcIix7cG9vbFF1ZXJ5VmlhRmV0Y2g6ITEsZmV0Y2hFbmRwb2ludDp0PT5cImh0dFxcXG5wczovL1wiK3QrXCIvc3FsXCIsZmV0Y2hDb25uZWN0aW9uQ2FjaGU6ITEsZmV0Y2hGdW5jdGlvbjp2b2lkIDAsd2ViU29ja2V0Q29uc3RydWN0b3I6dm9pZCAwLFxud3NQcm94eTp0PT50K1wiL3YyXCIsdXNlU2VjdXJlV2ViU29ja2V0OiEwLGZvcmNlRGlzYWJsZVBnU1NMOiEwLGNvYWxlc2NlV3JpdGVzOiEwLFxucGlwZWxpbmVDb25uZWN0OlwicGFzc3dvcmRcIixzdWJ0bHM6dm9pZCAwLHJvb3RDZXJ0czpcIlwiLHBpcGVsaW5lVExTOiExLGRpc2FibGVTTkk6ITF9KSxcblQoeCxcIm9wdHNcIix7fSk7X2U9eH0pO3ZhciB6cj1JKEM9PntcInVzZSBzdHJpY3RcIjtwKCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KEMsXCJfX2VzTW9kdWxlXCIse3ZhbHVlOiEwfSk7Qy5cbk5vdGljZU1lc3NhZ2U9Qy5EYXRhUm93TWVzc2FnZT1DLkNvbW1hbmRDb21wbGV0ZU1lc3NhZ2U9Qy5SZWFkeUZvclF1ZXJ5TWVzc2FnZT1DLlxuTm90aWZpY2F0aW9uUmVzcG9uc2VNZXNzYWdlPUMuQmFja2VuZEtleURhdGFNZXNzYWdlPUMuQXV0aGVudGljYXRpb25NRDVQYXNzd29yZD1cbkMuUGFyYW1ldGVyU3RhdHVzTWVzc2FnZT1DLlBhcmFtZXRlckRlc2NyaXB0aW9uTWVzc2FnZT1DLlJvd0Rlc2NyaXB0aW9uTWVzc2FnZT1DLlxuRmllbGQ9Qy5Db3B5UmVzcG9uc2U9Qy5Db3B5RGF0YU1lc3NhZ2U9Qy5EYXRhYmFzZUVycm9yPUMuY29weURvbmU9Qy5lbXB0eVF1ZXJ5PUMuXG5yZXBsaWNhdGlvblN0YXJ0PUMucG9ydGFsU3VzcGVuZGVkPUMubm9EYXRhPUMuY2xvc2VDb21wbGV0ZT1DLmJpbmRDb21wbGV0ZT1DLnBhcnNlQ29tcGxldGU9XG52b2lkIDA7Qy5wYXJzZUNvbXBsZXRlPXtuYW1lOlwicGFyc2VDb21wbGV0ZVwiLGxlbmd0aDo1fTtDLmJpbmRDb21wbGV0ZT17bmFtZTpcImJpblxcXG5kQ29tcGxldGVcIixsZW5ndGg6NX07Qy5jbG9zZUNvbXBsZXRlPXtuYW1lOlwiY2xvc2VDb21wbGV0ZVwiLGxlbmd0aDo1fTtDLm5vRGF0YT17bmFtZTpcIlxcXG5ub0RhdGFcIixsZW5ndGg6NX07Qy5wb3J0YWxTdXNwZW5kZWQ9e25hbWU6XCJwb3J0YWxTdXNwZW5kZWRcIixsZW5ndGg6NX07Qy5yZXBsaWNhdGlvblN0YXJ0PVxue25hbWU6XCJyZXBsaWNhdGlvblN0YXJ0XCIsbGVuZ3RoOjR9O0MuZW1wdHlRdWVyeT17bmFtZTpcImVtcHR5UXVlcnlcIixsZW5ndGg6NH07Qy5jb3B5RG9uZT1cbntuYW1lOlwiY29weURvbmVcIixsZW5ndGg6NH07dmFyIERyPWNsYXNzIERyIGV4dGVuZHMgRXJyb3J7Y29uc3RydWN0b3IoZSx0LG4pe3N1cGVyKFxuZSksdGhpcy5sZW5ndGg9dCx0aGlzLm5hbWU9bn19O2EoRHIsXCJEYXRhYmFzZUVycm9yXCIpO3ZhciB4cj1EcjtDLkRhdGFiYXNlRXJyb3I9eHI7XG52YXIgT3I9Y2xhc3MgT3J7Y29uc3RydWN0b3IoZSx0KXt0aGlzLmxlbmd0aD1lLHRoaXMuY2h1bms9dCx0aGlzLm5hbWU9XCJjb3B5RGF0YVwifX07XG5hKE9yLFwiQ29weURhdGFNZXNzYWdlXCIpO3ZhciBFcj1PcjtDLkNvcHlEYXRhTWVzc2FnZT1Fcjt2YXIga3I9Y2xhc3Mga3J7Y29uc3RydWN0b3IoZSx0LG4saSl7XG50aGlzLmxlbmd0aD1lLHRoaXMubmFtZT10LHRoaXMuYmluYXJ5PW4sdGhpcy5jb2x1bW5UeXBlcz1uZXcgQXJyYXkoaSl9fTthKGtyLFwiQ29cXFxucHlSZXNwb25zZVwiKTt2YXIgdnI9a3I7Qy5Db3B5UmVzcG9uc2U9dnI7dmFyIFVyPWNsYXNzIFVye2NvbnN0cnVjdG9yKGUsdCxuLGkscyxvLHUpe1xudGhpcy5uYW1lPWUsdGhpcy50YWJsZUlEPXQsdGhpcy5jb2x1bW5JRD1uLHRoaXMuZGF0YVR5cGVJRD1pLHRoaXMuZGF0YVR5cGVTaXplPXMsXG50aGlzLmRhdGFUeXBlTW9kaWZpZXI9byx0aGlzLmZvcm1hdD11fX07YShVcixcIkZpZWxkXCIpO3ZhciBfcj1VcjtDLkZpZWxkPV9yO3ZhciBxcj1jbGFzcyBxcntjb25zdHJ1Y3RvcihlLHQpe1xudGhpcy5sZW5ndGg9ZSx0aGlzLmZpZWxkQ291bnQ9dCx0aGlzLm5hbWU9XCJyb3dEZXNjcmlwdGlvblwiLHRoaXMuZmllbGRzPW5ldyBBcnJheShcbnRoaXMuZmllbGRDb3VudCl9fTthKHFyLFwiUm93RGVzY3JpcHRpb25NZXNzYWdlXCIpO3ZhciBBcj1xcjtDLlJvd0Rlc2NyaXB0aW9uTWVzc2FnZT1cbkFyO3ZhciBOcj1jbGFzcyBOcntjb25zdHJ1Y3RvcihlLHQpe3RoaXMubGVuZ3RoPWUsdGhpcy5wYXJhbWV0ZXJDb3VudD10LHRoaXMubmFtZT1cblwicGFyYW1ldGVyRGVzY3JpcHRpb25cIix0aGlzLmRhdGFUeXBlSURzPW5ldyBBcnJheSh0aGlzLnBhcmFtZXRlckNvdW50KX19O2EoTnIsXCJQXFxcbmFyYW1ldGVyRGVzY3JpcHRpb25NZXNzYWdlXCIpO3ZhciBDcj1OcjtDLlBhcmFtZXRlckRlc2NyaXB0aW9uTWVzc2FnZT1Dcjt2YXIgUXI9Y2xhc3MgUXJ7Y29uc3RydWN0b3IoZSx0LG4pe1xudGhpcy5sZW5ndGg9ZSx0aGlzLnBhcmFtZXRlck5hbWU9dCx0aGlzLnBhcmFtZXRlclZhbHVlPW4sdGhpcy5uYW1lPVwicGFyYW1ldGVyU3RhXFxcbnR1c1wifX07YShRcixcIlBhcmFtZXRlclN0YXR1c01lc3NhZ2VcIik7dmFyIElyPVFyO0MuUGFyYW1ldGVyU3RhdHVzTWVzc2FnZT1Jcjt2YXIgV3I9Y2xhc3MgV3J7Y29uc3RydWN0b3IoZSx0KXtcbnRoaXMubGVuZ3RoPWUsdGhpcy5zYWx0PXQsdGhpcy5uYW1lPVwiYXV0aGVudGljYXRpb25NRDVQYXNzd29yZFwifX07YShXcixcIkF1dGhlbnRpXFxcbmNhdGlvbk1ENVBhc3N3b3JkXCIpO3ZhciBUcj1XcjtDLkF1dGhlbnRpY2F0aW9uTUQ1UGFzc3dvcmQ9VHI7dmFyIGpyPWNsYXNzIGpye2NvbnN0cnVjdG9yKGUsdCxuKXtcbnRoaXMubGVuZ3RoPWUsdGhpcy5wcm9jZXNzSUQ9dCx0aGlzLnNlY3JldEtleT1uLHRoaXMubmFtZT1cImJhY2tlbmRLZXlEYXRhXCJ9fTthKGpyLFxuXCJCYWNrZW5kS2V5RGF0YU1lc3NhZ2VcIik7dmFyIFByPWpyO0MuQmFja2VuZEtleURhdGFNZXNzYWdlPVByO3ZhciBIcj1jbGFzcyBIcntjb25zdHJ1Y3RvcihlLHQsbixpKXtcbnRoaXMubGVuZ3RoPWUsdGhpcy5wcm9jZXNzSWQ9dCx0aGlzLmNoYW5uZWw9bix0aGlzLnBheWxvYWQ9aSx0aGlzLm5hbWU9XCJub3RpZmljYVxcXG50aW9uXCJ9fTthKEhyLFwiTm90aWZpY2F0aW9uUmVzcG9uc2VNZXNzYWdlXCIpO3ZhciBCcj1IcjtDLk5vdGlmaWNhdGlvblJlc3BvbnNlTWVzc2FnZT1cbkJyO3ZhciBHcj1jbGFzcyBHcntjb25zdHJ1Y3RvcihlLHQpe3RoaXMubGVuZ3RoPWUsdGhpcy5zdGF0dXM9dCx0aGlzLm5hbWU9XCJyZWFkeVxcXG5Gb3JRdWVyeVwifX07YShHcixcIlJlYWR5Rm9yUXVlcnlNZXNzYWdlXCIpO3ZhciBMcj1HcjtDLlJlYWR5Rm9yUXVlcnlNZXNzYWdlPUxyO3ZhciAkcj1jbGFzcyAkcntjb25zdHJ1Y3RvcihlLHQpe1xudGhpcy5sZW5ndGg9ZSx0aGlzLnRleHQ9dCx0aGlzLm5hbWU9XCJjb21tYW5kQ29tcGxldGVcIn19O2EoJHIsXCJDb21tYW5kQ29tcGxldGVNZXNcXFxuc2FnZVwiKTt2YXIgUnI9JHI7Qy5Db21tYW5kQ29tcGxldGVNZXNzYWdlPVJyO3ZhciBLcj1jbGFzcyBLcntjb25zdHJ1Y3RvcihlLHQpe3RoaXMuXG5sZW5ndGg9ZSx0aGlzLmZpZWxkcz10LHRoaXMubmFtZT1cImRhdGFSb3dcIix0aGlzLmZpZWxkQ291bnQ9dC5sZW5ndGh9fTthKEtyLFwiRGF0YVxcXG5Sb3dNZXNzYWdlXCIpO3ZhciBGcj1LcjtDLkRhdGFSb3dNZXNzYWdlPUZyO3ZhciBWcj1jbGFzcyBWcntjb25zdHJ1Y3RvcihlLHQpe3RoaXMuXG5sZW5ndGg9ZSx0aGlzLm1lc3NhZ2U9dCx0aGlzLm5hbWU9XCJub3RpY2VcIn19O2EoVnIsXCJOb3RpY2VNZXNzYWdlXCIpO3ZhciBNcj1WcjtDLk5vdGljZU1lc3NhZ2U9XG5Ncn0pO3ZhciB5cz1JKGJ0PT57XCJ1c2Ugc3RyaWN0XCI7cCgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShidCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTtcbmJ0LldyaXRlcj12b2lkIDA7dmFyIFpyPWNsYXNzIFpye2NvbnN0cnVjdG9yKGU9MjU2KXt0aGlzLnNpemU9ZSx0aGlzLm9mZnNldD01LHRoaXMuXG5oZWFkZXJQb3NpdGlvbj0wLHRoaXMuYnVmZmVyPWQuYWxsb2NVbnNhZmUoZSl9ZW5zdXJlKGUpe3ZhciB0PXRoaXMuYnVmZmVyLmxlbmd0aC1cbnRoaXMub2Zmc2V0O2lmKHQ8ZSl7dmFyIG49dGhpcy5idWZmZXIsaT1uLmxlbmd0aCsobi5sZW5ndGg+PjEpK2U7dGhpcy5idWZmZXI9ZC5hbGxvY1Vuc2FmZShcbmkpLG4uY29weSh0aGlzLmJ1ZmZlcil9fWFkZEludDMyKGUpe3JldHVybiB0aGlzLmVuc3VyZSg0KSx0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCsrXT1cbmU+Pj4yNCYyNTUsdGhpcy5idWZmZXJbdGhpcy5vZmZzZXQrK109ZT4+PjE2JjI1NSx0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCsrXT1lPj4+XG44JjI1NSx0aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCsrXT1lPj4+MCYyNTUsdGhpc31hZGRJbnQxNihlKXtyZXR1cm4gdGhpcy5lbnN1cmUoMiksXG50aGlzLmJ1ZmZlclt0aGlzLm9mZnNldCsrXT1lPj4+OCYyNTUsdGhpcy5idWZmZXJbdGhpcy5vZmZzZXQrK109ZT4+PjAmMjU1LHRoaXN9YWRkQ1N0cmluZyhlKXtcbmlmKCFlKXRoaXMuZW5zdXJlKDEpO2Vsc2V7dmFyIHQ9ZC5ieXRlTGVuZ3RoKGUpO3RoaXMuZW5zdXJlKHQrMSksdGhpcy5idWZmZXIud3JpdGUoXG5lLHRoaXMub2Zmc2V0LFwidXRmLThcIiksdGhpcy5vZmZzZXQrPXR9cmV0dXJuIHRoaXMuYnVmZmVyW3RoaXMub2Zmc2V0KytdPTAsdGhpc31hZGRTdHJpbmcoZT1cIlwiKXtcbnZhciB0PWQuYnl0ZUxlbmd0aChlKTtyZXR1cm4gdGhpcy5lbnN1cmUodCksdGhpcy5idWZmZXIud3JpdGUoZSx0aGlzLm9mZnNldCksdGhpcy5cbm9mZnNldCs9dCx0aGlzfWFkZChlKXtyZXR1cm4gdGhpcy5lbnN1cmUoZS5sZW5ndGgpLGUuY29weSh0aGlzLmJ1ZmZlcix0aGlzLm9mZnNldCksXG50aGlzLm9mZnNldCs9ZS5sZW5ndGgsdGhpc31qb2luKGUpe2lmKGUpe3RoaXMuYnVmZmVyW3RoaXMuaGVhZGVyUG9zaXRpb25dPWU7bGV0IHQ9dGhpcy5cbm9mZnNldC0odGhpcy5oZWFkZXJQb3NpdGlvbisxKTt0aGlzLmJ1ZmZlci53cml0ZUludDMyQkUodCx0aGlzLmhlYWRlclBvc2l0aW9uKzEpfVxucmV0dXJuIHRoaXMuYnVmZmVyLnNsaWNlKGU/MDo1LHRoaXMub2Zmc2V0KX1mbHVzaChlKXt2YXIgdD10aGlzLmpvaW4oZSk7cmV0dXJuIHRoaXMuXG5vZmZzZXQ9NSx0aGlzLmhlYWRlclBvc2l0aW9uPTAsdGhpcy5idWZmZXI9ZC5hbGxvY1Vuc2FmZSh0aGlzLnNpemUpLHR9fTthKFpyLFwiV3JcXFxuaXRlclwiKTt2YXIgWXI9WnI7YnQuV3JpdGVyPVlyfSk7dmFyIGdzPUkoeHQ9PntcInVzZSBzdHJpY3RcIjtwKCk7T2JqZWN0LmRlZmluZVByb3BlcnR5KHh0LFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO1xueHQuc2VyaWFsaXplPXZvaWQgMDt2YXIgSnI9eXMoKSxGPW5ldyBKci5Xcml0ZXIsUnU9YShyPT57Ri5hZGRJbnQxNigzKS5hZGRJbnQxNihcbjApO2ZvcihsZXQgbiBvZiBPYmplY3Qua2V5cyhyKSlGLmFkZENTdHJpbmcobikuYWRkQ1N0cmluZyhyW25dKTtGLmFkZENTdHJpbmcoXCJjbFxcXG5pZW50X2VuY29kaW5nXCIpLmFkZENTdHJpbmcoXCJVVEY4XCIpO3ZhciBlPUYuYWRkQ1N0cmluZyhcIlwiKS5mbHVzaCgpLHQ9ZS5sZW5ndGgrNDtyZXR1cm4gbmV3IEpyLlxuV3JpdGVyKCkuYWRkSW50MzIodCkuYWRkKGUpLmZsdXNoKCl9LFwic3RhcnR1cFwiKSxGdT1hKCgpPT57bGV0IHI9ZC5hbGxvY1Vuc2FmZSg4KTtcbnJldHVybiByLndyaXRlSW50MzJCRSg4LDApLHIud3JpdGVJbnQzMkJFKDgwODc3MTAzLDQpLHJ9LFwicmVxdWVzdFNzbFwiKSxNdT1hKHI9PkYuXG5hZGRDU3RyaW5nKHIpLmZsdXNoKDExMiksXCJwYXNzd29yZFwiKSxEdT1hKGZ1bmN0aW9uKHIsZSl7cmV0dXJuIEYuYWRkQ1N0cmluZyhyKS5hZGRJbnQzMihcbmQuYnl0ZUxlbmd0aChlKSkuYWRkU3RyaW5nKGUpLEYuZmx1c2goMTEyKX0sXCJzZW5kU0FTTEluaXRpYWxSZXNwb25zZU1lc3NhZ2VcIiksT3U9YShcbmZ1bmN0aW9uKHIpe3JldHVybiBGLmFkZFN0cmluZyhyKS5mbHVzaCgxMTIpfSxcInNlbmRTQ1JBTUNsaWVudEZpbmFsTWVzc2FnZVwiKSxrdT1hKFxucj0+Ri5hZGRDU3RyaW5nKHIpLmZsdXNoKDgxKSxcInF1ZXJ5XCIpLG1zPVtdLFV1PWEocj0+e2xldCBlPXIubmFtZXx8XCJcIjtlLmxlbmd0aD42MyYmXG4oY29uc29sZS5lcnJvcihcIldhcm5pbmchIFBvc3RncmVzIG9ubHkgc3VwcG9ydHMgNjMgY2hhcmFjdGVycyBmb3IgcXVlcnkgbmFtZXMuXCIpLFxuY29uc29sZS5lcnJvcihcIllvdSBzdXBwbGllZCAlcyAoJXMpXCIsZSxlLmxlbmd0aCksY29uc29sZS5lcnJvcihcIlRoaXMgY2FuIGNhdXNlIGNcXFxub25mbGljdHMgYW5kIHNpbGVudCBlcnJvcnMgZXhlY3V0aW5nIHF1ZXJpZXNcIikpO2xldCB0PXIudHlwZXN8fG1zO2Zvcih2YXIgbj10Lmxlbmd0aCxcbmk9Ri5hZGRDU3RyaW5nKGUpLmFkZENTdHJpbmcoci50ZXh0KS5hZGRJbnQxNihuKSxzPTA7czxuO3MrKylpLmFkZEludDMyKHRbc10pO3JldHVybiBGLlxuZmx1c2goODApfSxcInBhcnNlXCIpLFVlPW5ldyBKci5Xcml0ZXIscXU9YShmdW5jdGlvbihyLGUpe2ZvcihsZXQgdD0wO3Q8ci5sZW5ndGg7dCsrKXtcbmxldCBuPWU/ZShyW3RdLHQpOnJbdF07bj09bnVsbD8oRi5hZGRJbnQxNigwKSxVZS5hZGRJbnQzMigtMSkpOm4gaW5zdGFuY2VvZiBkPyhGLlxuYWRkSW50MTYoMSksVWUuYWRkSW50MzIobi5sZW5ndGgpLFVlLmFkZChuKSk6KEYuYWRkSW50MTYoMCksVWUuYWRkSW50MzIoZC5ieXRlTGVuZ3RoKFxubikpLFVlLmFkZFN0cmluZyhuKSl9fSxcIndyaXRlVmFsdWVzXCIpLE51PWEoKHI9e30pPT57bGV0IGU9ci5wb3J0YWx8fFwiXCIsdD1yLnN0YXRlbWVudHx8XG5cIlwiLG49ci5iaW5hcnl8fCExLGk9ci52YWx1ZXN8fG1zLHM9aS5sZW5ndGg7cmV0dXJuIEYuYWRkQ1N0cmluZyhlKS5hZGRDU3RyaW5nKHQpLFxuRi5hZGRJbnQxNihzKSxxdShpLHIudmFsdWVNYXBwZXIpLEYuYWRkSW50MTYocyksRi5hZGQoVWUuZmx1c2goKSksRi5hZGRJbnQxNihuPzE6XG4wKSxGLmZsdXNoKDY2KX0sXCJiaW5kXCIpLFF1PWQuZnJvbShbNjksMCwwLDAsOSwwLDAsMCwwLDBdKSxXdT1hKHI9PntpZighcnx8IXIucG9ydGFsJiZcbiFyLnJvd3MpcmV0dXJuIFF1O2xldCBlPXIucG9ydGFsfHxcIlwiLHQ9ci5yb3dzfHwwLG49ZC5ieXRlTGVuZ3RoKGUpLGk9NCtuKzErNCxzPWQuXG5hbGxvY1Vuc2FmZSgxK2kpO3JldHVybiBzWzBdPTY5LHMud3JpdGVJbnQzMkJFKGksMSkscy53cml0ZShlLDUsXCJ1dGYtOFwiKSxzW24rNV09XG4wLHMud3JpdGVVSW50MzJCRSh0LHMubGVuZ3RoLTQpLHN9LFwiZXhlY3V0ZVwiKSxqdT1hKChyLGUpPT57bGV0IHQ9ZC5hbGxvY1Vuc2FmZSgxNik7XG5yZXR1cm4gdC53cml0ZUludDMyQkUoMTYsMCksdC53cml0ZUludDE2QkUoMTIzNCw0KSx0LndyaXRlSW50MTZCRSg1Njc4LDYpLHQud3JpdGVJbnQzMkJFKFxuciw4KSx0LndyaXRlSW50MzJCRShlLDEyKSx0fSxcImNhbmNlbFwiKSxYcj1hKChyLGUpPT57bGV0IG49NCtkLmJ5dGVMZW5ndGgoZSkrMSxpPWQuXG5hbGxvY1Vuc2FmZSgxK24pO3JldHVybiBpWzBdPXIsaS53cml0ZUludDMyQkUobiwxKSxpLndyaXRlKGUsNSxcInV0Zi04XCIpLGlbbl09MCxpfSxcblwiY3N0cmluZ01lc3NhZ2VcIiksSHU9Ri5hZGRDU3RyaW5nKFwiUFwiKS5mbHVzaCg2OCksR3U9Ri5hZGRDU3RyaW5nKFwiU1wiKS5mbHVzaCg2OCksXG4kdT1hKHI9PnIubmFtZT9Ycig2OCxgJHtyLnR5cGV9JHtyLm5hbWV8fFwiXCJ9YCk6ci50eXBlPT09XCJQXCI/SHU6R3UsXCJkZXNjcmliZVwiKSxLdT1hKFxucj0+e2xldCBlPWAke3IudHlwZX0ke3IubmFtZXx8XCJcIn1gO3JldHVybiBYcig2NyxlKX0sXCJjbG9zZVwiKSxWdT1hKHI9PkYuYWRkKHIpLmZsdXNoKFxuMTAwKSxcImNvcHlEYXRhXCIpLHp1PWEocj0+WHIoMTAyLHIpLFwiY29weUZhaWxcIiksU3Q9YShyPT5kLmZyb20oW3IsMCwwLDAsNF0pLFwiY29kZVxcXG5Pbmx5QnVmZmVyXCIpLFl1PVN0KDcyKSxadT1TdCg4MyksSnU9U3QoODgpLFh1PVN0KDk5KSxlYz17c3RhcnR1cDpSdSxwYXNzd29yZDpNdSxcbnJlcXVlc3RTc2w6RnUsc2VuZFNBU0xJbml0aWFsUmVzcG9uc2VNZXNzYWdlOkR1LHNlbmRTQ1JBTUNsaWVudEZpbmFsTWVzc2FnZTpPdSxxdWVyeTprdSxcbnBhcnNlOlV1LGJpbmQ6TnUsZXhlY3V0ZTpXdSxkZXNjcmliZTokdSxjbG9zZTpLdSxmbHVzaDooKT0+WXUsc3luYzooKT0+WnUsZW5kOigpPT5KdSxcbmNvcHlEYXRhOlZ1LGNvcHlEb25lOigpPT5YdSxjb3B5RmFpbDp6dSxjYW5jZWw6anV9O3h0LnNlcmlhbGl6ZT1lY30pO3ZhciB3cz1JKEV0PT57XCJ1c2Ugc3RyaWN0XCI7cCgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShFdCxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTtcbkV0LkJ1ZmZlclJlYWRlcj12b2lkIDA7dmFyIHRjPWQuYWxsb2NVbnNhZmUoMCksdG49Y2xhc3MgdG57Y29uc3RydWN0b3IoZT0wKXt0aGlzLlxub2Zmc2V0PWUsdGhpcy5idWZmZXI9dGMsdGhpcy5lbmNvZGluZz1cInV0Zi04XCJ9c2V0QnVmZmVyKGUsdCl7dGhpcy5vZmZzZXQ9ZSx0aGlzLlxuYnVmZmVyPXR9aW50MTYoKXtsZXQgZT10aGlzLmJ1ZmZlci5yZWFkSW50MTZCRSh0aGlzLm9mZnNldCk7cmV0dXJuIHRoaXMub2Zmc2V0Kz1cbjIsZX1ieXRlKCl7bGV0IGU9dGhpcy5idWZmZXJbdGhpcy5vZmZzZXRdO3JldHVybiB0aGlzLm9mZnNldCsrLGV9aW50MzIoKXtsZXQgZT10aGlzLlxuYnVmZmVyLnJlYWRJbnQzMkJFKHRoaXMub2Zmc2V0KTtyZXR1cm4gdGhpcy5vZmZzZXQrPTQsZX1zdHJpbmcoZSl7bGV0IHQ9dGhpcy5idWZmZXIuXG50b1N0cmluZyh0aGlzLmVuY29kaW5nLHRoaXMub2Zmc2V0LHRoaXMub2Zmc2V0K2UpO3JldHVybiB0aGlzLm9mZnNldCs9ZSx0fWNzdHJpbmcoKXtcbmxldCBlPXRoaXMub2Zmc2V0LHQ9ZTtmb3IoO3RoaXMuYnVmZmVyW3QrK10hPT0wOyk7cmV0dXJuIHRoaXMub2Zmc2V0PXQsdGhpcy5idWZmZXIuXG50b1N0cmluZyh0aGlzLmVuY29kaW5nLGUsdC0xKX1ieXRlcyhlKXtsZXQgdD10aGlzLmJ1ZmZlci5zbGljZSh0aGlzLm9mZnNldCx0aGlzLlxub2Zmc2V0K2UpO3JldHVybiB0aGlzLm9mZnNldCs9ZSx0fX07YSh0bixcIkJ1ZmZlclJlYWRlclwiKTt2YXIgZW49dG47RXQuQnVmZmVyUmVhZGVyPVxuZW59KTt2YXIgYnM9e307WChicyx7ZGVmYXVsdDooKT0+cmN9KTt2YXIgcmMsU3M9SygoKT0+e1widXNlIHN0cmljdFwiO3AoKTtyYz17fX0pO3ZhciB2cz1JKHFlPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3ZhciBuYz1xZSYmcWUuX19pbXBvcnREZWZhdWx0fHxmdW5jdGlvbihyKXtyZXR1cm4gciYmXG5yLl9fZXNNb2R1bGU/cjp7ZGVmYXVsdDpyfX07T2JqZWN0LmRlZmluZVByb3BlcnR5KHFlLFwiX19lc01vZHVsZVwiLHt2YWx1ZTohMH0pO3FlLlxuUGFyc2VyPXZvaWQgMDt2YXIgTT16cigpLGljPXdzKCksc2M9bmMoKFNzKCksayhicykpKSxybj0xLG9jPTQseHM9cm4rb2MsRXM9ZC5hbGxvY1Vuc2FmZShcbjApLHNuPWNsYXNzIHNue2NvbnN0cnVjdG9yKGUpe2lmKHRoaXMuYnVmZmVyPUVzLHRoaXMuYnVmZmVyTGVuZ3RoPTAsdGhpcy5idWZmZXJPZmZzZXQ9XG4wLHRoaXMucmVhZGVyPW5ldyBpYy5CdWZmZXJSZWFkZXIsZT8ubW9kZT09PVwiYmluYXJ5XCIpdGhyb3cgbmV3IEVycm9yKFwiQmluYXJ5IG1vZFxcXG5lIG5vdCBzdXBwb3J0ZWQgeWV0XCIpO3RoaXMubW9kZT1lPy5tb2RlfHxcInRleHRcIn1wYXJzZShlLHQpe3RoaXMubWVyZ2VCdWZmZXIoZSk7bGV0IG49dGhpcy5cbmJ1ZmZlck9mZnNldCt0aGlzLmJ1ZmZlckxlbmd0aCxpPXRoaXMuYnVmZmVyT2Zmc2V0O2Zvcig7aSt4czw9bjspe2xldCBzPXRoaXMuYnVmZmVyW2ldLFxubz10aGlzLmJ1ZmZlci5yZWFkVUludDMyQkUoaStybiksdT1ybitvO2lmKHUraTw9bil7bGV0IGM9dGhpcy5oYW5kbGVQYWNrZXQoaSt4cyxcbnMsbyx0aGlzLmJ1ZmZlcik7dChjKSxpKz11fWVsc2UgYnJlYWt9aT09PW4/KHRoaXMuYnVmZmVyPUVzLHRoaXMuYnVmZmVyTGVuZ3RoPTAsXG50aGlzLmJ1ZmZlck9mZnNldD0wKToodGhpcy5idWZmZXJMZW5ndGg9bi1pLHRoaXMuYnVmZmVyT2Zmc2V0PWkpfW1lcmdlQnVmZmVyKGUpe1xuaWYodGhpcy5idWZmZXJMZW5ndGg+MCl7bGV0IHQ9dGhpcy5idWZmZXJMZW5ndGgrZS5ieXRlTGVuZ3RoO2lmKHQrdGhpcy5idWZmZXJPZmZzZXQ+XG50aGlzLmJ1ZmZlci5ieXRlTGVuZ3RoKXtsZXQgaTtpZih0PD10aGlzLmJ1ZmZlci5ieXRlTGVuZ3RoJiZ0aGlzLmJ1ZmZlck9mZnNldD49dGhpcy5cbmJ1ZmZlckxlbmd0aClpPXRoaXMuYnVmZmVyO2Vsc2V7bGV0IHM9dGhpcy5idWZmZXIuYnl0ZUxlbmd0aCoyO2Zvcig7dD49czspcyo9MjtpPVxuZC5hbGxvY1Vuc2FmZShzKX10aGlzLmJ1ZmZlci5jb3B5KGksMCx0aGlzLmJ1ZmZlck9mZnNldCx0aGlzLmJ1ZmZlck9mZnNldCt0aGlzLmJ1ZmZlckxlbmd0aCksXG50aGlzLmJ1ZmZlcj1pLHRoaXMuYnVmZmVyT2Zmc2V0PTB9ZS5jb3B5KHRoaXMuYnVmZmVyLHRoaXMuYnVmZmVyT2Zmc2V0K3RoaXMuYnVmZmVyTGVuZ3RoKSxcbnRoaXMuYnVmZmVyTGVuZ3RoPXR9ZWxzZSB0aGlzLmJ1ZmZlcj1lLHRoaXMuYnVmZmVyT2Zmc2V0PTAsdGhpcy5idWZmZXJMZW5ndGg9ZS5ieXRlTGVuZ3RofWhhbmRsZVBhY2tldChlLHQsbixpKXtcbnN3aXRjaCh0KXtjYXNlIDUwOnJldHVybiBNLmJpbmRDb21wbGV0ZTtjYXNlIDQ5OnJldHVybiBNLnBhcnNlQ29tcGxldGU7Y2FzZSA1MTpyZXR1cm4gTS5cbmNsb3NlQ29tcGxldGU7Y2FzZSAxMTA6cmV0dXJuIE0ubm9EYXRhO2Nhc2UgMTE1OnJldHVybiBNLnBvcnRhbFN1c3BlbmRlZDtjYXNlIDk5OlxucmV0dXJuIE0uY29weURvbmU7Y2FzZSA4NzpyZXR1cm4gTS5yZXBsaWNhdGlvblN0YXJ0O2Nhc2UgNzM6cmV0dXJuIE0uZW1wdHlRdWVyeTtjYXNlIDY4OlxucmV0dXJuIHRoaXMucGFyc2VEYXRhUm93TWVzc2FnZShlLG4saSk7Y2FzZSA2NzpyZXR1cm4gdGhpcy5wYXJzZUNvbW1hbmRDb21wbGV0ZU1lc3NhZ2UoXG5lLG4saSk7Y2FzZSA5MDpyZXR1cm4gdGhpcy5wYXJzZVJlYWR5Rm9yUXVlcnlNZXNzYWdlKGUsbixpKTtjYXNlIDY1OnJldHVybiB0aGlzLlxucGFyc2VOb3RpZmljYXRpb25NZXNzYWdlKGUsbixpKTtjYXNlIDgyOnJldHVybiB0aGlzLnBhcnNlQXV0aGVudGljYXRpb25SZXNwb25zZShcbmUsbixpKTtjYXNlIDgzOnJldHVybiB0aGlzLnBhcnNlUGFyYW1ldGVyU3RhdHVzTWVzc2FnZShlLG4saSk7Y2FzZSA3NTpyZXR1cm4gdGhpcy5cbnBhcnNlQmFja2VuZEtleURhdGEoZSxuLGkpO2Nhc2UgNjk6cmV0dXJuIHRoaXMucGFyc2VFcnJvck1lc3NhZ2UoZSxuLGksXCJlcnJvclwiKTtjYXNlIDc4OlxucmV0dXJuIHRoaXMucGFyc2VFcnJvck1lc3NhZ2UoZSxuLGksXCJub3RpY2VcIik7Y2FzZSA4NDpyZXR1cm4gdGhpcy5wYXJzZVJvd0Rlc2NyaXB0aW9uTWVzc2FnZShcbmUsbixpKTtjYXNlIDExNjpyZXR1cm4gdGhpcy5wYXJzZVBhcmFtZXRlckRlc2NyaXB0aW9uTWVzc2FnZShlLG4saSk7Y2FzZSA3MTpyZXR1cm4gdGhpcy5cbnBhcnNlQ29weUluTWVzc2FnZShlLG4saSk7Y2FzZSA3MjpyZXR1cm4gdGhpcy5wYXJzZUNvcHlPdXRNZXNzYWdlKGUsbixpKTtjYXNlIDEwMDpcbnJldHVybiB0aGlzLnBhcnNlQ29weURhdGEoZSxuLGkpO2RlZmF1bHQ6c2MuZGVmYXVsdC5mYWlsKGB1bmtub3duIG1lc3NhZ2UgY29kZTogJHt0LlxudG9TdHJpbmcoMTYpfWApfX1wYXJzZVJlYWR5Rm9yUXVlcnlNZXNzYWdlKGUsdCxuKXt0aGlzLnJlYWRlci5zZXRCdWZmZXIoZSxuKTtsZXQgaT10aGlzLlxucmVhZGVyLnN0cmluZygxKTtyZXR1cm4gbmV3IE0uUmVhZHlGb3JRdWVyeU1lc3NhZ2UodCxpKX1wYXJzZUNvbW1hbmRDb21wbGV0ZU1lc3NhZ2UoZSx0LG4pe1xudGhpcy5yZWFkZXIuc2V0QnVmZmVyKGUsbik7bGV0IGk9dGhpcy5yZWFkZXIuY3N0cmluZygpO3JldHVybiBuZXcgTS5Db21tYW5kQ29tcGxldGVNZXNzYWdlKFxudCxpKX1wYXJzZUNvcHlEYXRhKGUsdCxuKXtsZXQgaT1uLnNsaWNlKGUsZSsodC00KSk7cmV0dXJuIG5ldyBNLkNvcHlEYXRhTWVzc2FnZShcbnQsaSl9cGFyc2VDb3B5SW5NZXNzYWdlKGUsdCxuKXtyZXR1cm4gdGhpcy5wYXJzZUNvcHlNZXNzYWdlKGUsdCxuLFwiY29weUluUmVzcG9uc1xcXG5lXCIpfXBhcnNlQ29weU91dE1lc3NhZ2UoZSx0LG4pe3JldHVybiB0aGlzLnBhcnNlQ29weU1lc3NhZ2UoZSx0LG4sXCJjb3B5T3V0UmVzcG9uXFxcbnNlXCIpfXBhcnNlQ29weU1lc3NhZ2UoZSx0LG4saSl7dGhpcy5yZWFkZXIuc2V0QnVmZmVyKGUsbik7bGV0IHM9dGhpcy5yZWFkZXIuYnl0ZSgpIT09XG4wLG89dGhpcy5yZWFkZXIuaW50MTYoKSx1PW5ldyBNLkNvcHlSZXNwb25zZSh0LGkscyxvKTtmb3IobGV0IGM9MDtjPG87YysrKXUuY29sdW1uVHlwZXNbY109XG50aGlzLnJlYWRlci5pbnQxNigpO3JldHVybiB1fXBhcnNlTm90aWZpY2F0aW9uTWVzc2FnZShlLHQsbil7dGhpcy5yZWFkZXIuc2V0QnVmZmVyKFxuZSxuKTtsZXQgaT10aGlzLnJlYWRlci5pbnQzMigpLHM9dGhpcy5yZWFkZXIuY3N0cmluZygpLG89dGhpcy5yZWFkZXIuY3N0cmluZygpO3JldHVybiBuZXcgTS5cbk5vdGlmaWNhdGlvblJlc3BvbnNlTWVzc2FnZSh0LGkscyxvKX1wYXJzZVJvd0Rlc2NyaXB0aW9uTWVzc2FnZShlLHQsbil7dGhpcy5yZWFkZXIuXG5zZXRCdWZmZXIoZSxuKTtsZXQgaT10aGlzLnJlYWRlci5pbnQxNigpLHM9bmV3IE0uUm93RGVzY3JpcHRpb25NZXNzYWdlKHQsaSk7Zm9yKGxldCBvPTA7bzxcbmk7bysrKXMuZmllbGRzW29dPXRoaXMucGFyc2VGaWVsZCgpO3JldHVybiBzfXBhcnNlRmllbGQoKXtsZXQgZT10aGlzLnJlYWRlci5jc3RyaW5nKCksXG50PXRoaXMucmVhZGVyLmludDMyKCksbj10aGlzLnJlYWRlci5pbnQxNigpLGk9dGhpcy5yZWFkZXIuaW50MzIoKSxzPXRoaXMucmVhZGVyLlxuaW50MTYoKSxvPXRoaXMucmVhZGVyLmludDMyKCksdT10aGlzLnJlYWRlci5pbnQxNigpPT09MD9cInRleHRcIjpcImJpbmFyeVwiO3JldHVybiBuZXcgTS5cbkZpZWxkKGUsdCxuLGkscyxvLHUpfXBhcnNlUGFyYW1ldGVyRGVzY3JpcHRpb25NZXNzYWdlKGUsdCxuKXt0aGlzLnJlYWRlci5zZXRCdWZmZXIoXG5lLG4pO2xldCBpPXRoaXMucmVhZGVyLmludDE2KCkscz1uZXcgTS5QYXJhbWV0ZXJEZXNjcmlwdGlvbk1lc3NhZ2UodCxpKTtmb3IobGV0IG89MDtvPFxuaTtvKyspcy5kYXRhVHlwZUlEc1tvXT10aGlzLnJlYWRlci5pbnQzMigpO3JldHVybiBzfXBhcnNlRGF0YVJvd01lc3NhZ2UoZSx0LG4pe3RoaXMuXG5yZWFkZXIuc2V0QnVmZmVyKGUsbik7bGV0IGk9dGhpcy5yZWFkZXIuaW50MTYoKSxzPW5ldyBBcnJheShpKTtmb3IobGV0IG89MDtvPGk7bysrKXtcbmxldCB1PXRoaXMucmVhZGVyLmludDMyKCk7c1tvXT11PT09LTE/bnVsbDp0aGlzLnJlYWRlci5zdHJpbmcodSl9cmV0dXJuIG5ldyBNLkRhdGFSb3dNZXNzYWdlKFxudCxzKX1wYXJzZVBhcmFtZXRlclN0YXR1c01lc3NhZ2UoZSx0LG4pe3RoaXMucmVhZGVyLnNldEJ1ZmZlcihlLG4pO2xldCBpPXRoaXMucmVhZGVyLlxuY3N0cmluZygpLHM9dGhpcy5yZWFkZXIuY3N0cmluZygpO3JldHVybiBuZXcgTS5QYXJhbWV0ZXJTdGF0dXNNZXNzYWdlKHQsaSxzKX1wYXJzZUJhY2tlbmRLZXlEYXRhKGUsdCxuKXtcbnRoaXMucmVhZGVyLnNldEJ1ZmZlcihlLG4pO2xldCBpPXRoaXMucmVhZGVyLmludDMyKCkscz10aGlzLnJlYWRlci5pbnQzMigpO3JldHVybiBuZXcgTS5cbkJhY2tlbmRLZXlEYXRhTWVzc2FnZSh0LGkscyl9cGFyc2VBdXRoZW50aWNhdGlvblJlc3BvbnNlKGUsdCxuKXt0aGlzLnJlYWRlci5zZXRCdWZmZXIoXG5lLG4pO2xldCBpPXRoaXMucmVhZGVyLmludDMyKCkscz17bmFtZTpcImF1dGhlbnRpY2F0aW9uT2tcIixsZW5ndGg6dH07c3dpdGNoKGkpe2Nhc2UgMDpcbmJyZWFrO2Nhc2UgMzpzLmxlbmd0aD09PTgmJihzLm5hbWU9XCJhdXRoZW50aWNhdGlvbkNsZWFydGV4dFBhc3N3b3JkXCIpO2JyZWFrO2Nhc2UgNTpcbmlmKHMubGVuZ3RoPT09MTIpe3MubmFtZT1cImF1dGhlbnRpY2F0aW9uTUQ1UGFzc3dvcmRcIjtsZXQgdT10aGlzLnJlYWRlci5ieXRlcyg0KTtcbnJldHVybiBuZXcgTS5BdXRoZW50aWNhdGlvbk1ENVBhc3N3b3JkKHQsdSl9YnJlYWs7Y2FzZSAxMDpzLm5hbWU9XCJhdXRoZW50aWNhdGlvblxcXG5TQVNMXCIscy5tZWNoYW5pc21zPVtdO2xldCBvO2RvIG89dGhpcy5yZWFkZXIuY3N0cmluZygpLG8mJnMubWVjaGFuaXNtcy5wdXNoKG8pO3doaWxlKG8pO1xuYnJlYWs7Y2FzZSAxMTpzLm5hbWU9XCJhdXRoZW50aWNhdGlvblNBU0xDb250aW51ZVwiLHMuZGF0YT10aGlzLnJlYWRlci5zdHJpbmcodC04KTtcbmJyZWFrO2Nhc2UgMTI6cy5uYW1lPVwiYXV0aGVudGljYXRpb25TQVNMRmluYWxcIixzLmRhdGE9dGhpcy5yZWFkZXIuc3RyaW5nKHQtOCk7YnJlYWs7ZGVmYXVsdDpcbnRocm93IG5ldyBFcnJvcihcIlVua25vd24gYXV0aGVudGljYXRpb25PayBtZXNzYWdlIHR5cGUgXCIraSl9cmV0dXJuIHN9cGFyc2VFcnJvck1lc3NhZ2UoZSx0LG4saSl7XG50aGlzLnJlYWRlci5zZXRCdWZmZXIoZSxuKTtsZXQgcz17fSxvPXRoaXMucmVhZGVyLnN0cmluZygxKTtmb3IoO28hPT1cIlxcMFwiOylzW29dPVxudGhpcy5yZWFkZXIuY3N0cmluZygpLG89dGhpcy5yZWFkZXIuc3RyaW5nKDEpO2xldCB1PXMuTSxjPWk9PT1cIm5vdGljZVwiP25ldyBNLk5vdGljZU1lc3NhZ2UoXG50LHUpOm5ldyBNLkRhdGFiYXNlRXJyb3IodSx0LGkpO3JldHVybiBjLnNldmVyaXR5PXMuUyxjLmNvZGU9cy5DLGMuZGV0YWlsPXMuRCxjLlxuaGludD1zLkgsYy5wb3NpdGlvbj1zLlAsYy5pbnRlcm5hbFBvc2l0aW9uPXMucCxjLmludGVybmFsUXVlcnk9cy5xLGMud2hlcmU9cy5XLGMuXG5zY2hlbWE9cy5zLGMudGFibGU9cy50LGMuY29sdW1uPXMuYyxjLmRhdGFUeXBlPXMuZCxjLmNvbnN0cmFpbnQ9cy5uLGMuZmlsZT1zLkYsYy5cbmxpbmU9cy5MLGMucm91dGluZT1zLlIsY319O2Eoc24sXCJQYXJzZXJcIik7dmFyIG5uPXNuO3FlLlBhcnNlcj1ubn0pO3ZhciBvbj1JKGJlPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO09iamVjdC5kZWZpbmVQcm9wZXJ0eShiZSxcIl9fZXNNb2R1bGVcIix7dmFsdWU6ITB9KTtcbmJlLkRhdGFiYXNlRXJyb3I9YmUuc2VyaWFsaXplPWJlLnBhcnNlPXZvaWQgMDt2YXIgYWM9enIoKTtPYmplY3QuZGVmaW5lUHJvcGVydHkoXG5iZSxcIkRhdGFiYXNlRXJyb3JcIix7ZW51bWVyYWJsZTohMCxnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gYWMuRGF0YWJhc2VFcnJvcn19KTt2YXIgdWM9Z3MoKTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShiZSxcInNlcmlhbGl6ZVwiLHtlbnVtZXJhYmxlOiEwLGdldDpmdW5jdGlvbigpe3JldHVybiB1Yy5zZXJpYWxpemV9fSk7XG52YXIgY2M9dnMoKTtmdW5jdGlvbiBoYyhyLGUpe2xldCB0PW5ldyBjYy5QYXJzZXI7cmV0dXJuIHIub24oXCJkYXRhXCIsbj0+dC5wYXJzZShuLFxuZSkpLG5ldyBQcm9taXNlKG49PnIub24oXCJlbmRcIiwoKT0+bigpKSl9YShoYyxcInBhcnNlXCIpO2JlLnBhcnNlPWhjfSk7dmFyIF9zPXt9O1goX3Mse2Nvbm5lY3Q6KCk9PmxjfSk7ZnVuY3Rpb24gbGMoe3NvY2tldDpyLHNlcnZlcm5hbWU6ZX0pe3JldHVybiByLnN0YXJ0VGxzKFxuZSkscn12YXIgQXM9SygoKT0+e1widXNlIHN0cmljdFwiO3AoKTthKGxjLFwiY29ubmVjdFwiKX0pO3ZhciBjbj1JKChlZixUcyk9PntcInVzZSBzdHJpY3RcIjtwKCk7dmFyIENzPSh3dCgpLGsoZHMpKSxmYz1nZSgpLkV2ZW50RW1pdHRlcix7cGFyc2U6cGMsXG5zZXJpYWxpemU6cX09b24oKSxJcz1xLmZsdXNoKCksZGM9cS5zeW5jKCkseWM9cS5lbmQoKSx1bj1jbGFzcyB1biBleHRlbmRzIGZje2NvbnN0cnVjdG9yKGUpe1xuc3VwZXIoKSxlPWV8fHt9LHRoaXMuc3RyZWFtPWUuc3RyZWFtfHxuZXcgQ3MuU29ja2V0LHRoaXMuX2tlZXBBbGl2ZT1lLmtlZXBBbGl2ZSxcbnRoaXMuX2tlZXBBbGl2ZUluaXRpYWxEZWxheU1pbGxpcz1lLmtlZXBBbGl2ZUluaXRpYWxEZWxheU1pbGxpcyx0aGlzLmxhc3RCdWZmZXI9XG4hMSx0aGlzLnBhcnNlZFN0YXRlbWVudHM9e30sdGhpcy5zc2w9ZS5zc2x8fCExLHRoaXMuX2VuZGluZz0hMSx0aGlzLl9lbWl0TWVzc2FnZT1cbiExO3ZhciB0PXRoaXM7dGhpcy5vbihcIm5ld0xpc3RlbmVyXCIsZnVuY3Rpb24obil7bj09PVwibWVzc2FnZVwiJiYodC5fZW1pdE1lc3NhZ2U9ITApfSl9Y29ubmVjdChlLHQpe1xudmFyIG49dGhpczt0aGlzLl9jb25uZWN0aW5nPSEwLHRoaXMuc3RyZWFtLnNldE5vRGVsYXkoITApLHRoaXMuc3RyZWFtLmNvbm5lY3QoZSxcbnQpLHRoaXMuc3RyZWFtLm9uY2UoXCJjb25uZWN0XCIsZnVuY3Rpb24oKXtuLl9rZWVwQWxpdmUmJm4uc3RyZWFtLnNldEtlZXBBbGl2ZSghMCxcbm4uX2tlZXBBbGl2ZUluaXRpYWxEZWxheU1pbGxpcyksbi5lbWl0KFwiY29ubmVjdFwiKX0pO2xldCBpPWEoZnVuY3Rpb24ocyl7bi5fZW5kaW5nJiZcbihzLmNvZGU9PT1cIkVDT05OUkVTRVRcInx8cy5jb2RlPT09XCJFUElQRVwiKXx8bi5lbWl0KFwiZXJyb3JcIixzKX0sXCJyZXBvcnRTdHJlYW1FcnJvclwiKTtcbmlmKHRoaXMuc3RyZWFtLm9uKFwiZXJyb3JcIixpKSx0aGlzLnN0cmVhbS5vbihcImNsb3NlXCIsZnVuY3Rpb24oKXtuLmVtaXQoXCJlbmRcIil9KSwhdGhpcy5cbnNzbClyZXR1cm4gdGhpcy5hdHRhY2hMaXN0ZW5lcnModGhpcy5zdHJlYW0pO3RoaXMuc3RyZWFtLm9uY2UoXCJkYXRhXCIsZnVuY3Rpb24ocyl7XG52YXIgbz1zLnRvU3RyaW5nKFwidXRmOFwiKTtzd2l0Y2gobyl7Y2FzZVwiU1wiOmJyZWFrO2Nhc2VcIk5cIjpyZXR1cm4gbi5zdHJlYW0uZW5kKCksbi5cbmVtaXQoXCJlcnJvclwiLG5ldyBFcnJvcihcIlRoZSBzZXJ2ZXIgZG9lcyBub3Qgc3VwcG9ydCBTU0wgY29ubmVjdGlvbnNcIikpO2RlZmF1bHQ6cmV0dXJuIG4uXG5zdHJlYW0uZW5kKCksbi5lbWl0KFwiZXJyb3JcIixuZXcgRXJyb3IoXCJUaGVyZSB3YXMgYW4gZXJyb3IgZXN0YWJsaXNoaW5nIGFuIFNTTCBjb1xcXG5ubmVjdGlvblwiKSl9dmFyIHU9KEFzKCksayhfcykpO2xldCBjPXtzb2NrZXQ6bi5zdHJlYW19O24uc3NsIT09ITAmJihPYmplY3QuYXNzaWduKFxuYyxuLnNzbCksXCJrZXlcImluIG4uc3NsJiYoYy5rZXk9bi5zc2wua2V5KSksQ3MuaXNJUCh0KT09PTAmJihjLnNlcnZlcm5hbWU9dCk7dHJ5e1xubi5zdHJlYW09dS5jb25uZWN0KGMpfWNhdGNoKGgpe3JldHVybiBuLmVtaXQoXCJlcnJvclwiLGgpfW4uYXR0YWNoTGlzdGVuZXJzKG4uc3RyZWFtKSxcbm4uc3RyZWFtLm9uKFwiZXJyb3JcIixpKSxuLmVtaXQoXCJzc2xjb25uZWN0XCIpfSl9YXR0YWNoTGlzdGVuZXJzKGUpe2Uub24oXCJlbmRcIiwoKT0+e1xudGhpcy5lbWl0KFwiZW5kXCIpfSkscGMoZSx0PT57dmFyIG49dC5uYW1lPT09XCJlcnJvclwiP1wiZXJyb3JNZXNzYWdlXCI6dC5uYW1lO3RoaXMuX2VtaXRNZXNzYWdlJiZcbnRoaXMuZW1pdChcIm1lc3NhZ2VcIix0KSx0aGlzLmVtaXQobix0KX0pfXJlcXVlc3RTc2woKXt0aGlzLnN0cmVhbS53cml0ZShxLnJlcXVlc3RTc2woKSl9c3RhcnR1cChlKXtcbnRoaXMuc3RyZWFtLndyaXRlKHEuc3RhcnR1cChlKSl9Y2FuY2VsKGUsdCl7dGhpcy5fc2VuZChxLmNhbmNlbChlLHQpKX1wYXNzd29yZChlKXtcbnRoaXMuX3NlbmQocS5wYXNzd29yZChlKSl9c2VuZFNBU0xJbml0aWFsUmVzcG9uc2VNZXNzYWdlKGUsdCl7dGhpcy5fc2VuZChxLnNlbmRTQVNMSW5pdGlhbFJlc3BvbnNlTWVzc2FnZShcbmUsdCkpfXNlbmRTQ1JBTUNsaWVudEZpbmFsTWVzc2FnZShlKXt0aGlzLl9zZW5kKHEuc2VuZFNDUkFNQ2xpZW50RmluYWxNZXNzYWdlKGUpKX1fc2VuZChlKXtcbnJldHVybiB0aGlzLnN0cmVhbS53cml0YWJsZT90aGlzLnN0cmVhbS53cml0ZShlKTohMX1xdWVyeShlKXt0aGlzLl9zZW5kKHEucXVlcnkoXG5lKSl9cGFyc2UoZSl7dGhpcy5fc2VuZChxLnBhcnNlKGUpKX1iaW5kKGUpe3RoaXMuX3NlbmQocS5iaW5kKGUpKX1leGVjdXRlKGUpe3RoaXMuXG5fc2VuZChxLmV4ZWN1dGUoZSkpfWZsdXNoKCl7dGhpcy5zdHJlYW0ud3JpdGFibGUmJnRoaXMuc3RyZWFtLndyaXRlKElzKX1zeW5jKCl7dGhpcy5cbl9lbmRpbmc9ITAsdGhpcy5fc2VuZChJcyksdGhpcy5fc2VuZChkYyl9cmVmKCl7dGhpcy5zdHJlYW0ucmVmKCl9dW5yZWYoKXt0aGlzLnN0cmVhbS5cbnVucmVmKCl9ZW5kKCl7aWYodGhpcy5fZW5kaW5nPSEwLCF0aGlzLl9jb25uZWN0aW5nfHwhdGhpcy5zdHJlYW0ud3JpdGFibGUpe3RoaXMuXG5zdHJlYW0uZW5kKCk7cmV0dXJufXJldHVybiB0aGlzLnN0cmVhbS53cml0ZSh5YywoKT0+e3RoaXMuc3RyZWFtLmVuZCgpfSl9Y2xvc2UoZSl7XG50aGlzLl9zZW5kKHEuY2xvc2UoZSkpfWRlc2NyaWJlKGUpe3RoaXMuX3NlbmQocS5kZXNjcmliZShlKSl9c2VuZENvcHlGcm9tQ2h1bmsoZSl7XG50aGlzLl9zZW5kKHEuY29weURhdGEoZSkpfWVuZENvcHlGcm9tKCl7dGhpcy5fc2VuZChxLmNvcHlEb25lKCkpfXNlbmRDb3B5RmFpbChlKXtcbnRoaXMuX3NlbmQocS5jb3B5RmFpbChlKSl9fTthKHVuLFwiQ29ubmVjdGlvblwiKTt2YXIgYW49dW47VHMuZXhwb3J0cz1hbn0pO3ZhciBMcz1JKChzZixCcyk9PntcInVzZSBzdHJpY3RcIjtwKCk7dmFyIG1jPWdlKCkuRXZlbnRFbWl0dGVyLG5mPShHZSgpLGsoSGUpKSxnYz10dCgpLFxuaG49cWkoKSx3Yz1ZaSgpLGJjPWhyKCksU2M9Z3QoKSxQcz1mcygpLHhjPWV0KCksRWM9Y24oKSxsbj1jbGFzcyBsbiBleHRlbmRzIG1je2NvbnN0cnVjdG9yKGUpe1xuc3VwZXIoKSx0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzPW5ldyBTYyhlKSx0aGlzLnVzZXI9dGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5cbnVzZXIsdGhpcy5kYXRhYmFzZT10aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLmRhdGFiYXNlLHRoaXMucG9ydD10aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLlxucG9ydCx0aGlzLmhvc3Q9dGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5ob3N0LE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLFwicGFzc3dvXFxcbnJkXCIse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHdyaXRhYmxlOiEwLHZhbHVlOnRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMucGFzc3dvcmR9KSxcbnRoaXMucmVwbGljYXRpb249dGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5yZXBsaWNhdGlvbjt2YXIgdD1lfHx7fTt0aGlzLl9Qcm9taXNlPVxudC5Qcm9taXNlfHxiLlByb21pc2UsdGhpcy5fdHlwZXM9bmV3IGJjKHQudHlwZXMpLHRoaXMuX2VuZGluZz0hMSx0aGlzLl9jb25uZWN0aW5nPVxuITEsdGhpcy5fY29ubmVjdGVkPSExLHRoaXMuX2Nvbm5lY3Rpb25FcnJvcj0hMSx0aGlzLl9xdWVyeWFibGU9ITAsdGhpcy5jb25uZWN0aW9uPVxudC5jb25uZWN0aW9ufHxuZXcgRWMoe3N0cmVhbTp0LnN0cmVhbSxzc2w6dGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5zc2wsa2VlcEFsaXZlOnQuXG5rZWVwQWxpdmV8fCExLGtlZXBBbGl2ZUluaXRpYWxEZWxheU1pbGxpczp0LmtlZXBBbGl2ZUluaXRpYWxEZWxheU1pbGxpc3x8MCxlbmNvZGluZzp0aGlzLlxuY29ubmVjdGlvblBhcmFtZXRlcnMuY2xpZW50X2VuY29kaW5nfHxcInV0ZjhcIn0pLHRoaXMucXVlcnlRdWV1ZT1bXSx0aGlzLmJpbmFyeT10LlxuYmluYXJ5fHx4Yy5iaW5hcnksdGhpcy5wcm9jZXNzSUQ9bnVsbCx0aGlzLnNlY3JldEtleT1udWxsLHRoaXMuc3NsPXRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMuXG5zc2x8fCExLHRoaXMuc3NsJiZ0aGlzLnNzbC5rZXkmJk9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLnNzbCxcImtleVwiLHtlbnVtZXJhYmxlOiExfSksXG50aGlzLl9jb25uZWN0aW9uVGltZW91dE1pbGxpcz10LmNvbm5lY3Rpb25UaW1lb3V0TWlsbGlzfHwwfV9lcnJvckFsbFF1ZXJpZXMoZSl7bGV0IHQ9YShcbm49PnttLm5leHRUaWNrKCgpPT57bi5oYW5kbGVFcnJvcihlLHRoaXMuY29ubmVjdGlvbil9KX0sXCJlbnF1ZXVlRXJyb3JcIik7dGhpcy5hY3RpdmVRdWVyeSYmXG4odCh0aGlzLmFjdGl2ZVF1ZXJ5KSx0aGlzLmFjdGl2ZVF1ZXJ5PW51bGwpLHRoaXMucXVlcnlRdWV1ZS5mb3JFYWNoKHQpLHRoaXMucXVlcnlRdWV1ZS5cbmxlbmd0aD0wfV9jb25uZWN0KGUpe3ZhciB0PXRoaXMsbj10aGlzLmNvbm5lY3Rpb247aWYodGhpcy5fY29ubmVjdGlvbkNhbGxiYWNrPWUsXG50aGlzLl9jb25uZWN0aW5nfHx0aGlzLl9jb25uZWN0ZWQpe2xldCBpPW5ldyBFcnJvcihcIkNsaWVudCBoYXMgYWxyZWFkeSBiZWVuIGNvbm5cXFxuZWN0ZWQuIFlvdSBjYW5ub3QgcmV1c2UgYSBjbGllbnQuXCIpO20ubmV4dFRpY2soKCk9PntlKGkpfSk7cmV0dXJufXRoaXMuX2Nvbm5lY3Rpbmc9XG4hMCx0aGlzLmNvbm5lY3Rpb25UaW1lb3V0SGFuZGxlLHRoaXMuX2Nvbm5lY3Rpb25UaW1lb3V0TWlsbGlzPjAmJih0aGlzLmNvbm5lY3Rpb25UaW1lb3V0SGFuZGxlPVxuc2V0VGltZW91dCgoKT0+e24uX2VuZGluZz0hMCxuLnN0cmVhbS5kZXN0cm95KG5ldyBFcnJvcihcInRpbWVvdXQgZXhwaXJlZFwiKSl9LHRoaXMuXG5fY29ubmVjdGlvblRpbWVvdXRNaWxsaXMpKSx0aGlzLmhvc3QmJnRoaXMuaG9zdC5pbmRleE9mKFwiL1wiKT09PTA/bi5jb25uZWN0KHRoaXMuXG5ob3N0K1wiLy5zLlBHU1FMLlwiK3RoaXMucG9ydCk6bi5jb25uZWN0KHRoaXMucG9ydCx0aGlzLmhvc3QpLG4ub24oXCJjb25uZWN0XCIsZnVuY3Rpb24oKXtcbnQuc3NsP24ucmVxdWVzdFNzbCgpOm4uc3RhcnR1cCh0LmdldFN0YXJ0dXBDb25mKCkpfSksbi5vbihcInNzbGNvbm5lY3RcIixmdW5jdGlvbigpe1xubi5zdGFydHVwKHQuZ2V0U3RhcnR1cENvbmYoKSl9KSx0aGlzLl9hdHRhY2hMaXN0ZW5lcnMobiksbi5vbmNlKFwiZW5kXCIsKCk9PntsZXQgaT10aGlzLlxuX2VuZGluZz9uZXcgRXJyb3IoXCJDb25uZWN0aW9uIHRlcm1pbmF0ZWRcIik6bmV3IEVycm9yKFwiQ29ubmVjdGlvbiB0ZXJtaW5hdGVkIHVuZXhcXFxucGVjdGVkbHlcIik7Y2xlYXJUaW1lb3V0KHRoaXMuY29ubmVjdGlvblRpbWVvdXRIYW5kbGUpLHRoaXMuX2Vycm9yQWxsUXVlcmllcyhpKSx0aGlzLlxuX2VuZGluZ3x8KHRoaXMuX2Nvbm5lY3RpbmcmJiF0aGlzLl9jb25uZWN0aW9uRXJyb3I/dGhpcy5fY29ubmVjdGlvbkNhbGxiYWNrP3RoaXMuXG5fY29ubmVjdGlvbkNhbGxiYWNrKGkpOnRoaXMuX2hhbmRsZUVycm9yRXZlbnQoaSk6dGhpcy5fY29ubmVjdGlvbkVycm9yfHx0aGlzLl9oYW5kbGVFcnJvckV2ZW50KFxuaSkpLG0ubmV4dFRpY2soKCk9Pnt0aGlzLmVtaXQoXCJlbmRcIil9KX0pfWNvbm5lY3QoZSl7aWYoZSl7dGhpcy5fY29ubmVjdChlKTtyZXR1cm59XG5yZXR1cm4gbmV3IHRoaXMuX1Byb21pc2UoKHQsbik9Pnt0aGlzLl9jb25uZWN0KGk9PntpP24oaSk6dCgpfSl9KX1fYXR0YWNoTGlzdGVuZXJzKGUpe1xuZS5vbihcImF1dGhlbnRpY2F0aW9uQ2xlYXJ0ZXh0UGFzc3dvcmRcIix0aGlzLl9oYW5kbGVBdXRoQ2xlYXJ0ZXh0UGFzc3dvcmQuYmluZCh0aGlzKSksXG5lLm9uKFwiYXV0aGVudGljYXRpb25NRDVQYXNzd29yZFwiLHRoaXMuX2hhbmRsZUF1dGhNRDVQYXNzd29yZC5iaW5kKHRoaXMpKSxlLm9uKFwiYVxcXG51dGhlbnRpY2F0aW9uU0FTTFwiLHRoaXMuX2hhbmRsZUF1dGhTQVNMLmJpbmQodGhpcykpLGUub24oXCJhdXRoZW50aWNhdGlvblNBU0xDb250XFxcbmludWVcIix0aGlzLl9oYW5kbGVBdXRoU0FTTENvbnRpbnVlLmJpbmQodGhpcykpLGUub24oXCJhdXRoZW50aWNhdGlvblNBU0xGaW5hbFwiLHRoaXMuXG5faGFuZGxlQXV0aFNBU0xGaW5hbC5iaW5kKHRoaXMpKSxlLm9uKFwiYmFja2VuZEtleURhdGFcIix0aGlzLl9oYW5kbGVCYWNrZW5kS2V5RGF0YS5cbmJpbmQodGhpcykpLGUub24oXCJlcnJvclwiLHRoaXMuX2hhbmRsZUVycm9yRXZlbnQuYmluZCh0aGlzKSksZS5vbihcImVycm9yTWVzc2FnZVwiLFxudGhpcy5faGFuZGxlRXJyb3JNZXNzYWdlLmJpbmQodGhpcykpLGUub24oXCJyZWFkeUZvclF1ZXJ5XCIsdGhpcy5faGFuZGxlUmVhZHlGb3JRdWVyeS5cbmJpbmQodGhpcykpLGUub24oXCJub3RpY2VcIix0aGlzLl9oYW5kbGVOb3RpY2UuYmluZCh0aGlzKSksZS5vbihcInJvd0Rlc2NyaXB0aW9uXCIsdGhpcy5cbl9oYW5kbGVSb3dEZXNjcmlwdGlvbi5iaW5kKHRoaXMpKSxlLm9uKFwiZGF0YVJvd1wiLHRoaXMuX2hhbmRsZURhdGFSb3cuYmluZCh0aGlzKSksXG5lLm9uKFwicG9ydGFsU3VzcGVuZGVkXCIsdGhpcy5faGFuZGxlUG9ydGFsU3VzcGVuZGVkLmJpbmQodGhpcykpLGUub24oXCJlbXB0eVF1ZXJ5XCIsXG50aGlzLl9oYW5kbGVFbXB0eVF1ZXJ5LmJpbmQodGhpcykpLGUub24oXCJjb21tYW5kQ29tcGxldGVcIix0aGlzLl9oYW5kbGVDb21tYW5kQ29tcGxldGUuXG5iaW5kKHRoaXMpKSxlLm9uKFwicGFyc2VDb21wbGV0ZVwiLHRoaXMuX2hhbmRsZVBhcnNlQ29tcGxldGUuYmluZCh0aGlzKSksZS5vbihcImNvcFxcXG55SW5SZXNwb25zZVwiLHRoaXMuX2hhbmRsZUNvcHlJblJlc3BvbnNlLmJpbmQodGhpcykpLGUub24oXCJjb3B5RGF0YVwiLHRoaXMuX2hhbmRsZUNvcHlEYXRhLlxuYmluZCh0aGlzKSksZS5vbihcIm5vdGlmaWNhdGlvblwiLHRoaXMuX2hhbmRsZU5vdGlmaWNhdGlvbi5iaW5kKHRoaXMpKX1fY2hlY2tQZ1Bhc3MoZSl7XG5sZXQgdD10aGlzLmNvbm5lY3Rpb247dHlwZW9mIHRoaXMucGFzc3dvcmQ9PVwiZnVuY3Rpb25cIj90aGlzLl9Qcm9taXNlLnJlc29sdmUoKS50aGVuKFxuKCk9PnRoaXMucGFzc3dvcmQoKSkudGhlbihuPT57aWYobiE9PXZvaWQgMCl7aWYodHlwZW9mIG4hPVwic3RyaW5nXCIpe3QuZW1pdChcImVycm9cXFxuclwiLG5ldyBUeXBlRXJyb3IoXCJQYXNzd29yZCBtdXN0IGJlIGEgc3RyaW5nXCIpKTtyZXR1cm59dGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5cbnBhc3N3b3JkPXRoaXMucGFzc3dvcmQ9bn1lbHNlIHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMucGFzc3dvcmQ9dGhpcy5wYXNzd29yZD1udWxsO1xuZSgpfSkuY2F0Y2gobj0+e3QuZW1pdChcImVycm9yXCIsbil9KTp0aGlzLnBhc3N3b3JkIT09bnVsbD9lKCk6d2ModGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycyxcbm49PntuIT09dm9pZCAwJiYodGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5wYXNzd29yZD10aGlzLnBhc3N3b3JkPW4pLGUoKX0pfV9oYW5kbGVBdXRoQ2xlYXJ0ZXh0UGFzc3dvcmQoZSl7XG50aGlzLl9jaGVja1BnUGFzcygoKT0+e3RoaXMuY29ubmVjdGlvbi5wYXNzd29yZCh0aGlzLnBhc3N3b3JkKX0pfV9oYW5kbGVBdXRoTUQ1UGFzc3dvcmQoZSl7XG50aGlzLl9jaGVja1BnUGFzcygoKT0+e2xldCB0PWdjLnBvc3RncmVzTWQ1UGFzc3dvcmRIYXNoKHRoaXMudXNlcix0aGlzLnBhc3N3b3JkLFxuZS5zYWx0KTt0aGlzLmNvbm5lY3Rpb24ucGFzc3dvcmQodCl9KX1faGFuZGxlQXV0aFNBU0woZSl7dGhpcy5fY2hlY2tQZ1Bhc3MoKCk9PntcbnRoaXMuc2FzbFNlc3Npb249aG4uc3RhcnRTZXNzaW9uKGUubWVjaGFuaXNtcyksdGhpcy5jb25uZWN0aW9uLnNlbmRTQVNMSW5pdGlhbFJlc3BvbnNlTWVzc2FnZShcbnRoaXMuc2FzbFNlc3Npb24ubWVjaGFuaXNtLHRoaXMuc2FzbFNlc3Npb24ucmVzcG9uc2UpfSl9X2hhbmRsZUF1dGhTQVNMQ29udGludWUoZSl7XG5obi5jb250aW51ZVNlc3Npb24odGhpcy5zYXNsU2Vzc2lvbix0aGlzLnBhc3N3b3JkLGUuZGF0YSksdGhpcy5jb25uZWN0aW9uLnNlbmRTQ1JBTUNsaWVudEZpbmFsTWVzc2FnZShcbnRoaXMuc2FzbFNlc3Npb24ucmVzcG9uc2UpfV9oYW5kbGVBdXRoU0FTTEZpbmFsKGUpe2huLmZpbmFsaXplU2Vzc2lvbih0aGlzLnNhc2xTZXNzaW9uLFxuZS5kYXRhKSx0aGlzLnNhc2xTZXNzaW9uPW51bGx9X2hhbmRsZUJhY2tlbmRLZXlEYXRhKGUpe3RoaXMucHJvY2Vzc0lEPWUucHJvY2Vzc0lELFxudGhpcy5zZWNyZXRLZXk9ZS5zZWNyZXRLZXl9X2hhbmRsZVJlYWR5Rm9yUXVlcnkoZSl7dGhpcy5fY29ubmVjdGluZyYmKHRoaXMuX2Nvbm5lY3Rpbmc9XG4hMSx0aGlzLl9jb25uZWN0ZWQ9ITAsY2xlYXJUaW1lb3V0KHRoaXMuY29ubmVjdGlvblRpbWVvdXRIYW5kbGUpLHRoaXMuX2Nvbm5lY3Rpb25DYWxsYmFjayYmXG4odGhpcy5fY29ubmVjdGlvbkNhbGxiYWNrKG51bGwsdGhpcyksdGhpcy5fY29ubmVjdGlvbkNhbGxiYWNrPW51bGwpLHRoaXMuZW1pdChcImNcXFxub25uZWN0XCIpKTtsZXR7YWN0aXZlUXVlcnk6dH09dGhpczt0aGlzLmFjdGl2ZVF1ZXJ5PW51bGwsdGhpcy5yZWFkeUZvclF1ZXJ5PSEwLHQmJlxudC5oYW5kbGVSZWFkeUZvclF1ZXJ5KHRoaXMuY29ubmVjdGlvbiksdGhpcy5fcHVsc2VRdWVyeVF1ZXVlKCl9X2hhbmRsZUVycm9yV2hpbGVDb25uZWN0aW5nKGUpe1xuaWYoIXRoaXMuX2Nvbm5lY3Rpb25FcnJvcil7aWYodGhpcy5fY29ubmVjdGlvbkVycm9yPSEwLGNsZWFyVGltZW91dCh0aGlzLmNvbm5lY3Rpb25UaW1lb3V0SGFuZGxlKSxcbnRoaXMuX2Nvbm5lY3Rpb25DYWxsYmFjaylyZXR1cm4gdGhpcy5fY29ubmVjdGlvbkNhbGxiYWNrKGUpO3RoaXMuZW1pdChcImVycm9yXCIsZSl9fV9oYW5kbGVFcnJvckV2ZW50KGUpe1xuaWYodGhpcy5fY29ubmVjdGluZylyZXR1cm4gdGhpcy5faGFuZGxlRXJyb3JXaGlsZUNvbm5lY3RpbmcoZSk7dGhpcy5fcXVlcnlhYmxlPSExLFxudGhpcy5fZXJyb3JBbGxRdWVyaWVzKGUpLHRoaXMuZW1pdChcImVycm9yXCIsZSl9X2hhbmRsZUVycm9yTWVzc2FnZShlKXtpZih0aGlzLl9jb25uZWN0aW5nKVxucmV0dXJuIHRoaXMuX2hhbmRsZUVycm9yV2hpbGVDb25uZWN0aW5nKGUpO2xldCB0PXRoaXMuYWN0aXZlUXVlcnk7aWYoIXQpe3RoaXMuX2hhbmRsZUVycm9yRXZlbnQoXG5lKTtyZXR1cm59dGhpcy5hY3RpdmVRdWVyeT1udWxsLHQuaGFuZGxlRXJyb3IoZSx0aGlzLmNvbm5lY3Rpb24pfV9oYW5kbGVSb3dEZXNjcmlwdGlvbihlKXtcbnRoaXMuYWN0aXZlUXVlcnkuaGFuZGxlUm93RGVzY3JpcHRpb24oZSl9X2hhbmRsZURhdGFSb3coZSl7dGhpcy5hY3RpdmVRdWVyeS5oYW5kbGVEYXRhUm93KFxuZSl9X2hhbmRsZVBvcnRhbFN1c3BlbmRlZChlKXt0aGlzLmFjdGl2ZVF1ZXJ5LmhhbmRsZVBvcnRhbFN1c3BlbmRlZCh0aGlzLmNvbm5lY3Rpb24pfV9oYW5kbGVFbXB0eVF1ZXJ5KGUpe1xudGhpcy5hY3RpdmVRdWVyeS5oYW5kbGVFbXB0eVF1ZXJ5KHRoaXMuY29ubmVjdGlvbil9X2hhbmRsZUNvbW1hbmRDb21wbGV0ZShlKXt0aGlzLlxuYWN0aXZlUXVlcnkuaGFuZGxlQ29tbWFuZENvbXBsZXRlKGUsdGhpcy5jb25uZWN0aW9uKX1faGFuZGxlUGFyc2VDb21wbGV0ZShlKXt0aGlzLlxuYWN0aXZlUXVlcnkubmFtZSYmKHRoaXMuY29ubmVjdGlvbi5wYXJzZWRTdGF0ZW1lbnRzW3RoaXMuYWN0aXZlUXVlcnkubmFtZV09dGhpcy5cbmFjdGl2ZVF1ZXJ5LnRleHQpfV9oYW5kbGVDb3B5SW5SZXNwb25zZShlKXt0aGlzLmFjdGl2ZVF1ZXJ5LmhhbmRsZUNvcHlJblJlc3BvbnNlKFxudGhpcy5jb25uZWN0aW9uKX1faGFuZGxlQ29weURhdGEoZSl7dGhpcy5hY3RpdmVRdWVyeS5oYW5kbGVDb3B5RGF0YShlLHRoaXMuY29ubmVjdGlvbil9X2hhbmRsZU5vdGlmaWNhdGlvbihlKXtcbnRoaXMuZW1pdChcIm5vdGlmaWNhdGlvblwiLGUpfV9oYW5kbGVOb3RpY2UoZSl7dGhpcy5lbWl0KFwibm90aWNlXCIsZSl9Z2V0U3RhcnR1cENvbmYoKXtcbnZhciBlPXRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMsdD17dXNlcjplLnVzZXIsZGF0YWJhc2U6ZS5kYXRhYmFzZX0sbj1lLmFwcGxpY2F0aW9uX25hbWV8fFxuZS5mYWxsYmFja19hcHBsaWNhdGlvbl9uYW1lO3JldHVybiBuJiYodC5hcHBsaWNhdGlvbl9uYW1lPW4pLGUucmVwbGljYXRpb24mJih0LnJlcGxpY2F0aW9uPVxuXCJcIitlLnJlcGxpY2F0aW9uKSxlLnN0YXRlbWVudF90aW1lb3V0JiYodC5zdGF0ZW1lbnRfdGltZW91dD1TdHJpbmcocGFyc2VJbnQoZS5zdGF0ZW1lbnRfdGltZW91dCxcbjEwKSkpLGUubG9ja190aW1lb3V0JiYodC5sb2NrX3RpbWVvdXQ9U3RyaW5nKHBhcnNlSW50KGUubG9ja190aW1lb3V0LDEwKSkpLGUuaWRsZV9pbl90cmFuc2FjdGlvbl9zZXNzaW9uX3RpbWVvdXQmJlxuKHQuaWRsZV9pbl90cmFuc2FjdGlvbl9zZXNzaW9uX3RpbWVvdXQ9U3RyaW5nKHBhcnNlSW50KGUuaWRsZV9pbl90cmFuc2FjdGlvbl9zZXNzaW9uX3RpbWVvdXQsXG4xMCkpKSxlLm9wdGlvbnMmJih0Lm9wdGlvbnM9ZS5vcHRpb25zKSx0fWNhbmNlbChlLHQpe2lmKGUuYWN0aXZlUXVlcnk9PT10KXt2YXIgbj10aGlzLlxuY29ubmVjdGlvbjt0aGlzLmhvc3QmJnRoaXMuaG9zdC5pbmRleE9mKFwiL1wiKT09PTA/bi5jb25uZWN0KHRoaXMuaG9zdCtcIi8ucy5QR1NRTC5cIitcbnRoaXMucG9ydCk6bi5jb25uZWN0KHRoaXMucG9ydCx0aGlzLmhvc3QpLG4ub24oXCJjb25uZWN0XCIsZnVuY3Rpb24oKXtuLmNhbmNlbChlLnByb2Nlc3NJRCxcbmUuc2VjcmV0S2V5KX0pfWVsc2UgZS5xdWVyeVF1ZXVlLmluZGV4T2YodCkhPT0tMSYmZS5xdWVyeVF1ZXVlLnNwbGljZShlLnF1ZXJ5UXVldWUuXG5pbmRleE9mKHQpLDEpfXNldFR5cGVQYXJzZXIoZSx0LG4pe3JldHVybiB0aGlzLl90eXBlcy5zZXRUeXBlUGFyc2VyKGUsdCxuKX1nZXRUeXBlUGFyc2VyKGUsdCl7XG5yZXR1cm4gdGhpcy5fdHlwZXMuZ2V0VHlwZVBhcnNlcihlLHQpfWVzY2FwZUlkZW50aWZpZXIoZSl7cmV0dXJuJ1wiJytlLnJlcGxhY2UoL1wiL2csXG4nXCJcIicpKydcIid9ZXNjYXBlTGl0ZXJhbChlKXtmb3IodmFyIHQ9ITEsbj1cIidcIixpPTA7aTxlLmxlbmd0aDtpKyspe3ZhciBzPWVbaV07cz09PVxuXCInXCI/bis9cytzOnM9PT1cIlxcXFxcIj8obis9cytzLHQ9ITApOm4rPXN9cmV0dXJuIG4rPVwiJ1wiLHQ9PT0hMCYmKG49XCIgRVwiK24pLG59X3B1bHNlUXVlcnlRdWV1ZSgpe1xuaWYodGhpcy5yZWFkeUZvclF1ZXJ5PT09ITApaWYodGhpcy5hY3RpdmVRdWVyeT10aGlzLnF1ZXJ5UXVldWUuc2hpZnQoKSx0aGlzLmFjdGl2ZVF1ZXJ5KXtcbnRoaXMucmVhZHlGb3JRdWVyeT0hMSx0aGlzLmhhc0V4ZWN1dGVkPSEwO2xldCBlPXRoaXMuYWN0aXZlUXVlcnkuc3VibWl0KHRoaXMuY29ubmVjdGlvbik7XG5lJiZtLm5leHRUaWNrKCgpPT57dGhpcy5hY3RpdmVRdWVyeS5oYW5kbGVFcnJvcihlLHRoaXMuY29ubmVjdGlvbiksdGhpcy5yZWFkeUZvclF1ZXJ5PVxuITAsdGhpcy5fcHVsc2VRdWVyeVF1ZXVlKCl9KX1lbHNlIHRoaXMuaGFzRXhlY3V0ZWQmJih0aGlzLmFjdGl2ZVF1ZXJ5PW51bGwsdGhpcy5cbmVtaXQoXCJkcmFpblwiKSl9cXVlcnkoZSx0LG4pe3ZhciBpLHMsbyx1LGM7aWYoZT09bnVsbCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xpZW50XFxcbiB3YXMgcGFzc2VkIGEgbnVsbCBvciB1bmRlZmluZWQgcXVlcnlcIik7cmV0dXJuIHR5cGVvZiBlLnN1Ym1pdD09XCJmdW5jdGlvblwiPyhvPWUuXG5xdWVyeV90aW1lb3V0fHx0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLnF1ZXJ5X3RpbWVvdXQscz1pPWUsdHlwZW9mIHQ9PVwiZnVuY3Rpb25cIiYmXG4oaS5jYWxsYmFjaz1pLmNhbGxiYWNrfHx0KSk6KG89dGhpcy5jb25uZWN0aW9uUGFyYW1ldGVycy5xdWVyeV90aW1lb3V0LGk9bmV3IFBzKFxuZSx0LG4pLGkuY2FsbGJhY2t8fChzPW5ldyB0aGlzLl9Qcm9taXNlKChoLGwpPT57aS5jYWxsYmFjaz0oeSxFKT0+eT9sKHkpOmgoRSl9KSkpLFxubyYmKGM9aS5jYWxsYmFjayx1PXNldFRpbWVvdXQoKCk9Pnt2YXIgaD1uZXcgRXJyb3IoXCJRdWVyeSByZWFkIHRpbWVvdXRcIik7bS5uZXh0VGljayhcbigpPT57aS5oYW5kbGVFcnJvcihoLHRoaXMuY29ubmVjdGlvbil9KSxjKGgpLGkuY2FsbGJhY2s9KCk9Pnt9O3ZhciBsPXRoaXMucXVlcnlRdWV1ZS5cbmluZGV4T2YoaSk7bD4tMSYmdGhpcy5xdWVyeVF1ZXVlLnNwbGljZShsLDEpLHRoaXMuX3B1bHNlUXVlcnlRdWV1ZSgpfSxvKSxpLmNhbGxiYWNrPVxuKGgsbCk9PntjbGVhclRpbWVvdXQodSksYyhoLGwpfSksdGhpcy5iaW5hcnkmJiFpLmJpbmFyeSYmKGkuYmluYXJ5PSEwKSxpLl9yZXN1bHQmJlxuIWkuX3Jlc3VsdC5fdHlwZXMmJihpLl9yZXN1bHQuX3R5cGVzPXRoaXMuX3R5cGVzKSx0aGlzLl9xdWVyeWFibGU/dGhpcy5fZW5kaW5nPyhtLlxubmV4dFRpY2soKCk9PntpLmhhbmRsZUVycm9yKG5ldyBFcnJvcihcIkNsaWVudCB3YXMgY2xvc2VkIGFuZCBpcyBub3QgcXVlcnlhYmxlXCIpLFxudGhpcy5jb25uZWN0aW9uKX0pLHMpOih0aGlzLnF1ZXJ5UXVldWUucHVzaChpKSx0aGlzLl9wdWxzZVF1ZXJ5UXVldWUoKSxzKToobS5uZXh0VGljayhcbigpPT57aS5oYW5kbGVFcnJvcihuZXcgRXJyb3IoXCJDbGllbnQgaGFzIGVuY291bnRlcmVkIGEgY29ubmVjdGlvbiBlcnJvciBhbmQgaXMgblxcXG5vdCBxdWVyeWFibGVcIiksdGhpcy5jb25uZWN0aW9uKX0pLHMpfXJlZigpe3RoaXMuY29ubmVjdGlvbi5yZWYoKX11bnJlZigpe3RoaXMuY29ubmVjdGlvbi5cbnVucmVmKCl9ZW5kKGUpe2lmKHRoaXMuX2VuZGluZz0hMCwhdGhpcy5jb25uZWN0aW9uLl9jb25uZWN0aW5nKWlmKGUpZSgpO2Vsc2UgcmV0dXJuIHRoaXMuXG5fUHJvbWlzZS5yZXNvbHZlKCk7aWYodGhpcy5hY3RpdmVRdWVyeXx8IXRoaXMuX3F1ZXJ5YWJsZT90aGlzLmNvbm5lY3Rpb24uc3RyZWFtLlxuZGVzdHJveSgpOnRoaXMuY29ubmVjdGlvbi5lbmQoKSxlKXRoaXMuY29ubmVjdGlvbi5vbmNlKFwiZW5kXCIsZSk7ZWxzZSByZXR1cm4gbmV3IHRoaXMuXG5fUHJvbWlzZSh0PT57dGhpcy5jb25uZWN0aW9uLm9uY2UoXCJlbmRcIix0KX0pfX07YShsbixcIkNsaWVudFwiKTt2YXIgdnQ9bG47dnQuUXVlcnk9XG5QcztCcy5leHBvcnRzPXZ0fSk7dmFyIERzPUkoKHVmLE1zKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXIgdmM9Z2UoKS5FdmVudEVtaXR0ZXIsUnM9YShmdW5jdGlvbigpe30sXCJcXFxuTk9PUFwiKSxGcz1hKChyLGUpPT57bGV0IHQ9ci5maW5kSW5kZXgoZSk7cmV0dXJuIHQ9PT0tMT92b2lkIDA6ci5zcGxpY2UodCwxKVswXX0sXG5cInJlbW92ZVdoZXJlXCIpLGRuPWNsYXNzIGRue2NvbnN0cnVjdG9yKGUsdCxuKXt0aGlzLmNsaWVudD1lLHRoaXMuaWRsZUxpc3RlbmVyPXQsXG50aGlzLnRpbWVvdXRJZD1ufX07YShkbixcIklkbGVJdGVtXCIpO3ZhciBmbj1kbix5bj1jbGFzcyB5bntjb25zdHJ1Y3RvcihlKXt0aGlzLmNhbGxiYWNrPVxuZX19O2EoeW4sXCJQZW5kaW5nSXRlbVwiKTt2YXIgTmU9eW47ZnVuY3Rpb24gX2MoKXt0aHJvdyBuZXcgRXJyb3IoXCJSZWxlYXNlIGNhbGxlZCBcXFxub24gY2xpZW50IHdoaWNoIGhhcyBhbHJlYWR5IGJlZW4gcmVsZWFzZWQgdG8gdGhlIHBvb2wuXCIpfWEoX2MsXCJ0aHJvd09uRG91YmxlUmVsZVxcXG5hc2VcIik7ZnVuY3Rpb24gX3QocixlKXtpZihlKXJldHVybntjYWxsYmFjazplLHJlc3VsdDp2b2lkIDB9O2xldCB0LG4saT1hKGZ1bmN0aW9uKG8sdSl7XG5vP3Qobyk6bih1KX0sXCJjYlwiKSxzPW5ldyByKGZ1bmN0aW9uKG8sdSl7bj1vLHQ9dX0pLmNhdGNoKG89Pnt0aHJvdyBFcnJvci5jYXB0dXJlU3RhY2tUcmFjZShcbm8pLG99KTtyZXR1cm57Y2FsbGJhY2s6aSxyZXN1bHQ6c319YShfdCxcInByb21pc2lmeVwiKTtmdW5jdGlvbiBBYyhyLGUpe3JldHVybiBhKGZ1bmN0aW9uIHQobil7XG5uLmNsaWVudD1lLGUucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLHQpLGUub24oXCJlcnJvclwiLCgpPT57ci5sb2coXCJhZGRpdGlvbmFsIGNsaWVuXFxcbnQgZXJyb3IgYWZ0ZXIgZGlzY29ubmVjdGlvbiBkdWUgdG8gZXJyb3JcIixuKX0pLHIuX3JlbW92ZShlKSxyLmVtaXQoXCJlcnJvclwiLG4sZSl9LFxuXCJpZGxlTGlzdGVuZXJcIil9YShBYyxcIm1ha2VJZGxlTGlzdGVuZXJcIik7dmFyIG1uPWNsYXNzIG1uIGV4dGVuZHMgdmN7Y29uc3RydWN0b3IoZSx0KXtcbnN1cGVyKCksdGhpcy5vcHRpb25zPU9iamVjdC5hc3NpZ24oe30sZSksZSE9bnVsbCYmXCJwYXNzd29yZFwiaW4gZSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KFxudGhpcy5vcHRpb25zLFwicGFzc3dvcmRcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsd3JpdGFibGU6ITAsdmFsdWU6ZS5wYXNzd29yZH0pLFxuZSE9bnVsbCYmZS5zc2wmJmUuc3NsLmtleSYmT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMub3B0aW9ucy5zc2wsXCJrZXlcIix7ZW51bWVyYWJsZTohMX0pLFxudGhpcy5vcHRpb25zLm1heD10aGlzLm9wdGlvbnMubWF4fHx0aGlzLm9wdGlvbnMucG9vbFNpemV8fDEwLHRoaXMub3B0aW9ucy5tYXhVc2VzPVxudGhpcy5vcHRpb25zLm1heFVzZXN8fDEvMCx0aGlzLm9wdGlvbnMuYWxsb3dFeGl0T25JZGxlPXRoaXMub3B0aW9ucy5hbGxvd0V4aXRPbklkbGV8fFxuITEsdGhpcy5vcHRpb25zLm1heExpZmV0aW1lU2Vjb25kcz10aGlzLm9wdGlvbnMubWF4TGlmZXRpbWVTZWNvbmRzfHwwLHRoaXMubG9nPXRoaXMuXG5vcHRpb25zLmxvZ3x8ZnVuY3Rpb24oKXt9LHRoaXMuQ2xpZW50PXRoaXMub3B0aW9ucy5DbGllbnR8fHR8fEF0KCkuQ2xpZW50LHRoaXMuUHJvbWlzZT1cbnRoaXMub3B0aW9ucy5Qcm9taXNlfHxiLlByb21pc2UsdHlwZW9mIHRoaXMub3B0aW9ucy5pZGxlVGltZW91dE1pbGxpcz5cInVcIiYmKHRoaXMuXG5vcHRpb25zLmlkbGVUaW1lb3V0TWlsbGlzPTFlNCksdGhpcy5fY2xpZW50cz1bXSx0aGlzLl9pZGxlPVtdLHRoaXMuX2V4cGlyZWQ9bmV3IFdlYWtTZXQsXG50aGlzLl9wZW5kaW5nUXVldWU9W10sdGhpcy5fZW5kQ2FsbGJhY2s9dm9pZCAwLHRoaXMuZW5kaW5nPSExLHRoaXMuZW5kZWQ9ITF9X2lzRnVsbCgpe1xucmV0dXJuIHRoaXMuX2NsaWVudHMubGVuZ3RoPj10aGlzLm9wdGlvbnMubWF4fV9wdWxzZVF1ZXVlKCl7aWYodGhpcy5sb2coXCJwdWxzZSBxXFxcbnVldWVcIiksdGhpcy5lbmRlZCl7dGhpcy5sb2coXCJwdWxzZSBxdWV1ZSBlbmRlZFwiKTtyZXR1cm59aWYodGhpcy5lbmRpbmcpe3RoaXMubG9nKFxuXCJwdWxzZSBxdWV1ZSBvbiBlbmRpbmdcIiksdGhpcy5faWRsZS5sZW5ndGgmJnRoaXMuX2lkbGUuc2xpY2UoKS5tYXAodD0+e3RoaXMuX3JlbW92ZShcbnQuY2xpZW50KX0pLHRoaXMuX2NsaWVudHMubGVuZ3RofHwodGhpcy5lbmRlZD0hMCx0aGlzLl9lbmRDYWxsYmFjaygpKTtyZXR1cm59aWYoIXRoaXMuXG5fcGVuZGluZ1F1ZXVlLmxlbmd0aCl7dGhpcy5sb2coXCJubyBxdWV1ZWQgcmVxdWVzdHNcIik7cmV0dXJufWlmKCF0aGlzLl9pZGxlLmxlbmd0aCYmXG50aGlzLl9pc0Z1bGwoKSlyZXR1cm47bGV0IGU9dGhpcy5fcGVuZGluZ1F1ZXVlLnNoaWZ0KCk7aWYodGhpcy5faWRsZS5sZW5ndGgpe2xldCB0PXRoaXMuXG5faWRsZS5wb3AoKTtjbGVhclRpbWVvdXQodC50aW1lb3V0SWQpO2xldCBuPXQuY2xpZW50O24ucmVmJiZuLnJlZigpO2xldCBpPXQuaWRsZUxpc3RlbmVyO1xucmV0dXJuIHRoaXMuX2FjcXVpcmVDbGllbnQobixlLGksITEpfWlmKCF0aGlzLl9pc0Z1bGwoKSlyZXR1cm4gdGhpcy5uZXdDbGllbnQoZSk7XG50aHJvdyBuZXcgRXJyb3IoXCJ1bmV4cGVjdGVkIGNvbmRpdGlvblwiKX1fcmVtb3ZlKGUpe2xldCB0PUZzKHRoaXMuX2lkbGUsbj0+bi5jbGllbnQ9PT1cbmUpO3QhPT12b2lkIDAmJmNsZWFyVGltZW91dCh0LnRpbWVvdXRJZCksdGhpcy5fY2xpZW50cz10aGlzLl9jbGllbnRzLmZpbHRlcihuPT5uIT09XG5lKSxlLmVuZCgpLHRoaXMuZW1pdChcInJlbW92ZVwiLGUpfWNvbm5lY3QoZSl7aWYodGhpcy5lbmRpbmcpe2xldCBpPW5ldyBFcnJvcihcIkNhblxcXG5ub3QgdXNlIGEgcG9vbCBhZnRlciBjYWxsaW5nIGVuZCBvbiB0aGUgcG9vbFwiKTtyZXR1cm4gZT9lKGkpOnRoaXMuUHJvbWlzZS5yZWplY3QoXG5pKX1sZXQgdD1fdCh0aGlzLlByb21pc2UsZSksbj10LnJlc3VsdDtpZih0aGlzLl9pc0Z1bGwoKXx8dGhpcy5faWRsZS5sZW5ndGgpe2lmKHRoaXMuXG5faWRsZS5sZW5ndGgmJm0ubmV4dFRpY2soKCk9PnRoaXMuX3B1bHNlUXVldWUoKSksIXRoaXMub3B0aW9ucy5jb25uZWN0aW9uVGltZW91dE1pbGxpcylcbnJldHVybiB0aGlzLl9wZW5kaW5nUXVldWUucHVzaChuZXcgTmUodC5jYWxsYmFjaykpLG47bGV0IGk9YSgodSxjLGgpPT57Y2xlYXJUaW1lb3V0KFxubyksdC5jYWxsYmFjayh1LGMsaCl9LFwicXVldWVDYWxsYmFja1wiKSxzPW5ldyBOZShpKSxvPXNldFRpbWVvdXQoKCk9PntGcyh0aGlzLl9wZW5kaW5nUXVldWUsXG51PT51LmNhbGxiYWNrPT09aSkscy50aW1lZE91dD0hMCx0LmNhbGxiYWNrKG5ldyBFcnJvcihcInRpbWVvdXQgZXhjZWVkZWQgd2hlbiB0cnlcXFxuaW5nIHRvIGNvbm5lY3RcIikpfSx0aGlzLm9wdGlvbnMuY29ubmVjdGlvblRpbWVvdXRNaWxsaXMpO3JldHVybiB0aGlzLl9wZW5kaW5nUXVldWUuXG5wdXNoKHMpLG59cmV0dXJuIHRoaXMubmV3Q2xpZW50KG5ldyBOZSh0LmNhbGxiYWNrKSksbn1uZXdDbGllbnQoZSl7bGV0IHQ9bmV3IHRoaXMuXG5DbGllbnQodGhpcy5vcHRpb25zKTt0aGlzLl9jbGllbnRzLnB1c2godCk7bGV0IG49QWModGhpcyx0KTt0aGlzLmxvZyhcImNoZWNraW5nIGNcXFxubGllbnQgdGltZW91dFwiKTtsZXQgaSxzPSExO3RoaXMub3B0aW9ucy5jb25uZWN0aW9uVGltZW91dE1pbGxpcyYmKGk9c2V0VGltZW91dCgoKT0+e1xudGhpcy5sb2coXCJlbmRpbmcgY2xpZW50IGR1ZSB0byB0aW1lb3V0XCIpLHM9ITAsdC5jb25uZWN0aW9uP3QuY29ubmVjdGlvbi5zdHJlYW0uZGVzdHJveSgpOlxudC5lbmQoKX0sdGhpcy5vcHRpb25zLmNvbm5lY3Rpb25UaW1lb3V0TWlsbGlzKSksdGhpcy5sb2coXCJjb25uZWN0aW5nIG5ldyBjbGllbnRcIiksXG50LmNvbm5lY3Qobz0+e2lmKGkmJmNsZWFyVGltZW91dChpKSx0Lm9uKFwiZXJyb3JcIixuKSxvKXRoaXMubG9nKFwiY2xpZW50IGZhaWxlZCB0b1xcXG4gY29ubmVjdFwiLG8pLHRoaXMuX2NsaWVudHM9dGhpcy5fY2xpZW50cy5maWx0ZXIodT0+dSE9PXQpLHMmJihvLm1lc3NhZ2U9XCJDb25uZWN0XFxcbmlvbiB0ZXJtaW5hdGVkIGR1ZSB0byBjb25uZWN0aW9uIHRpbWVvdXRcIiksdGhpcy5fcHVsc2VRdWV1ZSgpLGUudGltZWRPdXR8fGUuY2FsbGJhY2soXG5vLHZvaWQgMCxScyk7ZWxzZXtpZih0aGlzLmxvZyhcIm5ldyBjbGllbnQgY29ubmVjdGVkXCIpLHRoaXMub3B0aW9ucy5tYXhMaWZldGltZVNlY29uZHMhPT1cbjApe2xldCB1PXNldFRpbWVvdXQoKCk9Pnt0aGlzLmxvZyhcImVuZGluZyBjbGllbnQgZHVlIHRvIGV4cGlyZWQgbGlmZXRpbWVcIiksdGhpcy5cbl9leHBpcmVkLmFkZCh0KSx0aGlzLl9pZGxlLmZpbmRJbmRleChoPT5oLmNsaWVudD09PXQpIT09LTEmJnRoaXMuX2FjcXVpcmVDbGllbnQoXG50LG5ldyBOZSgoaCxsLHkpPT55KCkpLG4sITEpfSx0aGlzLm9wdGlvbnMubWF4TGlmZXRpbWVTZWNvbmRzKjFlMyk7dS51bnJlZigpLHQub25jZShcblwiZW5kXCIsKCk9PmNsZWFyVGltZW91dCh1KSl9cmV0dXJuIHRoaXMuX2FjcXVpcmVDbGllbnQodCxlLG4sITApfX0pfV9hY3F1aXJlQ2xpZW50KGUsdCxuLGkpe1xuaSYmdGhpcy5lbWl0KFwiY29ubmVjdFwiLGUpLHRoaXMuZW1pdChcImFjcXVpcmVcIixlKSxlLnJlbGVhc2U9dGhpcy5fcmVsZWFzZU9uY2UoZSxuKSxcbmUucmVtb3ZlTGlzdGVuZXIoXCJlcnJvclwiLG4pLHQudGltZWRPdXQ/aSYmdGhpcy5vcHRpb25zLnZlcmlmeT90aGlzLm9wdGlvbnMudmVyaWZ5KFxuZSxlLnJlbGVhc2UpOmUucmVsZWFzZSgpOmkmJnRoaXMub3B0aW9ucy52ZXJpZnk/dGhpcy5vcHRpb25zLnZlcmlmeShlLHM9PntpZihzKXJldHVybiBlLlxucmVsZWFzZShzKSx0LmNhbGxiYWNrKHMsdm9pZCAwLFJzKTt0LmNhbGxiYWNrKHZvaWQgMCxlLGUucmVsZWFzZSl9KTp0LmNhbGxiYWNrKHZvaWQgMCxcbmUsZS5yZWxlYXNlKX1fcmVsZWFzZU9uY2UoZSx0KXtsZXQgbj0hMTtyZXR1cm4gaT0+e24mJl9jKCksbj0hMCx0aGlzLl9yZWxlYXNlKGUsXG50LGkpfX1fcmVsZWFzZShlLHQsbil7aWYoZS5vbihcImVycm9yXCIsdCksZS5fcG9vbFVzZUNvdW50PShlLl9wb29sVXNlQ291bnR8fDApKzEsXG50aGlzLmVtaXQoXCJyZWxlYXNlXCIsbixlKSxufHx0aGlzLmVuZGluZ3x8IWUuX3F1ZXJ5YWJsZXx8ZS5fZW5kaW5nfHxlLl9wb29sVXNlQ291bnQ+PVxudGhpcy5vcHRpb25zLm1heFVzZXMpe2UuX3Bvb2xVc2VDb3VudD49dGhpcy5vcHRpb25zLm1heFVzZXMmJnRoaXMubG9nKFwicmVtb3ZlIGV4XFxcbnBlbmRlZCBjbGllbnRcIiksdGhpcy5fcmVtb3ZlKGUpLHRoaXMuX3B1bHNlUXVldWUoKTtyZXR1cm59aWYodGhpcy5fZXhwaXJlZC5oYXMoZSkpe1xudGhpcy5sb2coXCJyZW1vdmUgZXhwaXJlZCBjbGllbnRcIiksdGhpcy5fZXhwaXJlZC5kZWxldGUoZSksdGhpcy5fcmVtb3ZlKGUpLHRoaXMuX3B1bHNlUXVldWUoKTtcbnJldHVybn1sZXQgczt0aGlzLm9wdGlvbnMuaWRsZVRpbWVvdXRNaWxsaXMmJihzPXNldFRpbWVvdXQoKCk9Pnt0aGlzLmxvZyhcInJlbW92ZVxcXG4gaWRsZSBjbGllbnRcIiksdGhpcy5fcmVtb3ZlKGUpfSx0aGlzLm9wdGlvbnMuaWRsZVRpbWVvdXRNaWxsaXMpLHRoaXMub3B0aW9ucy5hbGxvd0V4aXRPbklkbGUmJlxucy51bnJlZigpKSx0aGlzLm9wdGlvbnMuYWxsb3dFeGl0T25JZGxlJiZlLnVucmVmKCksdGhpcy5faWRsZS5wdXNoKG5ldyBmbihlLHQscykpLFxudGhpcy5fcHVsc2VRdWV1ZSgpfXF1ZXJ5KGUsdCxuKXtpZih0eXBlb2YgZT09XCJmdW5jdGlvblwiKXtsZXQgcz1fdCh0aGlzLlByb21pc2UsZSk7XG5yZXR1cm4gUyhmdW5jdGlvbigpe3JldHVybiBzLmNhbGxiYWNrKG5ldyBFcnJvcihcIlBhc3NpbmcgYSBmdW5jdGlvbiBhcyB0aGUgZmlyc3RcXFxuIHBhcmFtZXRlciB0byBwb29sLnF1ZXJ5IGlzIG5vdCBzdXBwb3J0ZWRcIikpfSkscy5yZXN1bHR9dHlwZW9mIHQ9PVwiZnVuY3Rpb25cIiYmKG49XG50LHQ9dm9pZCAwKTtsZXQgaT1fdCh0aGlzLlByb21pc2Usbik7cmV0dXJuIG49aS5jYWxsYmFjayx0aGlzLmNvbm5lY3QoKHMsbyk9PntpZihzKVxucmV0dXJuIG4ocyk7bGV0IHU9ITEsYz1hKGg9Pnt1fHwodT0hMCxvLnJlbGVhc2UoaCksbihoKSl9LFwib25FcnJvclwiKTtvLm9uY2UoXCJlcnJcXFxub3JcIixjKSx0aGlzLmxvZyhcImRpc3BhdGNoaW5nIHF1ZXJ5XCIpO3RyeXtvLnF1ZXJ5KGUsdCwoaCxsKT0+e2lmKHRoaXMubG9nKFwicXVlcnkgXFxcbmRpc3BhdGNoZWRcIiksby5yZW1vdmVMaXN0ZW5lcihcImVycm9yXCIsYyksIXUpcmV0dXJuIHU9ITAsby5yZWxlYXNlKGgpLGg/bihoKTpuKHZvaWQgMCxcbmwpfSl9Y2F0Y2goaCl7cmV0dXJuIG8ucmVsZWFzZShoKSxuKGgpfX0pLGkucmVzdWx0fWVuZChlKXtpZih0aGlzLmxvZyhcImVuZGluZ1wiKSxcbnRoaXMuZW5kaW5nKXtsZXQgbj1uZXcgRXJyb3IoXCJDYWxsZWQgZW5kIG9uIHBvb2wgbW9yZSB0aGFuIG9uY2VcIik7cmV0dXJuIGU/ZShuKTpcbnRoaXMuUHJvbWlzZS5yZWplY3Qobil9dGhpcy5lbmRpbmc9ITA7bGV0IHQ9X3QodGhpcy5Qcm9taXNlLGUpO3JldHVybiB0aGlzLl9lbmRDYWxsYmFjaz1cbnQuY2FsbGJhY2ssdGhpcy5fcHVsc2VRdWV1ZSgpLHQucmVzdWx0fWdldCB3YWl0aW5nQ291bnQoKXtyZXR1cm4gdGhpcy5fcGVuZGluZ1F1ZXVlLlxubGVuZ3RofWdldCBpZGxlQ291bnQoKXtyZXR1cm4gdGhpcy5faWRsZS5sZW5ndGh9Z2V0IGV4cGlyZWRDb3VudCgpe3JldHVybiB0aGlzLl9jbGllbnRzLlxucmVkdWNlKChlLHQpPT5lKyh0aGlzLl9leHBpcmVkLmhhcyh0KT8xOjApLDApfWdldCB0b3RhbENvdW50KCl7cmV0dXJuIHRoaXMuX2NsaWVudHMuXG5sZW5ndGh9fTthKG1uLFwiUG9vbFwiKTt2YXIgcG49bW47TXMuZXhwb3J0cz1wbn0pO3ZhciBPcz17fTtYKE9zLHtkZWZhdWx0OigpPT5DY30pO3ZhciBDYyxrcz1LKCgpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO0NjPXt9fSk7dmFyIFVzPUkoKGZmLEljKT0+e0ljLmV4cG9ydHM9e25hbWU6XCJwZ1wiLHZlcnNpb246XCI4LjguMFwiLGRlc2NyaXB0aW9uOlwiUG9zdGdyZVNRTFxcXG4gY2xpZW50IC0gcHVyZSBqYXZhc2NyaXB0ICYgbGlicHEgd2l0aCB0aGUgc2FtZSBBUElcIixrZXl3b3JkczpbXCJkYXRhYmFzZVwiLFwibGlicHFcIixcblwicGdcIixcInBvc3RncmVcIixcInBvc3RncmVzXCIsXCJwb3N0Z3Jlc3FsXCIsXCJyZGJtc1wiXSxob21lcGFnZTpcImh0dHBzOi8vZ2l0aHViLmNvbS9icmlcXFxuYW5jL25vZGUtcG9zdGdyZXNcIixyZXBvc2l0b3J5Ont0eXBlOlwiZ2l0XCIsdXJsOlwiZ2l0Oi8vZ2l0aHViLmNvbS9icmlhbmMvbm9kZS1wb3N0XFxcbmdyZXMuZ2l0XCIsZGlyZWN0b3J5OlwicGFja2FnZXMvcGdcIn0sYXV0aG9yOlwiQnJpYW4gQ2FybHNvbiA8YnJpYW4ubS5jYXJsc29uQGdtYWlsLlxcXG5jb20+XCIsbWFpbjpcIi4vbGliXCIsZGVwZW5kZW5jaWVzOntcImJ1ZmZlci13cml0ZXJcIjpcIjIuMC4wXCIsXCJwYWNrZXQtcmVhZGVyXCI6XCIxLjAuMFwiLFxuXCJwZy1jb25uZWN0aW9uLXN0cmluZ1wiOlwiXjIuNS4wXCIsXCJwZy1wb29sXCI6XCJeMy41LjJcIixcInBnLXByb3RvY29sXCI6XCJeMS41LjBcIixcInBnLXR5XFxcbnBlc1wiOlwiXjIuMS4wXCIscGdwYXNzOlwiMS54XCJ9LGRldkRlcGVuZGVuY2llczp7YXN5bmM6XCIyLjYuNFwiLGJsdWViaXJkOlwiMy41LjJcIixjbzpcIlxcXG40LjYuMFwiLFwicGctY29weS1zdHJlYW1zXCI6XCIwLjMuMFwifSxwZWVyRGVwZW5kZW5jaWVzOntcInBnLW5hdGl2ZVwiOlwiPj0zLjAuMVwifSxwZWVyRGVwZW5kZW5jaWVzTWV0YTp7XG5cInBnLW5hdGl2ZVwiOntvcHRpb25hbDohMH19LHNjcmlwdHM6e3Rlc3Q6XCJtYWtlIHRlc3QtYWxsXCJ9LGZpbGVzOltcImxpYlwiLFwiU1BPTlNPUlNcXFxuLm1kXCJdLGxpY2Vuc2U6XCJNSVRcIixlbmdpbmVzOntub2RlOlwiPj0gOC4wLjBcIn0sZ2l0SGVhZDpcImM5OWZiMmMxMjdkZGY4ZDcxMjUwMGRiMmNcXFxuN2I5YTU0OTFhMTc4NjU1XCJ9fSk7dmFyIFFzPUkoKHBmLE5zKT0+e1widXNlIHN0cmljdFwiO3AoKTt2YXIgcXM9Z2UoKS5FdmVudEVtaXR0ZXIsVGM9KEdlKCksayhIZSkpLGduPXR0KCksXG5RZT1Ocy5leHBvcnRzPWZ1bmN0aW9uKHIsZSx0KXtxcy5jYWxsKHRoaXMpLHI9Z24ubm9ybWFsaXplUXVlcnlDb25maWcocixlLHQpLHRoaXMuXG50ZXh0PXIudGV4dCx0aGlzLnZhbHVlcz1yLnZhbHVlcyx0aGlzLm5hbWU9ci5uYW1lLHRoaXMuY2FsbGJhY2s9ci5jYWxsYmFjayx0aGlzLlxuc3RhdGU9XCJuZXdcIix0aGlzLl9hcnJheU1vZGU9ci5yb3dNb2RlPT09XCJhcnJheVwiLHRoaXMuX2VtaXRSb3dFdmVudHM9ITEsdGhpcy5vbihcIlxcXG5uZXdMaXN0ZW5lclwiLGZ1bmN0aW9uKG4pe249PT1cInJvd1wiJiYodGhpcy5fZW1pdFJvd0V2ZW50cz0hMCl9LmJpbmQodGhpcykpfTtUYy5pbmhlcml0cyhcblFlLHFzKTt2YXIgUGM9e3NxbFN0YXRlOlwiY29kZVwiLHN0YXRlbWVudFBvc2l0aW9uOlwicG9zaXRpb25cIixtZXNzYWdlUHJpbWFyeTpcIm1lc3NcXFxuYWdlXCIsY29udGV4dDpcIndoZXJlXCIsc2NoZW1hTmFtZTpcInNjaGVtYVwiLHRhYmxlTmFtZTpcInRhYmxlXCIsY29sdW1uTmFtZTpcImNvbHVtblwiLGRhdGFUeXBlTmFtZTpcIlxcXG5kYXRhVHlwZVwiLGNvbnN0cmFpbnROYW1lOlwiY29uc3RyYWludFwiLHNvdXJjZUZpbGU6XCJmaWxlXCIsc291cmNlTGluZTpcImxpbmVcIixzb3VyY2VGdW5jdGlvbjpcIlxcXG5yb3V0aW5lXCJ9O1FlLnByb3RvdHlwZS5oYW5kbGVFcnJvcj1mdW5jdGlvbihyKXt2YXIgZT10aGlzLm5hdGl2ZS5wcS5yZXN1bHRFcnJvckZpZWxkcygpO1xuaWYoZSlmb3IodmFyIHQgaW4gZSl7dmFyIG49UGNbdF18fHQ7cltuXT1lW3RdfXRoaXMuY2FsbGJhY2s/dGhpcy5jYWxsYmFjayhyKTp0aGlzLlxuZW1pdChcImVycm9yXCIsciksdGhpcy5zdGF0ZT1cImVycm9yXCJ9O1FlLnByb3RvdHlwZS50aGVuPWZ1bmN0aW9uKHIsZSl7cmV0dXJuIHRoaXMuXG5fZ2V0UHJvbWlzZSgpLnRoZW4ocixlKX07UWUucHJvdG90eXBlLmNhdGNoPWZ1bmN0aW9uKHIpe3JldHVybiB0aGlzLl9nZXRQcm9taXNlKCkuXG5jYXRjaChyKX07UWUucHJvdG90eXBlLl9nZXRQcm9taXNlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3Byb21pc2U/dGhpcy5fcHJvbWlzZTpcbih0aGlzLl9wcm9taXNlPW5ldyBQcm9taXNlKGZ1bmN0aW9uKHIsZSl7dGhpcy5fb25jZShcImVuZFwiLHIpLHRoaXMuX29uY2UoXCJlcnJvclwiLFxuZSl9LmJpbmQodGhpcykpLHRoaXMuX3Byb21pc2UpfTtRZS5wcm90b3R5cGUuc3VibWl0PWZ1bmN0aW9uKHIpe3RoaXMuc3RhdGU9XCJydW5uXFxcbmluZ1wiO3ZhciBlPXRoaXM7dGhpcy5uYXRpdmU9ci5uYXRpdmUsci5uYXRpdmUuYXJyYXlNb2RlPXRoaXMuX2FycmF5TW9kZTt2YXIgdD1hKFxuZnVuY3Rpb24ocyxvLHUpe2lmKHIubmF0aXZlLmFycmF5TW9kZT0hMSxTKGZ1bmN0aW9uKCl7ZS5lbWl0KFwiX2RvbmVcIil9KSxzKXJldHVybiBlLlxuaGFuZGxlRXJyb3Iocyk7ZS5fZW1pdFJvd0V2ZW50cyYmKHUubGVuZ3RoPjE/by5mb3JFYWNoKChjLGgpPT57Yy5mb3JFYWNoKGw9PntlLmVtaXQoXG5cInJvd1wiLGwsdVtoXSl9KX0pOm8uZm9yRWFjaChmdW5jdGlvbihjKXtlLmVtaXQoXCJyb3dcIixjLHUpfSkpLGUuc3RhdGU9XCJlbmRcIixlLmVtaXQoXG5cImVuZFwiLHUpLGUuY2FsbGJhY2smJmUuY2FsbGJhY2sobnVsbCx1KX0sXCJhZnRlclwiKTtpZihtLmRvbWFpbiYmKHQ9bS5kb21haW4uYmluZChcbnQpKSx0aGlzLm5hbWUpe3RoaXMubmFtZS5sZW5ndGg+NjMmJihjb25zb2xlLmVycm9yKFwiV2FybmluZyEgUG9zdGdyZXMgb25seSBzdXBwb1xcXG5ydHMgNjMgY2hhcmFjdGVycyBmb3IgcXVlcnkgbmFtZXMuXCIpLGNvbnNvbGUuZXJyb3IoXCJZb3Ugc3VwcGxpZWQgJXMgKCVzKVwiLHRoaXMubmFtZSxcbnRoaXMubmFtZS5sZW5ndGgpLGNvbnNvbGUuZXJyb3IoXCJUaGlzIGNhbiBjYXVzZSBjb25mbGljdHMgYW5kIHNpbGVudCBlcnJvcnMgZXhlY1xcXG51dGluZyBxdWVyaWVzXCIpKTt2YXIgbj0odGhpcy52YWx1ZXN8fFtdKS5tYXAoZ24ucHJlcGFyZVZhbHVlKTtpZihyLm5hbWVkUXVlcmllc1t0aGlzLlxubmFtZV0pe2lmKHRoaXMudGV4dCYmci5uYW1lZFF1ZXJpZXNbdGhpcy5uYW1lXSE9PXRoaXMudGV4dCl7bGV0IHM9bmV3IEVycm9yKGBQcmVcXFxucGFyZWQgc3RhdGVtZW50cyBtdXN0IGJlIHVuaXF1ZSAtICcke3RoaXMubmFtZX0nIHdhcyB1c2VkIGZvciBhIGRpZmZlcmVudCBzdGF0ZW1cXFxuZW50YCk7cmV0dXJuIHQocyl9cmV0dXJuIHIubmF0aXZlLmV4ZWN1dGUodGhpcy5uYW1lLG4sdCl9cmV0dXJuIHIubmF0aXZlLnByZXBhcmUoXG50aGlzLm5hbWUsdGhpcy50ZXh0LG4ubGVuZ3RoLGZ1bmN0aW9uKHMpe3JldHVybiBzP3Qocyk6KHIubmFtZWRRdWVyaWVzW2UubmFtZV09ZS5cbnRleHQsZS5uYXRpdmUuZXhlY3V0ZShlLm5hbWUsbix0KSl9KX1lbHNlIGlmKHRoaXMudmFsdWVzKXtpZighQXJyYXkuaXNBcnJheSh0aGlzLlxudmFsdWVzKSl7bGV0IHM9bmV3IEVycm9yKFwiUXVlcnkgdmFsdWVzIG11c3QgYmUgYW4gYXJyYXlcIik7cmV0dXJuIHQocyl9dmFyIGk9dGhpcy5cbnZhbHVlcy5tYXAoZ24ucHJlcGFyZVZhbHVlKTtyLm5hdGl2ZS5xdWVyeSh0aGlzLnRleHQsaSx0KX1lbHNlIHIubmF0aXZlLnF1ZXJ5KHRoaXMuXG50ZXh0LHQpfX0pO3ZhciBHcz1JKChnZixIcyk9PntcInVzZSBzdHJpY3RcIjtwKCk7dmFyIEJjPShrcygpLGsoT3MpKSxMYz1ocigpLG1mPVVzKCksV3M9Z2UoKS5cbkV2ZW50RW1pdHRlcixSYz0oR2UoKSxrKEhlKSksRmM9Z3QoKSxqcz1RcygpLFo9SHMuZXhwb3J0cz1mdW5jdGlvbihyKXtXcy5jYWxsKHRoaXMpLFxucj1yfHx7fSx0aGlzLl9Qcm9taXNlPXIuUHJvbWlzZXx8Yi5Qcm9taXNlLHRoaXMuX3R5cGVzPW5ldyBMYyhyLnR5cGVzKSx0aGlzLm5hdGl2ZT1cbm5ldyBCYyh7dHlwZXM6dGhpcy5fdHlwZXN9KSx0aGlzLl9xdWVyeVF1ZXVlPVtdLHRoaXMuX2VuZGluZz0hMSx0aGlzLl9jb25uZWN0aW5nPVxuITEsdGhpcy5fY29ubmVjdGVkPSExLHRoaXMuX3F1ZXJ5YWJsZT0hMDt2YXIgZT10aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzPW5ldyBGYyhcbnIpO3RoaXMudXNlcj1lLnVzZXIsT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsXCJwYXNzd29yZFwiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSxcbndyaXRhYmxlOiEwLHZhbHVlOmUucGFzc3dvcmR9KSx0aGlzLmRhdGFiYXNlPWUuZGF0YWJhc2UsdGhpcy5ob3N0PWUuaG9zdCx0aGlzLnBvcnQ9XG5lLnBvcnQsdGhpcy5uYW1lZFF1ZXJpZXM9e319O1ouUXVlcnk9anM7UmMuaW5oZXJpdHMoWixXcyk7Wi5wcm90b3R5cGUuX2Vycm9yQWxsUXVlcmllcz1cbmZ1bmN0aW9uKHIpe2xldCBlPWEodD0+e20ubmV4dFRpY2soKCk9Pnt0Lm5hdGl2ZT10aGlzLm5hdGl2ZSx0LmhhbmRsZUVycm9yKHIpfSl9LFxuXCJlbnF1ZXVlRXJyb3JcIik7dGhpcy5faGFzQWN0aXZlUXVlcnkoKSYmKGUodGhpcy5fYWN0aXZlUXVlcnkpLHRoaXMuX2FjdGl2ZVF1ZXJ5PVxubnVsbCksdGhpcy5fcXVlcnlRdWV1ZS5mb3JFYWNoKGUpLHRoaXMuX3F1ZXJ5UXVldWUubGVuZ3RoPTB9O1oucHJvdG90eXBlLl9jb25uZWN0PVxuZnVuY3Rpb24ocil7dmFyIGU9dGhpcztpZih0aGlzLl9jb25uZWN0aW5nKXttLm5leHRUaWNrKCgpPT5yKG5ldyBFcnJvcihcIkNsaWVudCBoXFxcbmFzIGFscmVhZHkgYmVlbiBjb25uZWN0ZWQuIFlvdSBjYW5ub3QgcmV1c2UgYSBjbGllbnQuXCIpKSk7cmV0dXJufXRoaXMuX2Nvbm5lY3Rpbmc9XG4hMCx0aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLmdldExpYnBxQ29ubmVjdGlvblN0cmluZyhmdW5jdGlvbih0LG4pe2lmKHQpcmV0dXJuIHIoXG50KTtlLm5hdGl2ZS5jb25uZWN0KG4sZnVuY3Rpb24oaSl7aWYoaSlyZXR1cm4gZS5uYXRpdmUuZW5kKCkscihpKTtlLl9jb25uZWN0ZWQ9ITAsXG5lLm5hdGl2ZS5vbihcImVycm9yXCIsZnVuY3Rpb24ocyl7ZS5fcXVlcnlhYmxlPSExLGUuX2Vycm9yQWxsUXVlcmllcyhzKSxlLmVtaXQoXCJlclxcXG5yb3JcIixzKX0pLGUubmF0aXZlLm9uKFwibm90aWZpY2F0aW9uXCIsZnVuY3Rpb24ocyl7ZS5lbWl0KFwibm90aWZpY2F0aW9uXCIse2NoYW5uZWw6cy5cbnJlbG5hbWUscGF5bG9hZDpzLmV4dHJhfSl9KSxlLmVtaXQoXCJjb25uZWN0XCIpLGUuX3B1bHNlUXVlcnlRdWV1ZSghMCkscigpfSl9KX07Wi5cbnByb3RvdHlwZS5jb25uZWN0PWZ1bmN0aW9uKHIpe2lmKHIpe3RoaXMuX2Nvbm5lY3Qocik7cmV0dXJufXJldHVybiBuZXcgdGhpcy5fUHJvbWlzZShcbihlLHQpPT57dGhpcy5fY29ubmVjdChuPT57bj90KG4pOmUoKX0pfSl9O1oucHJvdG90eXBlLnF1ZXJ5PWZ1bmN0aW9uKHIsZSx0KXt2YXIgbixcbmkscyxvLHU7aWYocj09bnVsbCl0aHJvdyBuZXcgVHlwZUVycm9yKFwiQ2xpZW50IHdhcyBwYXNzZWQgYSBudWxsIG9yIHVuZGVmaW5lZCBxdVxcXG5lcnlcIik7aWYodHlwZW9mIHIuc3VibWl0PT1cImZ1bmN0aW9uXCIpcz1yLnF1ZXJ5X3RpbWVvdXR8fHRoaXMuY29ubmVjdGlvblBhcmFtZXRlcnMuXG5xdWVyeV90aW1lb3V0LGk9bj1yLHR5cGVvZiBlPT1cImZ1bmN0aW9uXCImJihyLmNhbGxiYWNrPWUpO2Vsc2UgaWYocz10aGlzLmNvbm5lY3Rpb25QYXJhbWV0ZXJzLlxucXVlcnlfdGltZW91dCxuPW5ldyBqcyhyLGUsdCksIW4uY2FsbGJhY2spe2xldCBjLGg7aT1uZXcgdGhpcy5fUHJvbWlzZSgobCx5KT0+e2M9XG5sLGg9eX0pLG4uY2FsbGJhY2s9KGwseSk9Pmw/aChsKTpjKHkpfXJldHVybiBzJiYodT1uLmNhbGxiYWNrLG89c2V0VGltZW91dCgoKT0+e1xudmFyIGM9bmV3IEVycm9yKFwiUXVlcnkgcmVhZCB0aW1lb3V0XCIpO20ubmV4dFRpY2soKCk9PntuLmhhbmRsZUVycm9yKGMsdGhpcy5jb25uZWN0aW9uKX0pLFxudShjKSxuLmNhbGxiYWNrPSgpPT57fTt2YXIgaD10aGlzLl9xdWVyeVF1ZXVlLmluZGV4T2Yobik7aD4tMSYmdGhpcy5fcXVlcnlRdWV1ZS5cbnNwbGljZShoLDEpLHRoaXMuX3B1bHNlUXVlcnlRdWV1ZSgpfSxzKSxuLmNhbGxiYWNrPShjLGgpPT57Y2xlYXJUaW1lb3V0KG8pLHUoYyxoKX0pLFxudGhpcy5fcXVlcnlhYmxlP3RoaXMuX2VuZGluZz8obi5uYXRpdmU9dGhpcy5uYXRpdmUsbS5uZXh0VGljaygoKT0+e24uaGFuZGxlRXJyb3IoXG5uZXcgRXJyb3IoXCJDbGllbnQgd2FzIGNsb3NlZCBhbmQgaXMgbm90IHF1ZXJ5YWJsZVwiKSl9KSxpKToodGhpcy5fcXVlcnlRdWV1ZS5wdXNoKFxubiksdGhpcy5fcHVsc2VRdWVyeVF1ZXVlKCksaSk6KG4ubmF0aXZlPXRoaXMubmF0aXZlLG0ubmV4dFRpY2soKCk9PntuLmhhbmRsZUVycm9yKFxubmV3IEVycm9yKFwiQ2xpZW50IGhhcyBlbmNvdW50ZXJlZCBhIGNvbm5lY3Rpb24gZXJyb3IgYW5kIGlzIG5vdCBxdWVyeWFibGVcIikpfSksaSl9O1xuWi5wcm90b3R5cGUuZW5kPWZ1bmN0aW9uKHIpe3ZhciBlPXRoaXM7dGhpcy5fZW5kaW5nPSEwLHRoaXMuX2Nvbm5lY3RlZHx8dGhpcy5vbmNlKFxuXCJjb25uZWN0XCIsdGhpcy5lbmQuYmluZCh0aGlzLHIpKTt2YXIgdDtyZXR1cm4gcnx8KHQ9bmV3IHRoaXMuX1Byb21pc2UoZnVuY3Rpb24obixpKXtcbnI9YShzPT5zP2kocyk6bigpLFwiY2JcIil9KSksdGhpcy5uYXRpdmUuZW5kKGZ1bmN0aW9uKCl7ZS5fZXJyb3JBbGxRdWVyaWVzKG5ldyBFcnJvcihcblwiQ29ubmVjdGlvbiB0ZXJtaW5hdGVkXCIpKSxtLm5leHRUaWNrKCgpPT57ZS5lbWl0KFwiZW5kXCIpLHImJnIoKX0pfSksdH07Wi5wcm90b3R5cGUuXG5faGFzQWN0aXZlUXVlcnk9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fYWN0aXZlUXVlcnkmJnRoaXMuX2FjdGl2ZVF1ZXJ5LnN0YXRlIT09XCJcXFxuZXJyb3JcIiYmdGhpcy5fYWN0aXZlUXVlcnkuc3RhdGUhPT1cImVuZFwifTtaLnByb3RvdHlwZS5fcHVsc2VRdWVyeVF1ZXVlPWZ1bmN0aW9uKHIpe1xuaWYodGhpcy5fY29ubmVjdGVkJiYhdGhpcy5faGFzQWN0aXZlUXVlcnkoKSl7dmFyIGU9dGhpcy5fcXVlcnlRdWV1ZS5zaGlmdCgpO2lmKCFlKXtcbnJ8fHRoaXMuZW1pdChcImRyYWluXCIpO3JldHVybn10aGlzLl9hY3RpdmVRdWVyeT1lLGUuc3VibWl0KHRoaXMpO3ZhciB0PXRoaXM7ZS5vbmNlKFxuXCJfZG9uZVwiLGZ1bmN0aW9uKCl7dC5fcHVsc2VRdWVyeVF1ZXVlKCl9KX19O1oucHJvdG90eXBlLmNhbmNlbD1mdW5jdGlvbihyKXt0aGlzLlxuX2FjdGl2ZVF1ZXJ5PT09cj90aGlzLm5hdGl2ZS5jYW5jZWwoZnVuY3Rpb24oKXt9KTp0aGlzLl9xdWVyeVF1ZXVlLmluZGV4T2YocikhPT1cbi0xJiZ0aGlzLl9xdWVyeVF1ZXVlLnNwbGljZSh0aGlzLl9xdWVyeVF1ZXVlLmluZGV4T2YociksMSl9O1oucHJvdG90eXBlLnJlZj1mdW5jdGlvbigpe307XG5aLnByb3RvdHlwZS51bnJlZj1mdW5jdGlvbigpe307Wi5wcm90b3R5cGUuc2V0VHlwZVBhcnNlcj1mdW5jdGlvbihyLGUsdCl7cmV0dXJuIHRoaXMuXG5fdHlwZXMuc2V0VHlwZVBhcnNlcihyLGUsdCl9O1oucHJvdG90eXBlLmdldFR5cGVQYXJzZXI9ZnVuY3Rpb24ocixlKXtyZXR1cm4gdGhpcy5cbl90eXBlcy5nZXRUeXBlUGFyc2VyKHIsZSl9fSk7dmFyIHduPUkoKFNmLCRzKT0+e1widXNlIHN0cmljdFwiO3AoKTskcy5leHBvcnRzPUdzKCl9KTt2YXIgQXQ9SSgoRWYsbnQpPT57XCJ1c2Ugc3RyaWN0XCI7cCgpO3ZhciBNYz1McygpLERjPWV0KCksT2M9Y24oKSxrYz1EcygpLHtEYXRhYmFzZUVycm9yOlVjfT1vbigpLFxucWM9YShyPT57dmFyIGU7cmV0dXJuIGU9Y2xhc3MgZXh0ZW5kcyBrY3tjb25zdHJ1Y3RvcihuKXtzdXBlcihuLHIpfX0sYShlLFwiQm91bmRQXFxcbm9vbFwiKSxlfSxcInBvb2xGYWN0b3J5XCIpLGJuPWEoZnVuY3Rpb24ocil7dGhpcy5kZWZhdWx0cz1EYyx0aGlzLkNsaWVudD1yLHRoaXMuUXVlcnk9XG50aGlzLkNsaWVudC5RdWVyeSx0aGlzLlBvb2w9cWModGhpcy5DbGllbnQpLHRoaXMuX3Bvb2xzPVtdLHRoaXMuQ29ubmVjdGlvbj1PYyx0aGlzLlxudHlwZXM9WGUoKSx0aGlzLkRhdGFiYXNlRXJyb3I9VWN9LFwiUEdcIik7dHlwZW9mIG0uZW52Lk5PREVfUEdfRk9SQ0VfTkFUSVZFPFwidVwiP250LlxuZXhwb3J0cz1uZXcgYm4od24oKSk6KG50LmV4cG9ydHM9bmV3IGJuKE1jKSxPYmplY3QuZGVmaW5lUHJvcGVydHkobnQuZXhwb3J0cyxcIm5hXFxcbnRpdmVcIix7Y29uZmlndXJhYmxlOiEwLGVudW1lcmFibGU6ITEsZ2V0KCl7dmFyIHI9bnVsbDt0cnl7cj1uZXcgYm4od24oKSl9Y2F0Y2goZSl7XG5pZihlLmNvZGUhPT1cIk1PRFVMRV9OT1RfRk9VTkRcIil0aHJvdyBlfXJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkobnQuZXhwb3J0cyxcIlxcXG5uYXRpdmVcIix7dmFsdWU6cn0pLHJ9fSkpfSk7cCgpO3ZhciBDdD1XZShBdCgpKTt3dCgpO3AoKTtmcigpO3d0KCk7dmFyIHpzPVdlKHR0KCkpO3ZhciBTbj1jbGFzcyBTbiBleHRlbmRzIEVycm9ye2NvbnN0cnVjdG9yKCl7c3VwZXIoLi4uYXJndW1lbnRzKTtUKHRoaXMsXCJuYW1lXCIsXCJOXFxcbmVvbkRiRXJyb3JcIik7VCh0aGlzLFwiY29kZVwiLG51bGwpO1QodGhpcyxcInNvdXJjZUVycm9yXCIpfX07YShTbixcIk5lb25EYkVycm9yXCIpO3ZhciBBZT1TbixcbktzPVwidHJhbnNhY3Rpb24oKSBleHBlY3RzIGFuIGFycmF5IG9mIHF1ZXJpZXMsIG9yIGEgZnVuY3Rpb24gcmV0dXJuaW5nIGFuIGFycmF5IFxcXG5vZiBxdWVyaWVzXCI7ZnVuY3Rpb24gWXMocix7YXJyYXlNb2RlOmUsZnVsbFJlc3VsdHM6dCxmZXRjaE9wdGlvbnM6bixpc29sYXRpb25MZXZlbDppLFxucmVhZE9ubHk6cyxkZWZlcnJhYmxlOm8scXVlcnlDYWxsYmFjazp1LHJlc3VsdENhbGxiYWNrOmN9PXt9KXtpZighcil0aHJvdyBuZXcgRXJyb3IoXG5cIk5vIGRhdGFiYXNlIGNvbm5lY3Rpb24gc3RyaW5nIHdhcyBwcm92aWRlZCB0byBgbmVvbigpYC4gUGVyaGFwcyBhbiBlbnZpcm9ubWVudCBcXFxudmFyaWFibGUgaGFzIG5vdCBiZWVuIHNldD9cIik7bGV0IGg7dHJ5e2g9bHIocil9Y2F0Y2h7dGhyb3cgbmV3IEVycm9yKFwiRGF0YWJhc2UgY1xcXG5vbm5lY3Rpb24gc3RyaW5nIHByb3ZpZGVkIHRvIGBuZW9uKClgIGlzIG5vdCBhIHZhbGlkIFVSTC4gQ29ubmVjdGlvbiBzdHJpbmc6IFwiK1N0cmluZyhcbnIpKX1sZXR7cHJvdG9jb2w6bCx1c2VybmFtZTp5LHBhc3N3b3JkOkUsaG9zdG5hbWU6Xyxwb3J0OlAscGF0aG5hbWU6Tn09aDtpZihsIT09XG5cInBvc3RncmVzOlwiJiZsIT09XCJwb3N0Z3Jlc3FsOlwifHwheXx8IUV8fCFffHwhTil0aHJvdyBuZXcgRXJyb3IoXCJEYXRhYmFzZSBjb25uZWN0XFxcbmlvbiBzdHJpbmcgZm9ybWF0IGZvciBgbmVvbigpYCBzaG91bGQgYmU6IHBvc3RncmVzcWw6Ly91c2VyOnBhc3N3b3JkQGhvc3QudGxkL2RiXFxcbm5hbWU/b3B0aW9uPXZhbHVlXCIpO2Z1bmN0aW9uIEooQSwuLi5nKXtsZXQgRCxIO2lmKHR5cGVvZiBBPT1cInN0cmluZ1wiKUQ9QSxIPWdbMV0sXG5nPWdbMF0/P1tdO2Vsc2V7RD1cIlwiO2ZvcihsZXQgVz0wO1c8QS5sZW5ndGg7VysrKUQrPUFbV10sVzxnLmxlbmd0aCYmKEQrPVwiJFwiKyhXKzEpKX1cbmc9Zy5tYXAoVz0+KDAsenMucHJlcGFyZVZhbHVlKShXKSk7bGV0IFE9e3F1ZXJ5OkQscGFyYW1zOmd9O3JldHVybiB1JiZ1KFEpLE5jKHBlLFxuUSxIKX1hKEosXCJyZXNvbHZlXCIpLEoudHJhbnNhY3Rpb249YXN5bmMoQSxnKT0+e2lmKHR5cGVvZiBBPT1cImZ1bmN0aW9uXCImJihBPUEoSikpLFxuIUFycmF5LmlzQXJyYXkoQSkpdGhyb3cgbmV3IEVycm9yKEtzKTtsZXQgRD1BLm1hcChIPT57aWYoSFtTeW1ib2wudG9TdHJpbmdUYWddIT09XG5cIk5lb25RdWVyeVByb21pc2VcIil0aHJvdyBuZXcgRXJyb3IoS3MpO3JldHVybiBILnBhcmFtZXRlcml6ZWRRdWVyeX0pO3JldHVybiBwZShELFxuZyl9O2FzeW5jIGZ1bmN0aW9uIHBlKEEsZyl7bGV0IEQ9bj8/e30se2ZldGNoRW5kcG9pbnQ6SCxmZXRjaENvbm5lY3Rpb25DYWNoZTpRLGZldGNoRnVuY3Rpb246V309X2UsXG51ZT10eXBlb2YgSD09XCJmdW5jdGlvblwiP0goXyxQKTpILGRlPUFycmF5LmlzQXJyYXkoQSk/e3F1ZXJpZXM6QX06QSxMPWU/PyExLEc9dD8/XG4hMSxjZT1pLHllPXMseGU9bztnIT09dm9pZCAwJiYoZy5hcnJheU1vZGUhPT12b2lkIDAmJihMPWcuYXJyYXlNb2RlKSxnLmZ1bGxSZXN1bHRzIT09XG52b2lkIDAmJihHPWcuZnVsbFJlc3VsdHMpLGcuZmV0Y2hPcHRpb25zIT09dm9pZCAwJiYoRD17Li4uRCwuLi5nLmZldGNoT3B0aW9uc30pLFxuZy5pc29sYXRpb25MZXZlbCE9PXZvaWQgMCYmKGNlPWcuaXNvbGF0aW9uTGV2ZWwpLGcucmVhZE9ubHkhPT12b2lkIDAmJih5ZT1nLnJlYWRPbmx5KSxcbmcuZGVmZXJyYWJsZSE9PXZvaWQgMCYmKHhlPWcuZGVmZXJyYWJsZSkpO2xldCBoZT17XCJOZW9uLUNvbm5lY3Rpb24tU3RyaW5nXCI6cixcIk5lXFxcbm9uLVJhdy1UZXh0LU91dHB1dFwiOlwidHJ1ZVwiLFwiTmVvbi1BcnJheS1Nb2RlXCI6XCJ0cnVlXCJ9O1E9PT0hMCYmKGhlW1wiTmVvbi1Qb29sLU9wdC1cXFxuSW5cIl09XCJ0cnVlXCIpLEFycmF5LmlzQXJyYXkoQSkmJihjZSE9PXZvaWQgMCYmKGhlW1wiTmVvbi1CYXRjaC1Jc29sYXRpb24tTGV2ZWxcIl09Y2UpLFxueWUhPT12b2lkIDAmJihoZVtcIk5lb24tQmF0Y2gtUmVhZC1Pbmx5XCJdPVN0cmluZyh5ZSkpLHhlIT09dm9pZCAwJiYoaGVbXCJOZW9uLUJhdGNcXFxuaC1EZWZlcnJhYmxlXCJdPVN0cmluZyh4ZSkpKTtsZXQgaWU7dHJ5e2llPWF3YWl0KFc/P2ZldGNoKSh1ZSx7bWV0aG9kOlwiUE9TVFwiLGJvZHk6SlNPTi5cbnN0cmluZ2lmeShkZSksaGVhZGVyczpoZSwuLi5EfSl9Y2F0Y2goc2Upe2xldCAkPW5ldyBBZShgRXJyb3IgY29ubmVjdGluZyB0byBkYXRhXFxcbmJhc2U6ICR7c2UubWVzc2FnZX1gKTt0aHJvdyAkLnNvdXJjZUVycm9yPXNlLCR9aWYoaWUub2spe2xldCBzZT1hd2FpdCBpZS5qc29uKCk7XG5pZihBcnJheS5pc0FycmF5KEEpKXtsZXQgJD1zZS5yZXN1bHRzO2lmKCFBcnJheS5pc0FycmF5KCQpKXRocm93IG5ldyBBZShcIk5lb24gaW5cXFxudGVybmFsIGVycm9yOiB1bmV4cGVjdGVkIHJlc3VsdCBmb3JtYXRcIik7cmV0dXJuICQubWFwKChuZSxDZSk9PlZzKG5lLHthcnJheU1vZGU6TCxcbmZ1bGxSZXN1bHRzOkcscGFyYW1ldGVyaXplZFF1ZXJ5OkFbQ2VdLHJlc3VsdENhbGxiYWNrOmN9KSl9ZWxzZSByZXR1cm4gVnMoc2Use2FycmF5TW9kZTpMLFxuZnVsbFJlc3VsdHM6RyxwYXJhbWV0ZXJpemVkUXVlcnk6QSxyZXN1bHRDYWxsYmFjazpjfSl9ZWxzZXtsZXR7c3RhdHVzOnNlfT1pZTtpZihzZT09PVxuNDAwKXtsZXR7bWVzc2FnZTokLGNvZGU6bmV9PWF3YWl0IGllLmpzb24oKSxDZT1uZXcgQWUoJCk7dGhyb3cgQ2UuY29kZT1uZSxDZX1lbHNle1xubGV0ICQ9YXdhaXQgaWUudGV4dCgpO3Rocm93IG5ldyBBZShgU2VydmVyIGVycm9yIChIVFRQIHN0YXR1cyAke3NlfSk6ICR7JH1gKX19fXJldHVybiBhKFxucGUsXCJleGVjdXRlXCIpLEp9YShZcyxcIm5lb25cIik7ZnVuY3Rpb24gTmMocixlLHQpe3JldHVybntbU3ltYm9sLnRvU3RyaW5nVGFnXTpcIk5lb1xcXG5uUXVlcnlQcm9taXNlXCIscGFyYW1ldGVyaXplZFF1ZXJ5OmUsb3B0czp0LHRoZW46KG4saSk9PnIoZSx0KS50aGVuKG4saSksY2F0Y2g6bj0+cihcbmUsdCkuY2F0Y2gobiksZmluYWxseTpuPT5yKGUsdCkuZmluYWxseShuKX19YShOYyxcImNyZWF0ZU5lb25RdWVyeVByb21pc2VcIik7ZnVuY3Rpb24gVnMocix7XG5hcnJheU1vZGU6ZSxmdWxsUmVzdWx0czp0LHBhcmFtZXRlcml6ZWRRdWVyeTpuLHJlc3VsdENhbGxiYWNrOml9KXtsZXQgcz1yLmZpZWxkcy5cbm1hcChjPT5jLm5hbWUpLG89ci5maWVsZHMubWFwKGM9PlNlLnR5cGVzLmdldFR5cGVQYXJzZXIoYy5kYXRhVHlwZUlEKSksdT1lPT09ITA/XG5yLnJvd3MubWFwKGM9PmMubWFwKChoLGwpPT5oPT09bnVsbD9udWxsOm9bbF0oaCkpKTpyLnJvd3MubWFwKGM9Pk9iamVjdC5mcm9tRW50cmllcyhcbmMubWFwKChoLGwpPT5bc1tsXSxoPT09bnVsbD9udWxsOm9bbF0oaCldKSkpO3JldHVybiBpJiZpKG4scix1LHthcnJheU1vZGU6ZSxmdWxsUmVzdWx0czp0fSksXG50PyhyLnZpYU5lb25GZXRjaD0hMCxyLnJvd0FzQXJyYXk9ZSxyLnJvd3M9dSxyKTp1fWEoVnMsXCJwcm9jZXNzUXVlcnlSZXN1bHRcIik7dmFyIEpzPVdlKGd0KCkpLFNlPVdlKEF0KCkpO3ZhciBFbj1jbGFzcyBFbiBleHRlbmRzIEN0LkNsaWVudHtjb25zdHJ1Y3Rvcih0KXtzdXBlcih0KTt0aGlzLmNvbmZpZz10fWdldCBuZW9uQ29uZmlnKCl7XG5yZXR1cm4gdGhpcy5jb25uZWN0aW9uLnN0cmVhbX1jb25uZWN0KHQpe2xldHtuZW9uQ29uZmlnOm59PXRoaXM7bi5mb3JjZURpc2FibGVQZ1NTTCYmXG4odGhpcy5zc2w9dGhpcy5jb25uZWN0aW9uLnNzbD0hMSksdGhpcy5zc2wmJm4udXNlU2VjdXJlV2ViU29ja2V0JiZjb25zb2xlLndhcm4oXCJcXFxuU1NMIGlzIGVuYWJsZWQgZm9yIGJvdGggUG9zdGdyZXMgKGUuZy4gP3NzbG1vZGU9cmVxdWlyZSBpbiB0aGUgY29ubmVjdGlvbiBzdHJpbmdcXFxuICsgZm9yY2VEaXNhYmxlUGdTU0wgPSBmYWxzZSkgYW5kIHRoZSBXZWJTb2NrZXQgdHVubmVsICh1c2VTZWN1cmVXZWJTb2NrZXQgPSB0cnVcXFxuZSkuIERvdWJsZSBlbmNyeXB0aW9uIHdpbGwgaW5jcmVhc2UgbGF0ZW5jeSBhbmQgQ1BVIHVzYWdlLiBJdCBtYXkgYmUgYXBwcm9wcmlhdGVcXFxuIHRvIGRpc2FibGUgU1NMIGluIHRoZSBQb3N0Z3JlcyBjb25uZWN0aW9uIHBhcmFtZXRlcnMgb3Igc2V0IGZvcmNlRGlzYWJsZVBnU1NMID1cXFxuIHRydWUuXCIpO2xldCBpPXRoaXMuY29uZmlnPy5ob3N0IT09dm9pZCAwfHx0aGlzLmNvbmZpZz8uY29ubmVjdGlvblN0cmluZyE9PXZvaWQgMHx8XG5tLmVudi5QR0hPU1QhPT12b2lkIDAscz1tLmVudi5VU0VSPz9tLmVudi5VU0VSTkFNRTtpZighaSYmdGhpcy5ob3N0PT09XCJsb2NhbGhvc3RcIiYmXG50aGlzLnVzZXI9PT1zJiZ0aGlzLmRhdGFiYXNlPT09cyYmdGhpcy5wYXNzd29yZD09PW51bGwpdGhyb3cgbmV3IEVycm9yKGBObyBkYXRhYlxcXG5hc2UgaG9zdCBvciBjb25uZWN0aW9uIHN0cmluZyB3YXMgc2V0LCBhbmQga2V5IHBhcmFtZXRlcnMgaGF2ZSBkZWZhdWx0IHZhbHVlcyAoaFxcXG5vc3Q6IGxvY2FsaG9zdCwgdXNlcjogJHtzfSwgZGI6ICR7c30sIHBhc3N3b3JkOiBudWxsKS4gSXMgYW4gZW52aXJvbm1lbnQgdmFyaWFibFxcXG5lIG1pc3Npbmc/IEFsdGVybmF0aXZlbHksIGlmIHlvdSBpbnRlbmRlZCB0byBjb25uZWN0IHdpdGggdGhlc2UgcGFyYW1ldGVycywgcGxlYVxcXG5zZSBzZXQgdGhlIGhvc3QgdG8gJ2xvY2FsaG9zdCcgZXhwbGljaXRseS5gKTtsZXQgbz1zdXBlci5jb25uZWN0KHQpLHU9bi5waXBlbGluZVRMUyYmXG50aGlzLnNzbCxjPW4ucGlwZWxpbmVDb25uZWN0PT09XCJwYXNzd29yZFwiO2lmKCF1JiYhbi5waXBlbGluZUNvbm5lY3QpcmV0dXJuIG87bGV0IGg9dGhpcy5cbmNvbm5lY3Rpb247aWYodSYmaC5vbihcImNvbm5lY3RcIiwoKT0+aC5zdHJlYW0uZW1pdChcImRhdGFcIixcIlNcIikpLGMpe2gucmVtb3ZlQWxsTGlzdGVuZXJzKFxuXCJhdXRoZW50aWNhdGlvbkNsZWFydGV4dFBhc3N3b3JkXCIpLGgucmVtb3ZlQWxsTGlzdGVuZXJzKFwicmVhZHlGb3JRdWVyeVwiKSxoLm9uY2UoXG5cInJlYWR5Rm9yUXVlcnlcIiwoKT0+aC5vbihcInJlYWR5Rm9yUXVlcnlcIix0aGlzLl9oYW5kbGVSZWFkeUZvclF1ZXJ5LmJpbmQodGhpcykpKTtcbmxldCBsPXRoaXMuc3NsP1wic3NsY29ubmVjdFwiOlwiY29ubmVjdFwiO2gub24obCwoKT0+e3RoaXMuX2hhbmRsZUF1dGhDbGVhcnRleHRQYXNzd29yZCgpLFxudGhpcy5faGFuZGxlUmVhZHlGb3JRdWVyeSgpfSl9cmV0dXJuIG99YXN5bmMgX2hhbmRsZUF1dGhTQVNMQ29udGludWUodCl7bGV0IG49dGhpcy5cbnNhc2xTZXNzaW9uLGk9dGhpcy5wYXNzd29yZCxzPXQuZGF0YTtpZihuLm1lc3NhZ2UhPT1cIlNBU0xJbml0aWFsUmVzcG9uc2VcInx8dHlwZW9mIGkhPVxuXCJzdHJpbmdcInx8dHlwZW9mIHMhPVwic3RyaW5nXCIpdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogcHJvdG9jb2wgZXJyb3JcIik7bGV0IG89T2JqZWN0LlxuZnJvbUVudHJpZXMocy5zcGxpdChcIixcIikubWFwKCQ9PntpZighL14uPS8udGVzdCgkKSl0aHJvdyBuZXcgRXJyb3IoXCJTQVNMOiBJbnZhbGlcXFxuZCBhdHRyaWJ1dGUgcGFpciBlbnRyeVwiKTtsZXQgbmU9JFswXSxDZT0kLnN1YnN0cmluZygyKTtyZXR1cm5bbmUsQ2VdfSkpLHU9by5yLGM9by5cbnMsaD1vLmk7aWYoIXV8fCEvXlshLSstLX5dKyQvLnRlc3QodSkpdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU0NSQU0tU0VSVkVSLUZJUlNULVxcXG5NRVNTQUdFOiBub25jZSBtaXNzaW5nL3VucHJpbnRhYmxlXCIpO2lmKCFjfHwhL14oPzpbYS16QS1aMC05Ky9dezR9KSooPzpbYS16QS1aMC05Ky9dezJ9PT18W2EtekEtWjAtOSsvXXszfT0pPyQvLlxudGVzdChjKSl0aHJvdyBuZXcgRXJyb3IoXCJTQVNMOiBTQ1JBTS1TRVJWRVItRklSU1QtTUVTU0FHRTogc2FsdCBtaXNzaW5nL25vdCBiYXNlXFxcbjY0XCIpO2lmKCFofHwhL15bMS05XVswLTldKiQvLnRlc3QoaCkpdGhyb3cgbmV3IEVycm9yKFwiU0FTTDogU0NSQU0tU0VSVkVSLUZJUlNULU1cXFxuRVNTQUdFOiBtaXNzaW5nL2ludmFsaWQgaXRlcmF0aW9uIGNvdW50XCIpO2lmKCF1LnN0YXJ0c1dpdGgobi5jbGllbnROb25jZSkpdGhyb3cgbmV3IEVycm9yKFxuXCJTQVNMOiBTQ1JBTS1TRVJWRVItRklSU1QtTUVTU0FHRTogc2VydmVyIG5vbmNlIGRvZXMgbm90IHN0YXJ0IHdpdGggY2xpZW50IG5vbmNlXCIpO1xuaWYodS5sZW5ndGg9PT1uLmNsaWVudE5vbmNlLmxlbmd0aCl0aHJvdyBuZXcgRXJyb3IoXCJTQVNMOiBTQ1JBTS1TRVJWRVItRklSU1QtTUVTXFxcblNBR0U6IHNlcnZlciBub25jZSBpcyB0b28gc2hvcnRcIik7bGV0IGw9cGFyc2VJbnQoaCwxMCkseT1kLmZyb20oYyxcImJhc2U2NFwiKSxFPW5ldyBUZXh0RW5jb2Rlcixcbl89RS5lbmNvZGUoaSksUD1hd2FpdCB3LnN1YnRsZS5pbXBvcnRLZXkoXCJyYXdcIixfLHtuYW1lOlwiSE1BQ1wiLGhhc2g6e25hbWU6XCJTSEEtMjVcXFxuNlwifX0sITEsW1wic2lnblwiXSksTj1uZXcgVWludDhBcnJheShhd2FpdCB3LnN1YnRsZS5zaWduKFwiSE1BQ1wiLFAsZC5jb25jYXQoW3ksZC5mcm9tKFxuWzAsMCwwLDFdKV0pKSksSj1OO2Zvcih2YXIgcGU9MDtwZTxsLTE7cGUrKylOPW5ldyBVaW50OEFycmF5KGF3YWl0IHcuc3VidGxlLnNpZ24oXG5cIkhNQUNcIixQLE4pKSxKPWQuZnJvbShKLm1hcCgoJCxuZSk9PkpbbmVdXk5bbmVdKSk7bGV0IEE9SixnPWF3YWl0IHcuc3VidGxlLmltcG9ydEtleShcblwicmF3XCIsQSx7bmFtZTpcIkhNQUNcIixoYXNoOntuYW1lOlwiU0hBLTI1NlwifX0sITEsW1wic2lnblwiXSksRD1uZXcgVWludDhBcnJheShhd2FpdCB3Llxuc3VidGxlLnNpZ24oXCJITUFDXCIsZyxFLmVuY29kZShcIkNsaWVudCBLZXlcIikpKSxIPWF3YWl0IHcuc3VidGxlLmRpZ2VzdChcIlNIQS0yNTZcIixcbkQpLFE9XCJuPSoscj1cIituLmNsaWVudE5vbmNlLFc9XCJyPVwiK3UrXCIscz1cIitjK1wiLGk9XCIrbCx1ZT1cImM9Yml3cyxyPVwiK3UsZGU9UStcIixcIitXK1xuXCIsXCIrdWUsTD1hd2FpdCB3LnN1YnRsZS5pbXBvcnRLZXkoXCJyYXdcIixILHtuYW1lOlwiSE1BQ1wiLGhhc2g6e25hbWU6XCJTSEEtMjU2XCJ9fSwhMSxcbltcInNpZ25cIl0pO3ZhciBHPW5ldyBVaW50OEFycmF5KGF3YWl0IHcuc3VidGxlLnNpZ24oXCJITUFDXCIsTCxFLmVuY29kZShkZSkpKSxjZT1kLlxuZnJvbShELm1hcCgoJCxuZSk9PkRbbmVdXkdbbmVdKSkseWU9Y2UudG9TdHJpbmcoXCJiYXNlNjRcIik7bGV0IHhlPWF3YWl0IHcuc3VidGxlLlxuaW1wb3J0S2V5KFwicmF3XCIsQSx7bmFtZTpcIkhNQUNcIixoYXNoOntuYW1lOlwiU0hBLTI1NlwifX0sITEsW1wic2lnblwiXSksaGU9YXdhaXQgdy5zdWJ0bGUuXG5zaWduKFwiSE1BQ1wiLHhlLEUuZW5jb2RlKFwiU2VydmVyIEtleVwiKSksaWU9YXdhaXQgdy5zdWJ0bGUuaW1wb3J0S2V5KFwicmF3XCIsaGUse25hbWU6XCJcXFxuSE1BQ1wiLGhhc2g6e25hbWU6XCJTSEEtMjU2XCJ9fSwhMSxbXCJzaWduXCJdKTt2YXIgc2U9ZC5mcm9tKGF3YWl0IHcuc3VidGxlLnNpZ24oXCJITUFcXFxuQ1wiLGllLEUuZW5jb2RlKGRlKSkpO24ubWVzc2FnZT1cIlNBU0xSZXNwb25zZVwiLG4uc2VydmVyU2lnbmF0dXJlPXNlLnRvU3RyaW5nKFwiYmFzXFxcbmU2NFwiKSxuLnJlc3BvbnNlPXVlK1wiLHA9XCIreWUsdGhpcy5jb25uZWN0aW9uLnNlbmRTQ1JBTUNsaWVudEZpbmFsTWVzc2FnZSh0aGlzLnNhc2xTZXNzaW9uLlxucmVzcG9uc2UpfX07YShFbixcIk5lb25DbGllbnRcIik7dmFyIHhuPUVuO2Z1bmN0aW9uIFFjKHIsZSl7aWYoZSlyZXR1cm57Y2FsbGJhY2s6ZSxcbnJlc3VsdDp2b2lkIDB9O2xldCB0LG4saT1hKGZ1bmN0aW9uKG8sdSl7bz90KG8pOm4odSl9LFwiY2JcIikscz1uZXcgcihmdW5jdGlvbihvLHUpe1xubj1vLHQ9dX0pO3JldHVybntjYWxsYmFjazppLHJlc3VsdDpzfX1hKFFjLFwicHJvbWlzaWZ5XCIpO3ZhciB2bj1jbGFzcyB2biBleHRlbmRzIEN0LlBvb2x7Y29uc3RydWN0b3IoKXtcbnN1cGVyKC4uLmFyZ3VtZW50cyk7VCh0aGlzLFwiQ2xpZW50XCIseG4pO1QodGhpcyxcImhhc0ZldGNoVW5zdXBwb3J0ZWRMaXN0ZW5lcnNcIiwhMSl9b24odCxuKXtcbnJldHVybiB0IT09XCJlcnJvclwiJiYodGhpcy5oYXNGZXRjaFVuc3VwcG9ydGVkTGlzdGVuZXJzPSEwKSxzdXBlci5vbih0LG4pfXF1ZXJ5KHQsbixpKXtcbmlmKCFfZS5wb29sUXVlcnlWaWFGZXRjaHx8dGhpcy5oYXNGZXRjaFVuc3VwcG9ydGVkTGlzdGVuZXJzfHx0eXBlb2YgdD09XCJmdW5jdGlvblwiKVxucmV0dXJuIHN1cGVyLnF1ZXJ5KHQsbixpKTt0eXBlb2Ygbj09XCJmdW5jdGlvblwiJiYoaT1uLG49dm9pZCAwKTtsZXQgcz1RYyh0aGlzLlByb21pc2UsXG5pKTtpPXMuY2FsbGJhY2s7dHJ5e2xldCBvPW5ldyBKcy5kZWZhdWx0KHRoaXMub3B0aW9ucyksdT1lbmNvZGVVUklDb21wb25lbnQsYz1lbmNvZGVVUkksXG5oPWBwb3N0Z3Jlc3FsOi8vJHt1KG8udXNlcil9OiR7dShvLnBhc3N3b3JkKX1AJHt1KG8uaG9zdCl9LyR7YyhvLmRhdGFiYXNlKX1gLGw9dHlwZW9mIHQ9PVxuXCJzdHJpbmdcIj90OnQudGV4dCx5PW4/P3QudmFsdWVzPz9bXTtZcyhoLHtmdWxsUmVzdWx0czohMCxhcnJheU1vZGU6dC5yb3dNb2RlPT09XCJcXFxuYXJyYXlcIn0pKGwseSkudGhlbihfPT5pKHZvaWQgMCxfKSkuY2F0Y2goXz0+aShfKSl9Y2F0Y2gobyl7aShvKX1yZXR1cm4gcy5yZXN1bHR9fTtcbmEodm4sXCJOZW9uUG9vbFwiKTt2YXIgWnM9dm47dmFyIGV4cG9ydF9DbGllbnRCYXNlPVNlLkNsaWVudEJhc2U7dmFyIGV4cG9ydF9Db25uZWN0aW9uPVNlLkNvbm5lY3Rpb247dmFyIGV4cG9ydF9EYXRhYmFzZUVycm9yPVNlLkRhdGFiYXNlRXJyb3I7XG52YXIgZXhwb3J0X1F1ZXJ5PVNlLlF1ZXJ5O3ZhciBleHBvcnRfZGVmYXVsdHM9U2UuZGVmYXVsdHM7dmFyIGV4cG9ydF90eXBlcz1TZS50eXBlcztcbmV4cG9ydHt4biBhcyBDbGllbnQsZXhwb3J0X0NsaWVudEJhc2UgYXMgQ2xpZW50QmFzZSxleHBvcnRfQ29ubmVjdGlvbiBhcyBDb25uZWN0aW9uLFxuZXhwb3J0X0RhdGFiYXNlRXJyb3IgYXMgRGF0YWJhc2VFcnJvcixBZSBhcyBOZW9uRGJFcnJvcixacyBhcyBQb29sLGV4cG9ydF9RdWVyeSBhcyBRdWVyeSxcbmV4cG9ydF9kZWZhdWx0cyBhcyBkZWZhdWx0cyxZcyBhcyBuZW9uLF9lIGFzIG5lb25Db25maWcsZXhwb3J0X3R5cGVzIGFzIHR5cGVzfTtcbi8qISBCdW5kbGVkIGxpY2Vuc2UgaW5mb3JtYXRpb246XG5cbmllZWU3NTQvaW5kZXguanM6XG4gICgqISBpZWVlNzU0LiBCU0QtMy1DbGF1c2UgTGljZW5zZS4gRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnL29wZW5zb3VyY2U+ICopXG5cbmJ1ZmZlci9pbmRleC5qczpcbiAgKCohXG4gICAqIFRoZSBidWZmZXIgbW9kdWxlIGZyb20gbm9kZS5qcywgZm9yIHRoZSBicm93c2VyLlxuICAgKlxuICAgKiBAYXV0aG9yICAgRmVyb3NzIEFib3VraGFkaWplaCA8aHR0cHM6Ly9mZXJvc3Mub3JnPlxuICAgKiBAbGljZW5zZSAgTUlUXG4gICAqKVxuKi9cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/@neondatabase/serverless/index.mjs\n");

/***/ })

};
;